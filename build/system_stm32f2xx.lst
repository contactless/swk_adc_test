ARM GAS  /tmp/ccld9Hmr.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32f2xx.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemInit,"ax",%progbits
  16              		.align	1
  17              		.global	SystemInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	SystemInit:
  24              	.LFB66:
  25              		.file 1 "Src/system_stm32f2xx.c"
   1:Src/system_stm32f2xx.c **** /**
   2:Src/system_stm32f2xx.c ****   ******************************************************************************
   3:Src/system_stm32f2xx.c ****   * @file    system_stm32f2xx.c
   4:Src/system_stm32f2xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32f2xx.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   6:Src/system_stm32f2xx.c ****   *             
   7:Src/system_stm32f2xx.c ****   *   This file provides two functions and one global variable to be called from 
   8:Src/system_stm32f2xx.c ****   *   user application:
   9:Src/system_stm32f2xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:Src/system_stm32f2xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32f2xx.c ****   *                      the "startup_stm32f2xx.s" file.
  12:Src/system_stm32f2xx.c ****   *
  13:Src/system_stm32f2xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32f2xx.c ****   *                                  by the user application to setup the SysTick 
  15:Src/system_stm32f2xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32f2xx.c ****   *                                     
  17:Src/system_stm32f2xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32f2xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32f2xx.c ****   *                                 during program execution.
  20:Src/system_stm32f2xx.c ****   *
  21:Src/system_stm32f2xx.c ****   ******************************************************************************
  22:Src/system_stm32f2xx.c ****   * @attention
  23:Src/system_stm32f2xx.c ****   *
  24:Src/system_stm32f2xx.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
  25:Src/system_stm32f2xx.c ****   *
  26:Src/system_stm32f2xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Src/system_stm32f2xx.c ****   * are permitted provided that the following conditions are met:
  28:Src/system_stm32f2xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Src/system_stm32f2xx.c ****   *      this list of conditions and the following disclaimer.
  30:Src/system_stm32f2xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:Src/system_stm32f2xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:Src/system_stm32f2xx.c ****   *      and/or other materials provided with the distribution.
  33:Src/system_stm32f2xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
ARM GAS  /tmp/ccld9Hmr.s 			page 2


  34:Src/system_stm32f2xx.c ****   *      may be used to endorse or promote products derived from this software
  35:Src/system_stm32f2xx.c ****   *      without specific prior written permission.
  36:Src/system_stm32f2xx.c ****   *
  37:Src/system_stm32f2xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Src/system_stm32f2xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Src/system_stm32f2xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Src/system_stm32f2xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Src/system_stm32f2xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Src/system_stm32f2xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Src/system_stm32f2xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Src/system_stm32f2xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Src/system_stm32f2xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Src/system_stm32f2xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Src/system_stm32f2xx.c ****   *
  48:Src/system_stm32f2xx.c ****   ******************************************************************************
  49:Src/system_stm32f2xx.c ****   */
  50:Src/system_stm32f2xx.c **** 
  51:Src/system_stm32f2xx.c **** /** @addtogroup CMSIS
  52:Src/system_stm32f2xx.c ****   * @{
  53:Src/system_stm32f2xx.c ****   */
  54:Src/system_stm32f2xx.c **** 
  55:Src/system_stm32f2xx.c **** /** @addtogroup stm32f2xx_system
  56:Src/system_stm32f2xx.c ****   * @{
  57:Src/system_stm32f2xx.c ****   */  
  58:Src/system_stm32f2xx.c ****   
  59:Src/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_Includes
  60:Src/system_stm32f2xx.c ****   * @{
  61:Src/system_stm32f2xx.c ****   */
  62:Src/system_stm32f2xx.c **** 
  63:Src/system_stm32f2xx.c **** #include "stm32f2xx.h"
  64:Src/system_stm32f2xx.c **** 
  65:Src/system_stm32f2xx.c **** #if !defined  (HSE_VALUE) 
  66:Src/system_stm32f2xx.c ****   #define HSE_VALUE    ((uint32_t)25000000) /*!< Default value of the External oscillator in Hz */
  67:Src/system_stm32f2xx.c **** #endif /* HSE_VALUE */
  68:Src/system_stm32f2xx.c **** 
  69:Src/system_stm32f2xx.c **** #if !defined  (HSI_VALUE)
  70:Src/system_stm32f2xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  71:Src/system_stm32f2xx.c **** #endif /* HSI_VALUE */
  72:Src/system_stm32f2xx.c **** 
  73:Src/system_stm32f2xx.c **** /**
  74:Src/system_stm32f2xx.c ****   * @}
  75:Src/system_stm32f2xx.c ****   */
  76:Src/system_stm32f2xx.c **** 
  77:Src/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_TypesDefinitions
  78:Src/system_stm32f2xx.c ****   * @{
  79:Src/system_stm32f2xx.c ****   */
  80:Src/system_stm32f2xx.c **** 
  81:Src/system_stm32f2xx.c **** /**
  82:Src/system_stm32f2xx.c ****   * @}
  83:Src/system_stm32f2xx.c ****   */
  84:Src/system_stm32f2xx.c **** 
  85:Src/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_Defines
  86:Src/system_stm32f2xx.c ****   * @{
  87:Src/system_stm32f2xx.c ****   */
  88:Src/system_stm32f2xx.c **** /************************* Miscellaneous Configuration ************************/
  89:Src/system_stm32f2xx.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
  90:Src/system_stm32f2xx.c ****      on STM322xG_EVAL board as data memory  */
ARM GAS  /tmp/ccld9Hmr.s 			page 3


  91:Src/system_stm32f2xx.c **** /* #define DATA_IN_ExtSRAM */
  92:Src/system_stm32f2xx.c **** 
  93:Src/system_stm32f2xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  94:Src/system_stm32f2xx.c ****      Internal SRAM. */
  95:Src/system_stm32f2xx.c **** /* #define VECT_TAB_SRAM */
  96:Src/system_stm32f2xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
  97:Src/system_stm32f2xx.c ****                                    This value must be a multiple of 0x200. */
  98:Src/system_stm32f2xx.c **** /******************************************************************************/
  99:Src/system_stm32f2xx.c **** 
 100:Src/system_stm32f2xx.c **** /**
 101:Src/system_stm32f2xx.c ****   * @}
 102:Src/system_stm32f2xx.c ****   */
 103:Src/system_stm32f2xx.c **** 
 104:Src/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_Macros
 105:Src/system_stm32f2xx.c ****   * @{
 106:Src/system_stm32f2xx.c ****   */
 107:Src/system_stm32f2xx.c **** 
 108:Src/system_stm32f2xx.c **** /**
 109:Src/system_stm32f2xx.c ****   * @}
 110:Src/system_stm32f2xx.c ****   */
 111:Src/system_stm32f2xx.c **** 
 112:Src/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_Variables
 113:Src/system_stm32f2xx.c ****   * @{
 114:Src/system_stm32f2xx.c ****   */
 115:Src/system_stm32f2xx.c ****   
 116:Src/system_stm32f2xx.c ****   /* This variable can be updated in Three ways :
 117:Src/system_stm32f2xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 118:Src/system_stm32f2xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 119:Src/system_stm32f2xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 120:Src/system_stm32f2xx.c ****          Note: If you use this function to configure the system clock; then there
 121:Src/system_stm32f2xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 122:Src/system_stm32f2xx.c ****                variable is updated automatically.
 123:Src/system_stm32f2xx.c ****   */
 124:Src/system_stm32f2xx.c ****   uint32_t SystemCoreClock = 16000000;
 125:Src/system_stm32f2xx.c ****   const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 126:Src/system_stm32f2xx.c ****   const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 127:Src/system_stm32f2xx.c **** /**
 128:Src/system_stm32f2xx.c ****   * @}
 129:Src/system_stm32f2xx.c ****   */
 130:Src/system_stm32f2xx.c **** 
 131:Src/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_FunctionPrototypes
 132:Src/system_stm32f2xx.c ****   * @{
 133:Src/system_stm32f2xx.c ****   */
 134:Src/system_stm32f2xx.c **** 
 135:Src/system_stm32f2xx.c **** #ifdef DATA_IN_ExtSRAM
 136:Src/system_stm32f2xx.c ****   static void SystemInit_ExtMemCtl(void); 
 137:Src/system_stm32f2xx.c **** #endif /* DATA_IN_ExtSRAM */
 138:Src/system_stm32f2xx.c **** 
 139:Src/system_stm32f2xx.c **** /**
 140:Src/system_stm32f2xx.c ****   * @}
 141:Src/system_stm32f2xx.c ****   */
 142:Src/system_stm32f2xx.c **** 
 143:Src/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_Functions
 144:Src/system_stm32f2xx.c ****   * @{
 145:Src/system_stm32f2xx.c ****   */
 146:Src/system_stm32f2xx.c **** 
 147:Src/system_stm32f2xx.c **** /**
ARM GAS  /tmp/ccld9Hmr.s 			page 4


 148:Src/system_stm32f2xx.c ****   * @brief  Setup the microcontroller system
 149:Src/system_stm32f2xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 150:Src/system_stm32f2xx.c ****   *         SystemFrequency variable.
 151:Src/system_stm32f2xx.c ****   * @param  None
 152:Src/system_stm32f2xx.c ****   * @retval None
 153:Src/system_stm32f2xx.c ****   */
 154:Src/system_stm32f2xx.c **** void SystemInit(void)
 155:Src/system_stm32f2xx.c **** {
  26              		.loc 1 155 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 156:Src/system_stm32f2xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 157:Src/system_stm32f2xx.c ****   /* Set HSION bit */
 158:Src/system_stm32f2xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  31              		.loc 1 158 0
  32 0000 0C4B     		ldr	r3, .L2
  33 0002 1A68     		ldr	r2, [r3]
  34 0004 42F00102 		orr	r2, r2, #1
  35 0008 1A60     		str	r2, [r3]
 159:Src/system_stm32f2xx.c **** 
 160:Src/system_stm32f2xx.c ****   /* Reset CFGR register */
 161:Src/system_stm32f2xx.c ****   RCC->CFGR = 0x00000000;
  36              		.loc 1 161 0
  37 000a 0021     		movs	r1, #0
  38 000c 9960     		str	r1, [r3, #8]
 162:Src/system_stm32f2xx.c **** 
 163:Src/system_stm32f2xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 164:Src/system_stm32f2xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  39              		.loc 1 164 0
  40 000e 1A68     		ldr	r2, [r3]
  41 0010 22F08472 		bic	r2, r2, #17301504
  42 0014 22F48032 		bic	r2, r2, #65536
  43 0018 1A60     		str	r2, [r3]
 165:Src/system_stm32f2xx.c **** 
 166:Src/system_stm32f2xx.c ****   /* Reset PLLCFGR register */
 167:Src/system_stm32f2xx.c ****   RCC->PLLCFGR = 0x24003010;
  44              		.loc 1 167 0
  45 001a 074A     		ldr	r2, .L2+4
  46 001c 5A60     		str	r2, [r3, #4]
 168:Src/system_stm32f2xx.c **** 
 169:Src/system_stm32f2xx.c ****   /* Reset HSEBYP bit */
 170:Src/system_stm32f2xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  47              		.loc 1 170 0
  48 001e 1A68     		ldr	r2, [r3]
  49 0020 22F48022 		bic	r2, r2, #262144
  50 0024 1A60     		str	r2, [r3]
 171:Src/system_stm32f2xx.c **** 
 172:Src/system_stm32f2xx.c ****   /* Disable all interrupts */
 173:Src/system_stm32f2xx.c ****   RCC->CIR = 0x00000000;
  51              		.loc 1 173 0
  52 0026 D960     		str	r1, [r3, #12]
 174:Src/system_stm32f2xx.c **** 
 175:Src/system_stm32f2xx.c **** #ifdef DATA_IN_ExtSRAM
 176:Src/system_stm32f2xx.c ****   SystemInit_ExtMemCtl(); 
 177:Src/system_stm32f2xx.c **** #endif /* DATA_IN_ExtSRAM */
ARM GAS  /tmp/ccld9Hmr.s 			page 5


 178:Src/system_stm32f2xx.c **** 
 179:Src/system_stm32f2xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 180:Src/system_stm32f2xx.c **** #ifdef VECT_TAB_SRAM
 181:Src/system_stm32f2xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 182:Src/system_stm32f2xx.c **** #else
 183:Src/system_stm32f2xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  53              		.loc 1 183 0
  54 0028 044B     		ldr	r3, .L2+8
  55 002a 4FF00062 		mov	r2, #134217728
  56 002e 9A60     		str	r2, [r3, #8]
 184:Src/system_stm32f2xx.c **** #endif
 185:Src/system_stm32f2xx.c **** }
  57              		.loc 1 185 0
  58 0030 7047     		bx	lr
  59              	.L3:
  60 0032 00BF     		.align	2
  61              	.L2:
  62 0034 00380240 		.word	1073887232
  63 0038 10300024 		.word	603992080
  64 003c 00ED00E0 		.word	-536810240
  65              		.cfi_endproc
  66              	.LFE66:
  68              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  69              		.align	1
  70              		.global	SystemCoreClockUpdate
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  76              	SystemCoreClockUpdate:
  77              	.LFB67:
 186:Src/system_stm32f2xx.c **** 
 187:Src/system_stm32f2xx.c **** /**
 188:Src/system_stm32f2xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 189:Src/system_stm32f2xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 190:Src/system_stm32f2xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 191:Src/system_stm32f2xx.c ****   *         other parameters.
 192:Src/system_stm32f2xx.c ****   *           
 193:Src/system_stm32f2xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 194:Src/system_stm32f2xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 195:Src/system_stm32f2xx.c ****   *         based on this variable will be incorrect.         
 196:Src/system_stm32f2xx.c ****   *     
 197:Src/system_stm32f2xx.c ****   * @note   - The system frequency computed by this function is not the real 
 198:Src/system_stm32f2xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 199:Src/system_stm32f2xx.c ****   *           constant and the selected clock source:
 200:Src/system_stm32f2xx.c ****   *             
 201:Src/system_stm32f2xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 202:Src/system_stm32f2xx.c ****   *                                              
 203:Src/system_stm32f2xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 204:Src/system_stm32f2xx.c ****   *                          
 205:Src/system_stm32f2xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 206:Src/system_stm32f2xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 207:Src/system_stm32f2xx.c ****   *         
 208:Src/system_stm32f2xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f2xx_hal_conf.h file (default value
 209:Src/system_stm32f2xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 210:Src/system_stm32f2xx.c ****   *             in voltage and temperature.   
 211:Src/system_stm32f2xx.c ****   *    
ARM GAS  /tmp/ccld9Hmr.s 			page 6


 212:Src/system_stm32f2xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f2xx_hal_conf.h file (its value
 213:Src/system_stm32f2xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 214:Src/system_stm32f2xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 215:Src/system_stm32f2xx.c ****   *              may have wrong result.
 216:Src/system_stm32f2xx.c ****   *                
 217:Src/system_stm32f2xx.c ****   *         - The result of this function could be not correct when using fractional
 218:Src/system_stm32f2xx.c ****   *           value for HSE crystal.
 219:Src/system_stm32f2xx.c ****   *     
 220:Src/system_stm32f2xx.c ****   * @param  None
 221:Src/system_stm32f2xx.c ****   * @retval None
 222:Src/system_stm32f2xx.c ****   */
 223:Src/system_stm32f2xx.c **** void SystemCoreClockUpdate(void)
 224:Src/system_stm32f2xx.c **** {
  78              		.loc 1 224 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LVL0:
 225:Src/system_stm32f2xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 226:Src/system_stm32f2xx.c ****   
 227:Src/system_stm32f2xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 228:Src/system_stm32f2xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
  84              		.loc 1 228 0
  85 0000 224B     		ldr	r3, .L14
  86 0002 9B68     		ldr	r3, [r3, #8]
  87 0004 03F00C03 		and	r3, r3, #12
  88              	.LVL1:
 229:Src/system_stm32f2xx.c **** 
 230:Src/system_stm32f2xx.c ****   switch (tmp)
  89              		.loc 1 230 0
  90 0008 042B     		cmp	r3, #4
  91 000a 14D0     		beq	.L6
  92 000c 082B     		cmp	r3, #8
  93 000e 16D0     		beq	.L7
  94 0010 1BB1     		cbz	r3, .L13
 231:Src/system_stm32f2xx.c ****   {
 232:Src/system_stm32f2xx.c ****     case 0x00:  /* HSI used as system clock source */
 233:Src/system_stm32f2xx.c ****       SystemCoreClock = HSI_VALUE;
 234:Src/system_stm32f2xx.c ****       break;
 235:Src/system_stm32f2xx.c ****     case 0x04:  /* HSE used as system clock source */
 236:Src/system_stm32f2xx.c ****       SystemCoreClock = HSE_VALUE;
 237:Src/system_stm32f2xx.c ****       break;
 238:Src/system_stm32f2xx.c ****     case 0x08:  /* PLL used as system clock source */
 239:Src/system_stm32f2xx.c **** 
 240:Src/system_stm32f2xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 241:Src/system_stm32f2xx.c ****          SYSCLK = PLL_VCO / PLL_P
 242:Src/system_stm32f2xx.c ****          */    
 243:Src/system_stm32f2xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 244:Src/system_stm32f2xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 245:Src/system_stm32f2xx.c ****       
 246:Src/system_stm32f2xx.c ****       if (pllsource != 0)
 247:Src/system_stm32f2xx.c ****       {
 248:Src/system_stm32f2xx.c ****         /* HSE used as PLL clock source */
 249:Src/system_stm32f2xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 250:Src/system_stm32f2xx.c ****       }
 251:Src/system_stm32f2xx.c ****       else
ARM GAS  /tmp/ccld9Hmr.s 			page 7


 252:Src/system_stm32f2xx.c ****       {
 253:Src/system_stm32f2xx.c ****         /* HSI used as PLL clock source */
 254:Src/system_stm32f2xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 255:Src/system_stm32f2xx.c ****       }
 256:Src/system_stm32f2xx.c **** 
 257:Src/system_stm32f2xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 258:Src/system_stm32f2xx.c ****       SystemCoreClock = pllvco/pllp;
 259:Src/system_stm32f2xx.c ****       break;
 260:Src/system_stm32f2xx.c ****     default:
 261:Src/system_stm32f2xx.c ****       SystemCoreClock = HSI_VALUE;
  95              		.loc 1 261 0
  96 0012 1F4B     		ldr	r3, .L14+4
  97              	.LVL2:
  98 0014 1F4A     		ldr	r2, .L14+8
  99 0016 1A60     		str	r2, [r3]
 262:Src/system_stm32f2xx.c ****       break;
 100              		.loc 1 262 0
 101 0018 02E0     		b	.L9
 102              	.LVL3:
 103              	.L13:
 233:Src/system_stm32f2xx.c ****       break;
 104              		.loc 1 233 0
 105 001a 1D4B     		ldr	r3, .L14+4
 106              	.LVL4:
 107 001c 1D4A     		ldr	r2, .L14+8
 108 001e 1A60     		str	r2, [r3]
 109              	.LVL5:
 110              	.L9:
 263:Src/system_stm32f2xx.c ****   }
 264:Src/system_stm32f2xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 265:Src/system_stm32f2xx.c ****   /* Get HCLK prescaler */
 266:Src/system_stm32f2xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 111              		.loc 1 266 0
 112 0020 1A4B     		ldr	r3, .L14
 113 0022 9B68     		ldr	r3, [r3, #8]
 114 0024 C3F30313 		ubfx	r3, r3, #4, #4
 115 0028 1B4A     		ldr	r2, .L14+12
 116 002a D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 117              	.LVL6:
 267:Src/system_stm32f2xx.c ****   /* HCLK frequency */
 268:Src/system_stm32f2xx.c ****   SystemCoreClock >>= tmp;
 118              		.loc 1 268 0
 119 002c 184A     		ldr	r2, .L14+4
 120 002e 1368     		ldr	r3, [r2]
 121 0030 CB40     		lsrs	r3, r3, r1
 122 0032 1360     		str	r3, [r2]
 269:Src/system_stm32f2xx.c **** }
 123              		.loc 1 269 0
 124 0034 7047     		bx	lr
 125              	.LVL7:
 126              	.L6:
 236:Src/system_stm32f2xx.c ****       break;
 127              		.loc 1 236 0
 128 0036 164B     		ldr	r3, .L14+4
 129              	.LVL8:
 130 0038 184A     		ldr	r2, .L14+16
 131 003a 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccld9Hmr.s 			page 8


 237:Src/system_stm32f2xx.c ****     case 0x08:  /* PLL used as system clock source */
 132              		.loc 1 237 0
 133 003c F0E7     		b	.L9
 134              	.LVL9:
 135              	.L7:
 243:Src/system_stm32f2xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 136              		.loc 1 243 0
 137 003e 134B     		ldr	r3, .L14
 138              	.LVL10:
 139 0040 5A68     		ldr	r2, [r3, #4]
 140              	.LVL11:
 244:Src/system_stm32f2xx.c ****       
 141              		.loc 1 244 0
 142 0042 5B68     		ldr	r3, [r3, #4]
 143 0044 03F03F03 		and	r3, r3, #63
 144              	.LVL12:
 246:Src/system_stm32f2xx.c ****       {
 145              		.loc 1 246 0
 146 0048 12F4800F 		tst	r2, #4194304
 147 004c 13D0     		beq	.L10
 249:Src/system_stm32f2xx.c ****       }
 148              		.loc 1 249 0
 149 004e 134A     		ldr	r2, .L14+16
 150              	.LVL13:
 151 0050 B2FBF3F2 		udiv	r2, r2, r3
 152 0054 0D4B     		ldr	r3, .L14
 153              	.LVL14:
 154 0056 5B68     		ldr	r3, [r3, #4]
 155 0058 C3F38813 		ubfx	r3, r3, #6, #9
 156 005c 03FB02F3 		mul	r3, r3, r2
 157              	.LVL15:
 158              	.L11:
 257:Src/system_stm32f2xx.c ****       SystemCoreClock = pllvco/pllp;
 159              		.loc 1 257 0
 160 0060 0A4A     		ldr	r2, .L14
 161 0062 5268     		ldr	r2, [r2, #4]
 162 0064 C2F30142 		ubfx	r2, r2, #16, #2
 163 0068 0132     		adds	r2, r2, #1
 164 006a 5200     		lsls	r2, r2, #1
 165              	.LVL16:
 258:Src/system_stm32f2xx.c ****       break;
 166              		.loc 1 258 0
 167 006c B3FBF2F3 		udiv	r3, r3, r2
 168              	.LVL17:
 169 0070 074A     		ldr	r2, .L14+4
 170              	.LVL18:
 171 0072 1360     		str	r3, [r2]
 259:Src/system_stm32f2xx.c ****     default:
 172              		.loc 1 259 0
 173 0074 D4E7     		b	.L9
 174              	.LVL19:
 175              	.L10:
 254:Src/system_stm32f2xx.c ****       }
 176              		.loc 1 254 0
 177 0076 074A     		ldr	r2, .L14+8
 178              	.LVL20:
 179 0078 B2FBF3F2 		udiv	r2, r2, r3
ARM GAS  /tmp/ccld9Hmr.s 			page 9


 180 007c 034B     		ldr	r3, .L14
 181              	.LVL21:
 182 007e 5B68     		ldr	r3, [r3, #4]
 183 0080 C3F38813 		ubfx	r3, r3, #6, #9
 184 0084 03FB02F3 		mul	r3, r3, r2
 185              	.LVL22:
 186 0088 EAE7     		b	.L11
 187              	.L15:
 188 008a 00BF     		.align	2
 189              	.L14:
 190 008c 00380240 		.word	1073887232
 191 0090 00000000 		.word	.LANCHOR0
 192 0094 0024F400 		.word	16000000
 193 0098 00000000 		.word	.LANCHOR1
 194 009c 00127A00 		.word	8000000
 195              		.cfi_endproc
 196              	.LFE67:
 198              		.global	APBPrescTable
 199              		.global	AHBPrescTable
 200              		.global	SystemCoreClock
 201              		.section	.data.SystemCoreClock,"aw",%progbits
 202              		.align	2
 203              		.set	.LANCHOR0,. + 0
 206              	SystemCoreClock:
 207 0000 0024F400 		.word	16000000
 208              		.section	.rodata.AHBPrescTable,"a",%progbits
 209              		.align	2
 210              		.set	.LANCHOR1,. + 0
 213              	AHBPrescTable:
 214 0000 00       		.byte	0
 215 0001 00       		.byte	0
 216 0002 00       		.byte	0
 217 0003 00       		.byte	0
 218 0004 00       		.byte	0
 219 0005 00       		.byte	0
 220 0006 00       		.byte	0
 221 0007 00       		.byte	0
 222 0008 01       		.byte	1
 223 0009 02       		.byte	2
 224 000a 03       		.byte	3
 225 000b 04       		.byte	4
 226 000c 06       		.byte	6
 227 000d 07       		.byte	7
 228 000e 08       		.byte	8
 229 000f 09       		.byte	9
 230              		.section	.rodata.APBPrescTable,"a",%progbits
 231              		.align	2
 234              	APBPrescTable:
 235 0000 00       		.byte	0
 236 0001 00       		.byte	0
 237 0002 00       		.byte	0
 238 0003 00       		.byte	0
 239 0004 01       		.byte	1
 240 0005 02       		.byte	2
 241 0006 03       		.byte	3
 242 0007 04       		.byte	4
 243              		.text
ARM GAS  /tmp/ccld9Hmr.s 			page 10


 244              	.Letext0:
 245              		.file 2 "/home/nikita/software/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_d
 246              		.file 3 "/home/nikita/software/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdin
 247              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 248              		.file 5 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/system_stm32f2xx.h"
 249              		.file 6 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f205xx.h"
 250              		.file 7 "/home/nikita/software/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h
 251              		.file 8 "/home/nikita/software/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types
 252              		.file 9 "/home/nikita/software/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/incl
 253              		.file 10 "/home/nikita/software/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent
ARM GAS  /tmp/ccld9Hmr.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f2xx.c
     /tmp/ccld9Hmr.s:16     .text.SystemInit:0000000000000000 $t
     /tmp/ccld9Hmr.s:23     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccld9Hmr.s:62     .text.SystemInit:0000000000000034 $d
     /tmp/ccld9Hmr.s:69     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccld9Hmr.s:76     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccld9Hmr.s:190    .text.SystemCoreClockUpdate:000000000000008c $d
     /tmp/ccld9Hmr.s:234    .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/ccld9Hmr.s:213    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccld9Hmr.s:206    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccld9Hmr.s:202    .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccld9Hmr.s:209    .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/ccld9Hmr.s:231    .rodata.APBPrescTable:0000000000000000 $d

NO UNDEFINED SYMBOLS

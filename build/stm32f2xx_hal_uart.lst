ARM GAS  /tmp/ccUha3Mw.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f2xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	UART_EndTxTransfer:
  23              	.LFB110:
  24              		.file 1 "Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c"
   1:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
   2:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @file    stm32f2xx_hal_uart.c
   4:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           + Peripheral Control functions  
  11:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           + Peripheral State and Errors functions  
  12:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           
  13:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   @verbatim       
  14:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   ==============================================================================
  15:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   [..]
  18:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
  20:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  21:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
  22:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  23:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  24:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (##) UART pins configuration:
  25:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  26:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  27:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  28:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  29:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  30:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  31:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  32:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  33:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  34:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
ARM GAS  /tmp/ccUha3Mw.s 			page 2


  35:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  36:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****                   Tx/Rx parameters.                
  37:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  38:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  39:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  40:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  41:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
  42:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  43:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  44:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
  45:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
  48:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  49:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
  51:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
  53:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  54:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         
  56:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      [..] 
  57:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  58:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  60:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           
  62:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      [..] 
  63:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  64:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized 
  65:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           
  67:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      [..] 
  68:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         Three operation modes are available within this driver :     
  69:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
  70:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      =================================
  72:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      [..]    
  73:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  74:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        
  76:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  77:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      ===================================
  78:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      [..]    
  79:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  80:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  81:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  82:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  83:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  84:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  85:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  86:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  87:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
  88:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      *** DMA mode IO operation ***    
  89:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      ==============================
  90:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      [..] 
  91:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
ARM GAS  /tmp/ccUha3Mw.s 			page 3


  92:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  93:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  94:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  95:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  96:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  97:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  98:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  99:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 101:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 102:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 103:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 104:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 105:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 107:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      *** UART HAL driver macros list ***
 108:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      ============================================= 
 109:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      [..]
 110:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 111:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        
 112:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 113:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 114:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 115:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 119:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       
 120:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      [..] 
 121:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       
 123:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   @endverbatim
 124:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   ******************************************************************************
 125:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @attention
 126:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *
 127:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 128:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *
 129:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 130:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 131:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 133:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 137:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 138:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *      without specific prior written permission.
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *
 140:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 141:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 143:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 144:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 146:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 148:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
ARM GAS  /tmp/ccUha3Mw.s 			page 4


 149:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *
 151:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   ******************************************************************************
 152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */ 
 153:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** #include "stm32f2xx_hal.h"
 156:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /** @addtogroup STM32F2xx_HAL_Driver
 158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @{
 159:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 160:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /** @defgroup UART UART
 162:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief HAL UART module driver
 163:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @{
 164:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 165:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 168:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 170:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @{
 171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 172:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @}
 174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 176:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /** @addtogroup UART_Private_Functions   UART Private Functions
 179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @{
 180:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 183:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 184:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 185:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 186:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma); 
 188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 197:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 198:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 199:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @}
 200:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 201:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 202:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 203:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 204:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @{
 205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
ARM GAS  /tmp/ccUha3Mw.s 			page 5


 206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 208:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *
 210:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** @verbatim    
 211:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** ===============================================================================
 212:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 213:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****  ===============================================================================  
 214:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     [..]
 215:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 216:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     in asynchronous mode.
 217:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 218:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) Baud Rate
 219:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) Word Length 
 220:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) Stop Bit
 221:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 222:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 223:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.           
 225:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) Hardware flow control
 226:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) Receiver/transmitter modes
 227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) Over Sampling Method
 228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     [..]
 229:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 230:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 231:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 232:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 233:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** @endverbatim
 234:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @{
 235:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 236:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 237:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 238:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 242:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
 243:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 245:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
 246:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart == NULL)
 248:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 249:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_ERROR;
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 251:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the parameters */
 253:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 254:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   { 
 255:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 256:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 257:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 258:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   else
 260:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 261:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
ARM GAS  /tmp/ccUha3Mw.s 			page 6


 263:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 264:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 266:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {  
 268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 269:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 270:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Init the low level hardware */
 271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 272:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 273:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 275:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 276:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the peripheral */
 277:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 278:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Set the UART Communication parameters */
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_SetConfig(huart);
 281:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 283:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 285:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 287:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 288:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Enable the peripheral */
 289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 291:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Initialize the UART state */
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 293:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 294:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 296:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
 297:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 299:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 301:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 302:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 303:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
 305:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 306:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
 308:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 309:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart == NULL)
 310:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 311:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_ERROR;
 312:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****  
 314:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the parameters */ 
 315:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 316:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
ARM GAS  /tmp/ccUha3Mw.s 			page 7


 320:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   { 
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 322:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 323:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Init the low level hardware */
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 325:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 326:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 328:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 329:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the peripheral */
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 332:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Set the UART Communication parameters */
 333:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_SetConfig(huart);
 334:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 335:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared: 
 336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 337:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 338:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 339:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 340:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 341:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 342:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 343:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****  
 344:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Enable the peripheral */
 345:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 346:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 347:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Initialize the UART state*/
 348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 350:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 351:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 352:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
 353:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 354:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 355:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 357:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 358:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 359:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 360:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 361:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         This parameter can be one of the following values:
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 363:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
 365:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
 368:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 369:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart == NULL)
 370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 371:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_ERROR;
 372:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    
 374:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the parameters */
 375:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 376:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
ARM GAS  /tmp/ccUha3Mw.s 			page 8


 377:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 378:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 379:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 382:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Init the low level hardware */
 385:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 386:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 387:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 388:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 389:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 390:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the peripheral */
 391:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 393:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Set the UART Communication parameters */
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_SetConfig(huart);
 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 396:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 398:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 400:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 401:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 402:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 403:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 404:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 406:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 407:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 408:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 409:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Enable the peripheral */
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 411:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 412:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Initialize the UART state*/
 413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 415:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 416:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
 418:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 420:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 421:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 422:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 423:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 424:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 425:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  Address USART address
 426:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 427:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *          This parameter can be one of the following values:
 428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 429:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 430:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
 431:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 432:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 433:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
ARM GAS  /tmp/ccUha3Mw.s 			page 9


 434:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 435:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart == NULL)
 436:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 437:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_ERROR;
 438:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 439:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 440:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the parameters */
 441:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 442:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 443:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 444:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 446:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 447:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 448:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 450:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 451:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Init the low level hardware */
 452:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 453:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 454:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 456:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 457:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the peripheral */
 458:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 459:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Set the UART Communication parameters */
 461:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_SetConfig(huart);
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 463:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 464:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 465:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 466:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 468:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 469:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Clear the USART address */
 470:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 471:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Set the USART address node */
 472:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 473:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 474:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 475:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 477:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Enable the peripheral */
 479:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 480:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 481:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Initialize the UART state */
 482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 483:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 484:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 485:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 486:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
 487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 488:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 489:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 490:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
ARM GAS  /tmp/ccUha3Mw.s 			page 10


 491:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 492:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 493:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
 494:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 495:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 496:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
 497:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 498:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart == NULL)
 499:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 500:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_ERROR;
 501:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 502:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 503:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the parameters */
 504:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 507:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 508:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* DeInit the low level hardware */
 509:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 510:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 511:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 512:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 513:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 514:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 515:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Lock */
 516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 517:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 518:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
 519:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 521:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 522:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  UART MSP Init.
 523:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 524:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 525:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
 526:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 527:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 528:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
 529:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    /* Prevent unused argument(s) compilation warning */
 530:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UNUSED(huart);
 531:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 532:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 533:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    */ 
 534:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 535:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 536:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 537:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 538:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 540:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 542:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 543:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
 544:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 545:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UNUSED(huart);
 546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 547:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
ARM GAS  /tmp/ccUha3Mw.s 			page 11


 548:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    */ 
 549:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 550:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 551:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 552:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @}
 553:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 554:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 555:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 556:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 557:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *
 558:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** @verbatim   
 559:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   ==============================================================================
 560:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****                       ##### IO operation functions #####
 561:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   ==============================================================================  
 562:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   [..]
 563:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 564:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     and Half duplex data transfers.
 565:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 566:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (#) There are two modes of transfer:
 567:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 568:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 569:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             after finishing transfer.  
 570:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 571:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 572:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 573:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 574:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             using DMA mode.
 575:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 576:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 577:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 578:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             a communication error is detected.
 579:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 580:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (#) Blocking mode APIs are:
 581:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 582:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         
 584:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 585:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 586:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 587:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 589:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 590:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 592:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 593:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 594:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 595:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 596:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 597:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 598:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     [..] 
 599:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 600:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX 
 601:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           can't be useful.
 602:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       
 603:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** @endverbatim
 604:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @{
ARM GAS  /tmp/ccUha3Mw.s 			page 12


 605:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 606:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 607:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 608:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode. 
 609:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 611:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  Size Amount of data to be sent
 613:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  Timeout Timeout duration  
 614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
 615:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 616:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 617:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
 618:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint16_t* tmp;
 619:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t tickstart = 0U;
 620:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 621:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 622:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY) 
 623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 624:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 625:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 626:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       return  HAL_ERROR;
 627:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 628:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 629:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Process Locked */
 630:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_LOCK(huart);
 631:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 633:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 635:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 636:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     tickstart = HAL_GetTick();
 637:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferSize = Size;
 639:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferCount = Size;
 640:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 641:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 642:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->TxXferCount--;
 643:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 644:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 645:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 646:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         { 
 647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           return HAL_TIMEOUT;
 648:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 649:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 651:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 652:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         {
 653:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           pData +=2;
 654:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 655:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         else
 656:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         { 
 657:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           pData +=1;
 658:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       } 
 660:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       else
 661:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
ARM GAS  /tmp/ccUha3Mw.s 			page 13


 662:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         {
 664:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           return HAL_TIMEOUT;
 665:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 666:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 667:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       } 
 668:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 669:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     { 
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       return HAL_TIMEOUT;
 673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 674:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 675:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 676:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 677:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 678:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Process Unlocked */
 679:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 680:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 681:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_OK;
 682:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 683:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   else
 684:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 685:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_BUSY;
 686:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 687:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 688:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 689:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 690:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode. 
 691:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 692:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 693:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 694:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  Size Amount of data to be received
 695:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  Timeout Timeout duration
 696:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
 697:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 698:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 699:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** { 
 700:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint16_t* tmp;
 701:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t tickstart = 0U;
 702:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 703:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 704:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 705:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 706:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 707:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 708:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       return  HAL_ERROR;
 709:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 710:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 711:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Process Locked */
 712:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_LOCK(huart);
 713:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 714:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 715:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 716:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 717:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 718:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     tickstart = HAL_GetTick();
ARM GAS  /tmp/ccUha3Mw.s 			page 14


 719:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 720:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferSize = Size; 
 721:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferCount = Size;
 722:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 723:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Check the remain data to be received */
 724:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     while(huart->RxXferCount > 0)
 725:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 726:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->RxXferCount--;
 727:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 729:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 730:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         { 
 731:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           return HAL_TIMEOUT;
 732:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 733:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 734:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 735:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         {
 736:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 737:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           pData +=2;
 738:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 739:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         else
 740:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         {
 741:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           pData +=1;
 743:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 744:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 745:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       } 
 746:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       else
 747:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 749:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         { 
 750:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           return HAL_TIMEOUT;
 751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 752:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 753:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         {
 754:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 755:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 756:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         else
 757:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         {
 758:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 759:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 760:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         
 761:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 762:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 763:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 764:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 765:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 766:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 767:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Process Unlocked */
 768:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 769:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 770:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_OK;
 771:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 772:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   else
 773:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 774:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_BUSY;   
 775:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
ARM GAS  /tmp/ccUha3Mw.s 			page 15


 776:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 777:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 778:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 780:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 781:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 782:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 783:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  Size Amount of data to be sent
 784:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
 785:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 786:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 787:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
 788:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 789:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 790:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 791:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 792:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 793:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       return HAL_ERROR;
 794:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 795:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 796:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Process Locked */
 797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_LOCK(huart);
 798:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 800:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferSize = Size;
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferCount = Size;
 802:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 803:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 804:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 805:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 806:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Process Unlocked */
 807:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 808:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 809:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 810:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 811:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 812:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_OK;
 813:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 814:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   else
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_BUSY;   
 817:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 818:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 819:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 820:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 821:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
 822:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 824:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 825:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  Size Amount of data to be received
 826:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
 827:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 828:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 829:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
 830:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 831:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 832:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
ARM GAS  /tmp/ccUha3Mw.s 			page 16


 833:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 834:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 835:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       return HAL_ERROR;
 836:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 838:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Process Locked */
 839:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_LOCK(huart);
 840:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 841:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 842:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferSize = Size;
 843:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferCount = Size;
 844:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 845:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 846:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 847:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 848:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Process Unlocked */
 849:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 850:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 851:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 852:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 853:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 854:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 855:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 856:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 857:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_OK;
 858:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 859:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   else
 860:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 861:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_BUSY; 
 862:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 863:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 864:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 865:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 866:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 867:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 868:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 869:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 870:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  Size Amount of data to be sent
 871:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
 872:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 873:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 874:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
 875:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t *tmp;
 876:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 877:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 878:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 879:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 880:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 881:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 882:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       return HAL_ERROR;
 883:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 884:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 885:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Process Locked */
 886:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_LOCK(huart);
 887:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 888:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 889:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferSize = Size;
ARM GAS  /tmp/ccUha3Mw.s 			page 17


 890:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferCount = Size;
 891:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 892:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 893:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 894:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 895:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 896:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 897:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 898:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 899:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 900:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 901:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Set the DMA error callback */
 902:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 903:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 904:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Set the DMA abort callback */
 905:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 906:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 907:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Enable the UART transmit DMA Stream */
 908:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 909:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 910:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 911:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 912:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 913:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 914:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Process Unlocked */
 915:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 916:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 917:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 918:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        in the UART CR3 register */
 919:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 921:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_OK;
 922:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 923:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   else
 924:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 925:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_BUSY;
 926:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 929:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 930:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 931:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 932:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 933:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 934:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  Size Amount of data to be received
 935:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 936:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
 937:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
 938:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 939:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
 940:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t *tmp;
 941:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 942:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 943:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 944:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 945:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 946:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
ARM GAS  /tmp/ccUha3Mw.s 			page 18


 947:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       return HAL_ERROR;
 948:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 949:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 950:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Process Locked */
 951:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_LOCK(huart);
 952:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 953:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 954:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferSize = Size;
 955:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 956:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 957:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 958:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 959:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 960:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 961:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 962:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 963:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 964:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 965:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Set the DMA error callback */
 966:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 967:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 968:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Set the DMA abort callback */
 969:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 970:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 971:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Enable the DMA Stream */
 972:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 973:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
 974:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 975:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
 976:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 977:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 978:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Process Unlocked */
 979:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 980:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 981:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 982:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 983:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 984:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 985:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 986:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 987:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
 988:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     in the UART CR3 register */
 989:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 990:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 991:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_OK;
 992:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 993:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   else
 994:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 995:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_BUSY; 
 996:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 997:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 998:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 999:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1000:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1001:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1002:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1003:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccUha3Mw.s 			page 19


1004:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1005:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1006:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1007:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1008:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1009:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Locked */
1010:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_LOCK(huart);
1011:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1012:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1013:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1014:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1015:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1016:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1017:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1018:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1020:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1021:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1022:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1023:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
1024:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1025:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1026:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1027:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1028:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Unlocked */
1029:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1030:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1031:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK; 
1032:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1033:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1034:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1035:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1036:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1037:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1038:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
1039:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1040:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1041:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1042:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Locked */
1043:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_LOCK(huart);
1044:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1045:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1046:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1047:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1048:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1049:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1050:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1051:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1052:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1053:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1054:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
1055:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1056:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1057:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1058:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
1059:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1060:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
ARM GAS  /tmp/ccUha3Mw.s 			page 20


1061:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1062:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1063:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Unlocked */
1064:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1065:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1066:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
1067:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1068:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1069:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1070:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1071:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1072:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1073:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
1074:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1075:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1076:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1077:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1078:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1079:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1080:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1081:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1082:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      */
1083:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1084:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1085:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1086:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1087:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1088:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1089:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1090:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1091:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1092:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1093:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1094:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1095:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1096:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1097:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1098:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1099:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1101:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1102:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1103:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1104:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1105:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1107:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1108:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1109:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1110:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1111:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1112:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
1113:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1114:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1115:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/ccUha3Mw.s 			page 21


1118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1119:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         This procedure performs following operations :
1120:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Disable PPP Interrupts
1121:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1123:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Set handle State to READY
1124:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1125:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
1126:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** */
1127:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1128:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1129:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1130:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1131:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1133:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1137:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1138:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1140:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1141:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1143:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1144:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1146:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1148:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1149:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1151:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1153:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1156:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1159:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1160:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1162:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1163:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1164:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1165:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1168:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Reset ErrorCode */
1170:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1172:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccUha3Mw.s 			page 22


1175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1176:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
1177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1180:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart UART handle.
1182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1183:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         This procedure performs following operations :
1184:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Disable PPP Interrupts
1185:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1186:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1187:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Set handle State to READY
1188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1189:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
1190:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** */
1191:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1197:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1198:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1199:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1200:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1201:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1202:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1203:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1204:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1208:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1210:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1211:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1212:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Reset Tx transfer counter */
1213:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1214:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1215:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1216:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1217:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1218:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
1219:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1220:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1221:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1222:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1223:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart UART handle.
1224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1225:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         This procedure performs following operations :
1226:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Disable PPP Interrupts
1227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1229:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Set handle State to READY
1230:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1231:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccUha3Mw.s 			page 23


1232:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** */
1233:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1234:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1235:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1236:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1237:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1238:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1242:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1243:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1245:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1246:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1248:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1249:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1251:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1253:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1254:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1255:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Reset Rx transfer counter */
1256:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1257:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1258:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1260:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1261:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
1262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1263:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1264:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1266:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart UART handle.
1267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         This procedure performs following operations :
1269:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Disable PPP Interrupts
1270:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1272:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Set handle State to READY
1273:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1275:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1276:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
1277:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** */
1278:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
1281:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1283:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1285:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1287:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      before any call to DMA Abort functions */
1288:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* DMA Tx Handle is valid */
ARM GAS  /tmp/ccUha3Mw.s 			page 24


1289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1291:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        Otherwise, set it to NULL */
1293:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1294:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1296:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1297:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     else
1298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1299:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1301:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1302:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1303:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1305:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1306:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        Otherwise, set it to NULL */
1307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1308:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1309:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1310:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1311:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     else
1312:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1314:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1315:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1316:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1320:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1322:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1323:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1325:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1326:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1328:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1329:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Abort DMA TX */
1330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
1332:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1333:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
1334:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       else
1335:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
1336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         AbortCplt = 0x00U;
1337:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
1338:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1339:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1340:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1341:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1342:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1343:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1344:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1345:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
ARM GAS  /tmp/ccUha3Mw.s 			page 25


1346:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1347:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1350:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1351:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1352:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Abort DMA RX */
1353:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1354:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
1355:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         AbortCplt = 0x01U;
1357:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
1358:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       else
1359:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
1360:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         AbortCplt = 0x00U;
1361:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
1362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1363:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1365:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(AbortCplt == 0x01U)
1367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1368:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1369:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferCount = 0x00U; 
1370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1371:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1372:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Reset ErrorCode */
1373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1374:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1375:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1376:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1377:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1378:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1379:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1382:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
1384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1385:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1386:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1387:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1388:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart UART handle.
1389:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1390:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         This procedure performs following operations :
1391:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Disable PPP Interrupts
1392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1393:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Set handle State to READY
1395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1396:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1398:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
1399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** */
1400:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1401:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1402:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
ARM GAS  /tmp/ccUha3Mw.s 			page 26


1403:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1404:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1406:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1407:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1408:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1409:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1411:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1412:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1415:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1416:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Abort DMA TX */
1418:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
1420:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1421:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1422:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
1423:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1424:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     else
1425:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {      
1426:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Reset Tx transfer counter */
1427:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
1428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1429:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1430:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1431:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1432:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1433:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1434:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1435:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1436:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   else
1437:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1438:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Reset Tx transfer counter */
1439:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1440:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1441:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1442:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1443:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1444:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1446:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1447:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1448:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
1449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1450:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1451:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1452:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1453:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart UART handle.
1454:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         This procedure performs following operations :
1456:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Disable PPP Interrupts
1457:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1458:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1459:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  /tmp/ccUha3Mw.s 			page 27


1460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1461:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1463:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
1464:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** */
1465:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1466:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1468:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1469:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1470:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1471:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1472:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1473:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1474:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1475:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1477:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1479:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1480:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1481:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1483:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Abort DMA RX */
1484:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1485:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
1486:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1488:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
1489:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1490:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     else
1491:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1492:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Reset Rx transfer counter */
1493:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->RxXferCount = 0x00U; 
1494:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1495:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1496:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1497:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1498:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1499:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1500:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1501:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1502:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   else
1503:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1504:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Reset Rx transfer counter */
1505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferCount = 0x00U; 
1506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1507:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1508:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1509:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1510:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1511:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1512:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1513:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1514:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
1515:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
ARM GAS  /tmp/ccUha3Mw.s 			page 28


1517:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1518:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1519:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1521:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
1522:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1523:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1524:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1525:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
1526:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1527:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1528:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
1529:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1530:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1531:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* If no error occurs */
1532:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
1533:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(errorflags == RESET)
1534:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1535:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
1536:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1537:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1538:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       UART_Receive_IT(huart);
1539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       return;
1540:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }  
1542:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1543:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* If some errors occur */
1544:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
1545:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
1547:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1548:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1549:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1550:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1551:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
1552:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
1553:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1554:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1555:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1556:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1557:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
1558:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
1559:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1560:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1561:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1562:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1563:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
1564:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
1565:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1566:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     { 
1567:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1568:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1569:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1570:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/    
1571:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1572:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
1573:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
ARM GAS  /tmp/ccUha3Mw.s 			page 29


1574:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1575:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
1576:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         UART_Receive_IT(huart);
1577:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
1578:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1579:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1580:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****          consider error as blocking */
1581:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1582:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
1583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
1584:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1585:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1586:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1587:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         
1589:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1590:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         {
1592:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1593:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           
1594:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1595:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1596:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           {
1597:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1598:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1599:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1600:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1601:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             {
1602:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
1603:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1604:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             }
1605:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           }
1606:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           else
1607:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           {
1608:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             /* Call user error callback */
1609:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           }
1611:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
1612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         else
1613:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         {
1614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           /* Call user error callback */
1615:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1616:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
1617:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
1618:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       else
1619:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
1620:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1621:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****            Error is notified to user through user error callback */
1622:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1624:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
1625:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
1626:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return;
1627:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   } /* End if some error occurs */
1628:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1629:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1630:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
ARM GAS  /tmp/ccUha3Mw.s 			page 30


1631:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     UART_Transmit_IT(huart);
1633:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return;
1634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1635:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1636:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1637:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1639:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1640:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return;
1641:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
1642:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1643:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1644:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1645:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1646:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1648:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
1649:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1651:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1652:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1653:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UNUSED(huart);
1654:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1655:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1656:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    */ 
1657:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1658:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1660:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1661:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1662:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
1664:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1665:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1666:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1667:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1668:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UNUSED(huart);
1669:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    */ 
1672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1674:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1675:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1676:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1677:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1678:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
1679:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1680:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1681:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1682:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1683:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UNUSED(huart);
1684:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1685:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1686:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    */
1687:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
ARM GAS  /tmp/ccUha3Mw.s 			page 31


1688:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1689:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1690:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1691:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1692:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1693:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
1694:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1695:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1696:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1697:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1698:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UNUSED(huart);
1699:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1700:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1701:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    */
1702:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1703:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1704:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1705:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  UART error callbacks.
1706:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1707:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1708:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
1709:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1710:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1711:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1712:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1713:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UNUSED(huart); 
1714:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1715:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1716:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    */ 
1717:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1718:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1719:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1720:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1721:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart UART handle.
1722:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
1723:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1724:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1725:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1726:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1727:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UNUSED(huart);
1728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1729:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1730:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1731:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    */
1732:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1733:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1734:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1735:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart UART handle.
1736:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
1737:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1738:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1739:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1740:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1741:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UNUSED(huart);
1742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1743:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1744:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
ARM GAS  /tmp/ccUha3Mw.s 			page 32


1745:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    */
1746:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1747:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1749:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1750:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart UART handle.
1751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
1752:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1753:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1754:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1755:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1756:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UNUSED(huart);
1757:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1758:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1759:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1760:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    */
1761:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1762:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1763:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1764:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @}
1765:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1766:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1767:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1768:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *  @brief   UART control functions 
1769:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *
1770:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** @verbatim   
1771:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   ==============================================================================
1772:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1773:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   ==============================================================================  
1774:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   [..]
1775:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1776:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1777:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1778:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
1780:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** @endverbatim
1781:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @{
1782:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1783:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1784:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1785:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Transmits break characters.
1786:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1787:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1788:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
1789:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1790:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1791:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1792:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the parameters */
1793:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1794:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1795:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Locked */
1796:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_LOCK(huart);
1797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1798:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1800:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Send break characters */
1801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
ARM GAS  /tmp/ccUha3Mw.s 			page 33


1802:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****  
1803:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1804:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1805:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Unlocked */
1806:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1807:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1808:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK; 
1809:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1810:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1811:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1812:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1813:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1814:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
1816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1817:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1818:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1819:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the parameters */
1820:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1821:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1822:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Locked */
1823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_LOCK(huart);
1824:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1825:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1826:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1827:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1828:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
1829:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1830:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1831:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1832:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Unlocked */
1833:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1834:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1835:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK; 
1836:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1838:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1839:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1840:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1841:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1842:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
1843:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1844:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1845:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1846:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the parameters */
1847:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1848:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1849:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Locked */
1850:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_LOCK(huart);
1851:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1852:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1853:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1854:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1855:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
1856:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1857:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1858:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
ARM GAS  /tmp/ccUha3Mw.s 			page 34


1859:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Unlocked */
1860:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1861:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1862:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK; 
1863:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1864:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1865:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1866:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1867:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1868:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1869:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
1870:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1871:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1872:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1873:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1874:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1875:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Locked */
1876:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_LOCK(huart);
1877:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1878:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1879:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1880:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1881:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1882:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1883:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Clear TE and RE bits */
1884:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1885:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1886:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1887:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
1888:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1889:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Write to USART CR1 */
1890:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1891:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****  
1892:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1893:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1894:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Unlocked */
1895:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1896:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1897:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK; 
1898:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1899:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1900:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1901:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1902:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1903:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1904:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
1905:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1906:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1907:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1908:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1909:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1910:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Locked */
1911:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_LOCK(huart);
1912:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1913:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1914:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1915:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
ARM GAS  /tmp/ccUha3Mw.s 			page 35


1916:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1917:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1918:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Clear TE and RE bits */
1919:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1921:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1922:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
1923:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1924:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Write to USART CR1 */
1925:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1926:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1929:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Unlocked */
1930:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1931:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1932:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK; 
1933:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1934:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1935:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1936:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @}
1937:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1938:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1939:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1940:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1941:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *
1942:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** @verbatim   
1943:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   ==============================================================================
1944:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1945:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   ==============================================================================  
1946:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****  [..]
1947:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1948:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1949:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    process
1950:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1951:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1952:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1953:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** @endverbatim
1954:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @{
1955:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1956:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1957:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1958:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Returns the UART state.
1959:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1960:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1961:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL state
1962:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1963:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1964:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1965:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
1966:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   temp1 = huart->gState;
1967:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   temp2 = huart->RxState;
1968:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
1969:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
1970:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1971:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1972:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
ARM GAS  /tmp/ccUha3Mw.s 			page 36


1973:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Return the UART error code
1974:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1975:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *              the configuration information for the specified UART.
1976:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval UART Error Code
1977:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1978:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1979:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1980:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return huart->ErrorCode;
1981:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
1982:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1983:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1984:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @}
1985:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1986:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
1987:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
1988:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
1989:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  hdma DMA handle
1990:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
1991:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
1992:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1993:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
1994:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1995:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* DMA Normal mode*/
1996:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
1997:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
1998:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferCount = 0;
1999:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2000:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2001:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        in the UART CR3 register */
2002:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2003:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2004:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2005:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2006:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2007:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2008:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* DMA Circular mode */
2009:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   else
2010:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
2011:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2012:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2013:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
2014:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2015:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2016:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
2017:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2018:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
2020:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2021:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2022:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
2023:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2024:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2025:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2026:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
2027:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2028:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2029:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
ARM GAS  /tmp/ccUha3Mw.s 			page 37


2030:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  hdma DMA handle
2031:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
2032:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2033:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2034:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
2035:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2036:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* DMA Normal mode*/
2037:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
2038:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
2039:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferCount = 0;
2040:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2041:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2042:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2043:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2044:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2045:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
2046:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****        in the UART CR3 register */
2047:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2048:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2049:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2050:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2051:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2052:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2053:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
2054:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2055:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2056:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
2057:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2058:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2059:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
2060:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2061:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2062:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
2063:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2064:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2065:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
2066:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
2067:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2068:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2069:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2070:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  hdma DMA handle
2071:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
2072:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2073:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2074:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
2075:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2076:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2077:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2078:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2079:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
2080:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
2081:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
2082:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferCount = 0;
2083:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2084:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2085:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2086:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
ARM GAS  /tmp/ccUha3Mw.s 			page 38


2087:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
2088:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
2089:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
2090:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferCount = 0;
2091:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2092:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2093:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2094:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2095:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2096:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
2097:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2098:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2099:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2101:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2102:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
2103:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
2104:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  Tickstart Tick start value
2105:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  Timeout Timeout duration
2106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
2107:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2108:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2109:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
2110:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Wait until flag is set */
2111:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status) 
2112:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
2113:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Check for the Timeout */
2114:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2115:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
2116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
2117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
2118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2119:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2120:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2121:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         
2122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2123:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2124:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         
2125:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         /* Process Unlocked */
2126:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2127:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         
2128:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         return HAL_TIMEOUT;
2129:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
2130:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
2131:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2133:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
2134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
2135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2137:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2138:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart UART handle.
2139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
2140:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2141:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
  25              		.loc 1 2142 0
ARM GAS  /tmp/ccUha3Mw.s 			page 39


  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
2143:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2144:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  31              		.loc 1 2144 0
  32 0000 0268     		ldr	r2, [r0]
  33 0002 D368     		ldr	r3, [r2, #12]
  34 0004 23F0C003 		bic	r3, r3, #192
  35 0008 D360     		str	r3, [r2, #12]
2145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2146:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  36              		.loc 1 2147 0
  37 000a 2023     		movs	r3, #32
  38 000c 80F83930 		strb	r3, [r0, #57]
2148:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
  39              		.loc 1 2148 0
  40 0010 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE110:
  44              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu softvfp
  51              	UART_EndRxTransfer:
  52              	.LFB111:
2149:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2151:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart UART handle.
2153:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
2154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2156:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
  53              		.loc 1 2156 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.LVL1:
2157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  59              		.loc 1 2158 0
  60 0000 0268     		ldr	r2, [r0]
  61 0002 D368     		ldr	r3, [r2, #12]
  62 0004 23F49073 		bic	r3, r3, #288
  63 0008 D360     		str	r3, [r2, #12]
2159:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  64              		.loc 1 2159 0
  65 000a 0268     		ldr	r2, [r0]
  66 000c 5369     		ldr	r3, [r2, #20]
  67 000e 23F00103 		bic	r3, r3, #1
ARM GAS  /tmp/ccUha3Mw.s 			page 40


  68 0012 5361     		str	r3, [r2, #20]
2160:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2162:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  69              		.loc 1 2162 0
  70 0014 2023     		movs	r3, #32
  71 0016 80F83A30 		strb	r3, [r0, #58]
2163:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
  72              		.loc 1 2163 0
  73 001a 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE111:
  77              		.section	.text.UART_Transmit_IT,"ax",%progbits
  78              		.align	1
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu softvfp
  84              	UART_Transmit_IT:
  85              	.LFB117:
2164:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2165:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2168:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  hdma DMA handle.
2169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
2170:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2172:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
2173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxXferCount = 0;
2175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->TxXferCount = 0;
2176:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
2179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2180:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2183:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2184:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2185:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  hdma DMA handle.
2186:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
2187:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2189:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
2190:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2191:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
2197:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2198:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
2199:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       return;
2200:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
ARM GAS  /tmp/ccUha3Mw.s 			page 41


2201:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2202:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2203:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2204:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Reset ErrorCode */
2208:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2210:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2211:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2212:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2213:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2214:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Call user Abort complete callback */
2215:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2216:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
2217:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2218:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2219:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2220:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2221:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2222:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2223:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  hdma DMA handle.
2224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
2225:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2226:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
2228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2229:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2230:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2231:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2232:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2233:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->hdmatx != NULL)
2234:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
2235:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
2236:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
2237:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       return;
2238:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
2239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2242:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2243:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2245:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Reset ErrorCode */
2246:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2248:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2249:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2251:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Call user Abort complete callback */
2253:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2254:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
2255:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2256:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2257:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
ARM GAS  /tmp/ccUha3Mw.s 			page 42


2258:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2260:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2261:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  hdma DMA handle.
2262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
2263:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2264:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
2266:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2269:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2270:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2272:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2273:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Call user Abort complete callback */
2274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
2275:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
2276:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2277:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2278:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2281:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  hdma DMA handle.
2283:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
2284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2285:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
2287:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2288:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2291:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2293:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2294:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Call user Abort complete callback */
2295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2296:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
2297:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2299:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2301:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2302:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
2303:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2305:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
  86              		.loc 1 2305 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.LVL2:
2306:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint16_t* tmp;
2307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2308:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
ARM GAS  /tmp/ccUha3Mw.s 			page 43


2309:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
  92              		.loc 1 2309 0
  93 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
  94 0004 DBB2     		uxtb	r3, r3
  95 0006 212B     		cmp	r3, #33
  96 0008 2AD1     		bne	.L8
2310:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
2311:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
  97              		.loc 1 2311 0
  98 000a 8368     		ldr	r3, [r0, #8]
  99 000c B3F5805F 		cmp	r3, #4096
 100 0010 16D0     		beq	.L10
2312:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
2313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
2314:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
2315:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2316:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
2317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->pTxBuffPtr += 2;
2318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
2319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       else
2320:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
2321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->pTxBuffPtr += 1;
2322:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
2323:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     } 
2324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     else
2325:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
2326:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 101              		.loc 1 2326 0
 102 0012 036A     		ldr	r3, [r0, #32]
 103 0014 5A1C     		adds	r2, r3, #1
 104 0016 0262     		str	r2, [r0, #32]
 105 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 106 001a 0368     		ldr	r3, [r0]
 107 001c 5A60     		str	r2, [r3, #4]
 108              	.L7:
2327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
2328:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2329:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(--huart->TxXferCount == 0)
 109              		.loc 1 2329 0
 110 001e C38C     		ldrh	r3, [r0, #38]
 111 0020 013B     		subs	r3, r3, #1
 112 0022 9BB2     		uxth	r3, r3
 113 0024 C384     		strh	r3, [r0, #38]	@ movhi
 114 0026 EBB9     		cbnz	r3, .L9
2330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
2331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2332:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 115              		.loc 1 2332 0
 116 0028 0268     		ldr	r2, [r0]
 117 002a D368     		ldr	r3, [r2, #12]
 118 002c 23F08003 		bic	r3, r3, #128
 119 0030 D360     		str	r3, [r2, #12]
2333:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2334:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
2335:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 120              		.loc 1 2335 0
 121 0032 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccUha3Mw.s 			page 44


 122 0034 D368     		ldr	r3, [r2, #12]
 123 0036 43F04003 		orr	r3, r3, #64
 124 003a D360     		str	r3, [r2, #12]
2336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
2337:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_OK;
 125              		.loc 1 2337 0
 126 003c 0020     		movs	r0, #0
 127              	.LVL3:
 128 003e 7047     		bx	lr
 129              	.LVL4:
 130              	.L10:
2313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 131              		.loc 1 2313 0
 132 0040 036A     		ldr	r3, [r0, #32]
 133              	.LVL5:
2314:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 134              		.loc 1 2314 0
 135 0042 1B88     		ldrh	r3, [r3]
 136              	.LVL6:
 137 0044 0268     		ldr	r2, [r0]
 138 0046 C3F30803 		ubfx	r3, r3, #0, #9
 139 004a 5360     		str	r3, [r2, #4]
 140              	.LVL7:
2315:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 141              		.loc 1 2315 0
 142 004c 0369     		ldr	r3, [r0, #16]
 143 004e 1BB9     		cbnz	r3, .L6
2317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 144              		.loc 1 2317 0
 145 0050 036A     		ldr	r3, [r0, #32]
 146 0052 0233     		adds	r3, r3, #2
 147 0054 0362     		str	r3, [r0, #32]
 148 0056 E2E7     		b	.L7
 149              	.L6:
2321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 150              		.loc 1 2321 0
 151 0058 036A     		ldr	r3, [r0, #32]
 152 005a 0133     		adds	r3, r3, #1
 153 005c 0362     		str	r3, [r0, #32]
 154 005e DEE7     		b	.L7
 155              	.L8:
2338:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2339:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   else
2340:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
2341:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_BUSY;
 156              		.loc 1 2341 0
 157 0060 0220     		movs	r0, #2
 158              	.LVL8:
 159 0062 7047     		bx	lr
 160              	.LVL9:
 161              	.L9:
2337:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 162              		.loc 1 2337 0
 163 0064 0020     		movs	r0, #0
 164              	.LVL10:
2342:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2343:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
ARM GAS  /tmp/ccUha3Mw.s 			page 45


 165              		.loc 1 2343 0
 166 0066 7047     		bx	lr
 167              		.cfi_endproc
 168              	.LFE117:
 170              		.section	.text.UART_SetConfig,"ax",%progbits
 171              		.align	1
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu softvfp
 177              	UART_SetConfig:
 178              	.LFB120:
2344:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2345:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2346:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2347:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
2350:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2351:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2352:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
2353:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
2354:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2355:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2357:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2358:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2359:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
2360:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2361:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return HAL_OK;
2362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
2363:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2365:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
2366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2368:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval HAL status
2369:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2371:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
2372:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint16_t* tmp;
2373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2374:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2375:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
2376:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
2377:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2378:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
2379:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
2380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
2382:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
2383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->pRxBuffPtr += 2;
2384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
2385:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       else
2386:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
2387:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
2388:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->pRxBuffPtr += 1;
ARM GAS  /tmp/ccUha3Mw.s 			page 46


2389:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
2390:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
2391:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     else
2392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
2393:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
2395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
2396:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
2397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       else
2398:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
2399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
2400:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
2401:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
2402:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2403:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
2404:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
2405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2406:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2407:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2408:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2409:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2411:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2412:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      
2414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2415:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2416:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       return HAL_OK;
2417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
2418:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_OK;
2419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2420:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   else
2421:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
2422:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return HAL_BUSY; 
2423:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2424:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
2425:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2426:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
2427:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
2428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2429:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2430:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   * @retval None
2431:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   */
2432:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
2433:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** {
 179              		.loc 1 2433 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              	.LVL11:
 184 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 185              	.LCFI0:
 186              		.cfi_def_cfa_offset 32
 187              		.cfi_offset 3, -32
 188              		.cfi_offset 4, -28
 189              		.cfi_offset 5, -24
 190              		.cfi_offset 6, -20
ARM GAS  /tmp/ccUha3Mw.s 			page 47


 191              		.cfi_offset 7, -16
 192              		.cfi_offset 8, -12
 193              		.cfi_offset 9, -8
 194              		.cfi_offset 14, -4
 195 0004 0446     		mov	r4, r0
 196              	.LVL12:
2434:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2435:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2436:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the parameters */
2437:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2438:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2439:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2440:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2441:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2442:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2443:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg = huart->Instance->CR2;
 197              		.loc 1 2443 0
 198 0006 0168     		ldr	r1, [r0]
 199 0008 0A69     		ldr	r2, [r1, #16]
 200              	.LVL13:
2444:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Clear STOP[13:12] bits */
2446:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 201              		.loc 1 2446 0
 202 000a 22F44052 		bic	r2, r2, #12288
 203              	.LVL14:
2447:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2448:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
2449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.StopBits;
 204              		.loc 1 2449 0
 205 000e C368     		ldr	r3, [r0, #12]
 206 0010 1343     		orrs	r3, r3, r2
 207              	.LVL15:
2450:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2451:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Write to USART CR2 */
2452:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR2, (uint32_t)tmpreg);
 208              		.loc 1 2452 0
 209 0012 0B61     		str	r3, [r1, #16]
2453:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2454:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 210              		.loc 1 2455 0
 211 0014 0168     		ldr	r1, [r0]
 212 0016 CA68     		ldr	r2, [r1, #12]
 213              	.LVL16:
2456:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2457:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Clear M, PCE, PS, TE and RE bits */
2458:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 214              		.loc 1 2458 0
 215 0018 22F41642 		bic	r2, r2, #38400
 216              	.LVL17:
 217 001c 22F00C02 		bic	r2, r2, #12
 218              	.LVL18:
2459:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
2460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
2461:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
2462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
ARM GAS  /tmp/ccUha3Mw.s 			page 48


2463:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
2464:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
2465:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
2466:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
 219              		.loc 1 2466 0
 220 0020 8368     		ldr	r3, [r0, #8]
 221 0022 0069     		ldr	r0, [r0, #16]
 222              	.LVL19:
 223 0024 0343     		orrs	r3, r3, r0
 224 0026 6069     		ldr	r0, [r4, #20]
 225 0028 0343     		orrs	r3, r3, r0
 226 002a E069     		ldr	r0, [r4, #28]
 227 002c 0343     		orrs	r3, r3, r0
 228 002e 1343     		orrs	r3, r3, r2
 229              	.LVL20:
2467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2468:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Write to USART CR1 */
2469:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 230              		.loc 1 2469 0
 231 0030 CB60     		str	r3, [r1, #12]
2470:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2471:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/  
2472:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg = huart->Instance->CR3;
 232              		.loc 1 2472 0
 233 0032 2168     		ldr	r1, [r4]
 234 0034 4A69     		ldr	r2, [r1, #20]
 235              	.LVL21:
2473:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2474:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Clear CTSE and RTSE bits */
2475:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
 236              		.loc 1 2475 0
 237 0036 22F44072 		bic	r2, r2, #768
 238              	.LVL22:
2476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2477:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
2478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   tmpreg |= huart->Init.HwFlowCtl;
 239              		.loc 1 2478 0
 240 003a A369     		ldr	r3, [r4, #24]
 241 003c 1343     		orrs	r3, r3, r2
 242              	.LVL23:
2479:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2480:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Write to USART CR3 */
2481:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR3, (uint32_t)tmpreg);
 243              		.loc 1 2481 0
 244 003e 4B61     		str	r3, [r1, #20]
2482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
2483:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the Over Sampling */
2484:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 245              		.loc 1 2484 0
 246 0040 E369     		ldr	r3, [r4, #28]
 247              	.LVL24:
 248 0042 B3F5004F 		cmp	r3, #32768
 249 0046 60D0     		beq	.L19
2485:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
2486:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
2488:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
ARM GAS  /tmp/ccUha3Mw.s 			page 49


2489:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2490:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
2491:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     else
2492:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
2493:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2494:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
2495:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2496:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   else
2497:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
2498:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2499:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 250              		.loc 1 2499 0
 251 0048 2368     		ldr	r3, [r4]
 252 004a B84A     		ldr	r2, .L20
 253 004c 9342     		cmp	r3, r2
 254 004e 00F01481 		beq	.L16
 255              		.loc 1 2499 0 is_stmt 0 discriminator 1
 256 0052 02F58062 		add	r2, r2, #1024
 257 0056 9342     		cmp	r3, r2
 258 0058 00F00F81 		beq	.L16
2500:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
2501:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2502:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
2503:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     else
2504:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
2505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 259              		.loc 1 2505 0 is_stmt 1
 260 005c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 261              	.LVL25:
 262 0060 00EB8000 		add	r0, r0, r0, lsl #2
 263 0064 00EB8000 		add	r0, r0, r0, lsl #2
 264 0068 6568     		ldr	r5, [r4, #4]
 265 006a AD00     		lsls	r5, r5, #2
 266 006c B0FBF5F5 		udiv	r5, r0, r5
 267 0070 AF4F     		ldr	r7, .L20+4
 268 0072 A7FB0535 		umull	r3, r5, r7, r5
 269 0076 6D09     		lsrs	r5, r5, #5
 270 0078 2E01     		lsls	r6, r5, #4
 271 007a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 272              	.LVL26:
 273 007e 00EB8000 		add	r0, r0, r0, lsl #2
 274 0082 00EB8000 		add	r0, r0, r0, lsl #2
 275 0086 6568     		ldr	r5, [r4, #4]
 276 0088 AD00     		lsls	r5, r5, #2
 277 008a B0FBF5F9 		udiv	r9, r0, r5
 278 008e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 279              	.LVL27:
 280 0092 00EB8000 		add	r0, r0, r0, lsl #2
 281 0096 00EB8000 		add	r0, r0, r0, lsl #2
 282 009a 6568     		ldr	r5, [r4, #4]
 283 009c AD00     		lsls	r5, r5, #2
 284 009e B0FBF5F5 		udiv	r5, r0, r5
 285 00a2 A7FB0535 		umull	r3, r5, r7, r5
 286 00a6 6D09     		lsrs	r5, r5, #5
 287 00a8 4FF06408 		mov	r8, #100
 288 00ac 08FB1595 		mls	r5, r8, r5, r9
 289 00b0 2D01     		lsls	r5, r5, #4
ARM GAS  /tmp/ccUha3Mw.s 			page 50


 290 00b2 3235     		adds	r5, r5, #50
 291 00b4 A7FB0535 		umull	r3, r5, r7, r5
 292 00b8 6D09     		lsrs	r5, r5, #5
 293 00ba 05F0F005 		and	r5, r5, #240
 294 00be 3544     		add	r5, r5, r6
 295 00c0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 296              	.LVL28:
 297 00c4 00EB8000 		add	r0, r0, r0, lsl #2
 298 00c8 00EB8000 		add	r0, r0, r0, lsl #2
 299 00cc 6668     		ldr	r6, [r4, #4]
 300 00ce B600     		lsls	r6, r6, #2
 301 00d0 B0FBF6F6 		udiv	r6, r0, r6
 302 00d4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 303              	.LVL29:
 304 00d8 00EB8000 		add	r0, r0, r0, lsl #2
 305 00dc 00EB8000 		add	r0, r0, r0, lsl #2
 306 00e0 6368     		ldr	r3, [r4, #4]
 307 00e2 9B00     		lsls	r3, r3, #2
 308 00e4 B0FBF3F0 		udiv	r0, r0, r3
 309 00e8 A7FB0030 		umull	r3, r0, r7, r0
 310 00ec 4009     		lsrs	r0, r0, #5
 311 00ee 08FB1068 		mls	r8, r8, r0, r6
 312 00f2 4FEA0818 		lsl	r8, r8, #4
 313 00f6 08F13208 		add	r8, r8, #50
 314 00fa A7FB0837 		umull	r3, r7, r7, r8
 315 00fe C7F34317 		ubfx	r7, r7, #5, #4
 316 0102 2368     		ldr	r3, [r4]
 317 0104 2F44     		add	r7, r7, r5
 318 0106 9F60     		str	r7, [r3, #8]
2506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
2507:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
2508:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 319              		.loc 1 2508 0
 320 0108 0DE1     		b	.L11
 321              	.LVL30:
 322              	.L19:
2487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 323              		.loc 1 2487 0
 324 010a 2368     		ldr	r3, [r4]
 325 010c 874A     		ldr	r2, .L20
 326 010e 9342     		cmp	r3, r2
 327 0110 5BD0     		beq	.L13
2487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 328              		.loc 1 2487 0 is_stmt 0 discriminator 1
 329 0112 02F58062 		add	r2, r2, #1024
 330 0116 9342     		cmp	r3, r2
 331 0118 57D0     		beq	.L13
2493:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 332              		.loc 1 2493 0 is_stmt 1
 333 011a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 334              	.LVL31:
 335 011e 00EB8000 		add	r0, r0, r0, lsl #2
 336 0122 00EB8000 		add	r0, r0, r0, lsl #2
 337 0126 6568     		ldr	r5, [r4, #4]
 338 0128 6D00     		lsls	r5, r5, #1
 339 012a B0FBF5F5 		udiv	r5, r0, r5
 340 012e 804F     		ldr	r7, .L20+4
ARM GAS  /tmp/ccUha3Mw.s 			page 51


 341 0130 A7FB0535 		umull	r3, r5, r7, r5
 342 0134 6D09     		lsrs	r5, r5, #5
 343 0136 2E01     		lsls	r6, r5, #4
 344 0138 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 345              	.LVL32:
 346 013c 00EB8000 		add	r0, r0, r0, lsl #2
 347 0140 00EB8000 		add	r0, r0, r0, lsl #2
 348 0144 6568     		ldr	r5, [r4, #4]
 349 0146 6D00     		lsls	r5, r5, #1
 350 0148 B0FBF5F9 		udiv	r9, r0, r5
 351 014c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 352              	.LVL33:
 353 0150 00EB8000 		add	r0, r0, r0, lsl #2
 354 0154 00EB8000 		add	r0, r0, r0, lsl #2
 355 0158 6568     		ldr	r5, [r4, #4]
 356 015a 6D00     		lsls	r5, r5, #1
 357 015c B0FBF5F5 		udiv	r5, r0, r5
 358 0160 A7FB0535 		umull	r3, r5, r7, r5
 359 0164 6D09     		lsrs	r5, r5, #5
 360 0166 4FF06408 		mov	r8, #100
 361 016a 08FB1595 		mls	r5, r8, r5, r9
 362 016e ED00     		lsls	r5, r5, #3
 363 0170 3235     		adds	r5, r5, #50
 364 0172 A7FB0535 		umull	r3, r5, r7, r5
 365 0176 6D09     		lsrs	r5, r5, #5
 366 0178 6D00     		lsls	r5, r5, #1
 367 017a 05F4F875 		and	r5, r5, #496
 368 017e 3544     		add	r5, r5, r6
 369 0180 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 370              	.LVL34:
 371 0184 00EB8000 		add	r0, r0, r0, lsl #2
 372 0188 00EB8000 		add	r0, r0, r0, lsl #2
 373 018c 6668     		ldr	r6, [r4, #4]
 374 018e 7600     		lsls	r6, r6, #1
 375 0190 B0FBF6F6 		udiv	r6, r0, r6
 376 0194 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 377              	.LVL35:
 378 0198 00EB8000 		add	r0, r0, r0, lsl #2
 379 019c 00EB8000 		add	r0, r0, r0, lsl #2
 380 01a0 6368     		ldr	r3, [r4, #4]
 381 01a2 5B00     		lsls	r3, r3, #1
 382 01a4 B0FBF3F3 		udiv	r3, r0, r3
 383 01a8 A7FB0323 		umull	r2, r3, r7, r3
 384 01ac 5B09     		lsrs	r3, r3, #5
 385 01ae 08FB1368 		mls	r8, r8, r3, r6
 386 01b2 4FEAC808 		lsl	r8, r8, #3
 387 01b6 08F13208 		add	r8, r8, #50
 388 01ba A7FB0837 		umull	r3, r7, r7, r8
 389 01be C7F34217 		ubfx	r7, r7, #5, #3
 390 01c2 2368     		ldr	r3, [r4]
 391 01c4 2F44     		add	r7, r7, r5
 392 01c6 9F60     		str	r7, [r3, #8]
 393 01c8 ADE0     		b	.L11
 394              	.LVL36:
 395              	.L13:
2489:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 396              		.loc 1 2489 0
ARM GAS  /tmp/ccUha3Mw.s 			page 52


 397 01ca FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 398              	.LVL37:
 399 01ce 00EB8000 		add	r0, r0, r0, lsl #2
 400 01d2 00EB8000 		add	r0, r0, r0, lsl #2
 401 01d6 6568     		ldr	r5, [r4, #4]
 402 01d8 6D00     		lsls	r5, r5, #1
 403 01da B0FBF5F5 		udiv	r5, r0, r5
 404 01de 544F     		ldr	r7, .L20+4
 405 01e0 A7FB0535 		umull	r3, r5, r7, r5
 406 01e4 6D09     		lsrs	r5, r5, #5
 407 01e6 2E01     		lsls	r6, r5, #4
 408 01e8 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 409              	.LVL38:
 410 01ec 00EB8000 		add	r0, r0, r0, lsl #2
 411 01f0 00EB8000 		add	r0, r0, r0, lsl #2
 412 01f4 6568     		ldr	r5, [r4, #4]
 413 01f6 6D00     		lsls	r5, r5, #1
 414 01f8 B0FBF5F9 		udiv	r9, r0, r5
 415 01fc FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 416              	.LVL39:
 417 0200 00EB8000 		add	r0, r0, r0, lsl #2
 418 0204 00EB8000 		add	r0, r0, r0, lsl #2
 419 0208 6568     		ldr	r5, [r4, #4]
 420 020a 6D00     		lsls	r5, r5, #1
 421 020c B0FBF5F5 		udiv	r5, r0, r5
 422 0210 A7FB0535 		umull	r3, r5, r7, r5
 423 0214 6D09     		lsrs	r5, r5, #5
 424 0216 4FF06408 		mov	r8, #100
 425 021a 08FB1595 		mls	r5, r8, r5, r9
 426 021e ED00     		lsls	r5, r5, #3
 427 0220 3235     		adds	r5, r5, #50
 428 0222 A7FB0535 		umull	r3, r5, r7, r5
 429 0226 6D09     		lsrs	r5, r5, #5
 430 0228 6D00     		lsls	r5, r5, #1
 431 022a 05F4F875 		and	r5, r5, #496
 432 022e 3544     		add	r5, r5, r6
 433 0230 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 434              	.LVL40:
 435 0234 00EB8000 		add	r0, r0, r0, lsl #2
 436 0238 00EB8000 		add	r0, r0, r0, lsl #2
 437 023c 6668     		ldr	r6, [r4, #4]
 438 023e 7600     		lsls	r6, r6, #1
 439 0240 B0FBF6F6 		udiv	r6, r0, r6
 440 0244 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 441              	.LVL41:
 442 0248 00EB8000 		add	r0, r0, r0, lsl #2
 443 024c 00EB8000 		add	r0, r0, r0, lsl #2
 444 0250 6368     		ldr	r3, [r4, #4]
 445 0252 5B00     		lsls	r3, r3, #1
 446 0254 B0FBF3F3 		udiv	r3, r0, r3
 447 0258 A7FB0323 		umull	r2, r3, r7, r3
 448 025c 5B09     		lsrs	r3, r3, #5
 449 025e 08FB1368 		mls	r8, r8, r3, r6
 450 0262 4FEAC808 		lsl	r8, r8, #3
 451 0266 08F13208 		add	r8, r8, #50
 452 026a A7FB0837 		umull	r3, r7, r7, r8
 453 026e C7F34217 		ubfx	r7, r7, #5, #3
ARM GAS  /tmp/ccUha3Mw.s 			page 53


 454 0272 2368     		ldr	r3, [r4]
 455 0274 2F44     		add	r7, r7, r5
 456 0276 9F60     		str	r7, [r3, #8]
 457 0278 55E0     		b	.L11
 458              	.LVL42:
 459              	.L16:
2501:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 460              		.loc 1 2501 0
 461 027a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 462              	.LVL43:
 463 027e 00EB8000 		add	r0, r0, r0, lsl #2
 464 0282 00EB8000 		add	r0, r0, r0, lsl #2
 465 0286 6568     		ldr	r5, [r4, #4]
 466 0288 AD00     		lsls	r5, r5, #2
 467 028a B0FBF5F5 		udiv	r5, r0, r5
 468 028e 284F     		ldr	r7, .L20+4
 469 0290 A7FB0535 		umull	r3, r5, r7, r5
 470 0294 6D09     		lsrs	r5, r5, #5
 471 0296 2E01     		lsls	r6, r5, #4
 472 0298 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 473              	.LVL44:
 474 029c 00EB8000 		add	r0, r0, r0, lsl #2
 475 02a0 00EB8000 		add	r0, r0, r0, lsl #2
 476 02a4 6568     		ldr	r5, [r4, #4]
 477 02a6 AD00     		lsls	r5, r5, #2
 478 02a8 B0FBF5F9 		udiv	r9, r0, r5
 479 02ac FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 480              	.LVL45:
 481 02b0 00EB8000 		add	r0, r0, r0, lsl #2
 482 02b4 00EB8000 		add	r0, r0, r0, lsl #2
 483 02b8 6568     		ldr	r5, [r4, #4]
 484 02ba AD00     		lsls	r5, r5, #2
 485 02bc B0FBF5F5 		udiv	r5, r0, r5
 486 02c0 A7FB0535 		umull	r3, r5, r7, r5
 487 02c4 6D09     		lsrs	r5, r5, #5
 488 02c6 4FF06408 		mov	r8, #100
 489 02ca 08FB1595 		mls	r5, r8, r5, r9
 490 02ce 2D01     		lsls	r5, r5, #4
 491 02d0 3235     		adds	r5, r5, #50
 492 02d2 A7FB0535 		umull	r3, r5, r7, r5
 493 02d6 6D09     		lsrs	r5, r5, #5
 494 02d8 05F0F005 		and	r5, r5, #240
 495 02dc 3544     		add	r5, r5, r6
 496 02de FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 497              	.LVL46:
 498 02e2 00EB8000 		add	r0, r0, r0, lsl #2
 499 02e6 00EB8000 		add	r0, r0, r0, lsl #2
 500 02ea 6668     		ldr	r6, [r4, #4]
 501 02ec B600     		lsls	r6, r6, #2
 502 02ee B0FBF6F6 		udiv	r6, r0, r6
 503 02f2 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 504              	.LVL47:
 505 02f6 00EB8000 		add	r0, r0, r0, lsl #2
 506 02fa 00EB8000 		add	r0, r0, r0, lsl #2
 507 02fe 6368     		ldr	r3, [r4, #4]
 508 0300 9B00     		lsls	r3, r3, #2
 509 0302 B0FBF3F0 		udiv	r0, r0, r3
ARM GAS  /tmp/ccUha3Mw.s 			page 54


 510 0306 A7FB0030 		umull	r3, r0, r7, r0
 511 030a 4009     		lsrs	r0, r0, #5
 512 030c 08FB1068 		mls	r8, r8, r0, r6
 513 0310 4FEA0818 		lsl	r8, r8, #4
 514 0314 08F13208 		add	r8, r8, #50
 515 0318 A7FB0837 		umull	r3, r7, r7, r8
 516 031c C7F34317 		ubfx	r7, r7, #5, #4
 517 0320 2368     		ldr	r3, [r4]
 518 0322 2F44     		add	r7, r7, r5
 519 0324 9F60     		str	r7, [r3, #8]
 520              	.L11:
 521              		.loc 1 2508 0
 522 0326 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 523              	.LVL48:
 524              	.L21:
 525 032a 00BF     		.align	2
 526              	.L20:
 527 032c 00100140 		.word	1073811456
 528 0330 1F85EB51 		.word	1374389535
 529              		.cfi_endproc
 530              	.LFE120:
 532              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 533              		.align	1
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu softvfp
 539              	UART_WaitOnFlagUntilTimeout:
 540              	.LFB109:
2109:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Wait until flag is set */
 541              		.loc 1 2109 0
 542              		.cfi_startproc
 543              		@ args = 4, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              	.LVL49:
 546 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 547              	.LCFI1:
 548              		.cfi_def_cfa_offset 24
 549              		.cfi_offset 4, -24
 550              		.cfi_offset 5, -20
 551              		.cfi_offset 6, -16
 552              		.cfi_offset 7, -12
 553              		.cfi_offset 8, -8
 554              		.cfi_offset 14, -4
 555 0004 0546     		mov	r5, r0
 556 0006 0F46     		mov	r7, r1
 557 0008 1646     		mov	r6, r2
 558 000a 9846     		mov	r8, r3
 559 000c 069C     		ldr	r4, [sp, #24]
 560              	.LVL50:
 561              	.L24:
2111:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 562              		.loc 1 2111 0
 563 000e 2B68     		ldr	r3, [r5]
 564 0010 1B68     		ldr	r3, [r3]
 565 0012 37EA0303 		bics	r3, r7, r3
 566 0016 0CBF     		ite	eq
ARM GAS  /tmp/ccUha3Mw.s 			page 55


 567 0018 0123     		moveq	r3, #1
 568 001a 0023     		movne	r3, #0
 569 001c B342     		cmp	r3, r6
 570 001e 1DD1     		bne	.L29
2114:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 571              		.loc 1 2114 0
 572 0020 B4F1FF3F 		cmp	r4, #-1
 573 0024 F3D0     		beq	.L24
2116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 574              		.loc 1 2116 0
 575 0026 2CB1     		cbz	r4, .L25
2116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 576              		.loc 1 2116 0 is_stmt 0 discriminator 1
 577 0028 FFF7FEFF 		bl	HAL_GetTick
 578              	.LVL51:
 579 002c A0EB0800 		sub	r0, r0, r8
 580 0030 A042     		cmp	r0, r4
 581 0032 ECD9     		bls	.L24
 582              	.L25:
2119:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 583              		.loc 1 2119 0 is_stmt 1
 584 0034 2A68     		ldr	r2, [r5]
 585 0036 D368     		ldr	r3, [r2, #12]
 586 0038 23F4D073 		bic	r3, r3, #416
 587 003c D360     		str	r3, [r2, #12]
2120:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         
 588              		.loc 1 2120 0
 589 003e 2A68     		ldr	r2, [r5]
 590 0040 5369     		ldr	r3, [r2, #20]
 591 0042 23F00103 		bic	r3, r3, #1
 592 0046 5361     		str	r3, [r2, #20]
2122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 593              		.loc 1 2122 0
 594 0048 2023     		movs	r3, #32
 595 004a 85F83930 		strb	r3, [r5, #57]
2123:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         
 596              		.loc 1 2123 0
 597 004e 85F83A30 		strb	r3, [r5, #58]
2126:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         
 598              		.loc 1 2126 0
 599 0052 0023     		movs	r3, #0
 600 0054 85F83830 		strb	r3, [r5, #56]
2128:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 601              		.loc 1 2128 0
 602 0058 0320     		movs	r0, #3
 603 005a 00E0     		b	.L26
 604              	.L29:
2133:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 605              		.loc 1 2133 0
 606 005c 0020     		movs	r0, #0
 607              	.L26:
2134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 608              		.loc 1 2134 0
 609 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 610              		.cfi_endproc
 611              	.LFE109:
 613              		.section	.text.HAL_UART_MspInit,"ax",%progbits
ARM GAS  /tmp/ccUha3Mw.s 			page 56


 614              		.align	1
 615              		.weak	HAL_UART_MspInit
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 619              		.fpu softvfp
 621              	HAL_UART_MspInit:
 622              	.LFB71:
 528:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    /* Prevent unused argument(s) compilation warning */
 623              		.loc 1 528 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628              	.LVL52:
 534:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 629              		.loc 1 534 0
 630 0000 7047     		bx	lr
 631              		.cfi_endproc
 632              	.LFE71:
 634              		.section	.text.HAL_UART_Init,"ax",%progbits
 635              		.align	1
 636              		.global	HAL_UART_Init
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 640              		.fpu softvfp
 642              	HAL_UART_Init:
 643              	.LFB66:
 245:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 644              		.loc 1 245 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              	.LVL53:
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 649              		.loc 1 247 0
 650 0000 58B3     		cbz	r0, .L34
 245:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 651              		.loc 1 245 0
 652 0002 10B5     		push	{r4, lr}
 653              	.LCFI2:
 654              		.cfi_def_cfa_offset 8
 655              		.cfi_offset 4, -8
 656              		.cfi_offset 14, -4
 657 0004 0446     		mov	r4, r0
 266:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {  
 658              		.loc 1 266 0
 659 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 660 000a 0BB3     		cbz	r3, .L39
 661              	.LVL54:
 662              	.L33:
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 663              		.loc 1 274 0
 664 000c 2423     		movs	r3, #36
 665 000e 84F83930 		strb	r3, [r4, #57]
 277:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
ARM GAS  /tmp/ccUha3Mw.s 			page 57


 666              		.loc 1 277 0
 667 0012 2268     		ldr	r2, [r4]
 668 0014 D368     		ldr	r3, [r2, #12]
 669 0016 23F40053 		bic	r3, r3, #8192
 670 001a D360     		str	r3, [r2, #12]
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 671              		.loc 1 280 0
 672 001c 2046     		mov	r0, r4
 673 001e FFF7FEFF 		bl	UART_SetConfig
 674              	.LVL55:
 285:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 675              		.loc 1 285 0
 676 0022 2268     		ldr	r2, [r4]
 677 0024 1369     		ldr	r3, [r2, #16]
 678 0026 23F49043 		bic	r3, r3, #18432
 679 002a 1361     		str	r3, [r2, #16]
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 680              		.loc 1 286 0
 681 002c 2268     		ldr	r2, [r4]
 682 002e 5369     		ldr	r3, [r2, #20]
 683 0030 23F02A03 		bic	r3, r3, #42
 684 0034 5361     		str	r3, [r2, #20]
 289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 685              		.loc 1 289 0
 686 0036 2268     		ldr	r2, [r4]
 687 0038 D368     		ldr	r3, [r2, #12]
 688 003a 43F40053 		orr	r3, r3, #8192
 689 003e D360     		str	r3, [r2, #12]
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 690              		.loc 1 292 0
 691 0040 0020     		movs	r0, #0
 692 0042 E063     		str	r0, [r4, #60]
 293:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 693              		.loc 1 293 0
 694 0044 2023     		movs	r3, #32
 695 0046 84F83930 		strb	r3, [r4, #57]
 294:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 696              		.loc 1 294 0
 697 004a 84F83A30 		strb	r3, [r4, #58]
 297:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 698              		.loc 1 297 0
 699 004e 10BD     		pop	{r4, pc}
 700              	.LVL56:
 701              	.L39:
 269:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Init the low level hardware */
 702              		.loc 1 269 0
 703 0050 80F83830 		strb	r3, [r0, #56]
 271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 704              		.loc 1 271 0
 705 0054 FFF7FEFF 		bl	HAL_UART_MspInit
 706              	.LVL57:
 707 0058 D8E7     		b	.L33
 708              	.LVL58:
 709              	.L34:
 710              	.LCFI3:
 711              		.cfi_def_cfa_offset 0
 712              		.cfi_restore 4
ARM GAS  /tmp/ccUha3Mw.s 			page 58


 713              		.cfi_restore 14
 249:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 714              		.loc 1 249 0
 715 005a 0120     		movs	r0, #1
 716              	.LVL59:
 297:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 717              		.loc 1 297 0
 718 005c 7047     		bx	lr
 719              		.cfi_endproc
 720              	.LFE66:
 722              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 723              		.align	1
 724              		.global	HAL_HalfDuplex_Init
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 728              		.fpu softvfp
 730              	HAL_HalfDuplex_Init:
 731              	.LFB67:
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 732              		.loc 1 307 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              	.LVL60:
 309:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 737              		.loc 1 309 0
 738 0000 0028     		cmp	r0, #0
 739 0002 30D0     		beq	.L43
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 740              		.loc 1 307 0
 741 0004 10B5     		push	{r4, lr}
 742              	.LCFI4:
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 4, -8
 745              		.cfi_offset 14, -4
 746 0006 0446     		mov	r4, r0
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   { 
 747              		.loc 1 319 0
 748 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 749 000c 33B3     		cbz	r3, .L48
 750              	.LVL61:
 751              	.L42:
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 752              		.loc 1 327 0
 753 000e 2423     		movs	r3, #36
 754 0010 84F83930 		strb	r3, [r4, #57]
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 755              		.loc 1 330 0
 756 0014 2268     		ldr	r2, [r4]
 757 0016 D368     		ldr	r3, [r2, #12]
 758 0018 23F40053 		bic	r3, r3, #8192
 759 001c D360     		str	r3, [r2, #12]
 333:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 760              		.loc 1 333 0
 761 001e 2046     		mov	r0, r4
 762 0020 FFF7FEFF 		bl	UART_SetConfig
ARM GAS  /tmp/ccUha3Mw.s 			page 59


 763              	.LVL62:
 338:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 764              		.loc 1 338 0
 765 0024 2268     		ldr	r2, [r4]
 766 0026 1369     		ldr	r3, [r2, #16]
 767 0028 23F49043 		bic	r3, r3, #18432
 768 002c 1361     		str	r3, [r2, #16]
 339:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 769              		.loc 1 339 0
 770 002e 2268     		ldr	r2, [r4]
 771 0030 5369     		ldr	r3, [r2, #20]
 772 0032 23F02203 		bic	r3, r3, #34
 773 0036 5361     		str	r3, [r2, #20]
 342:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****  
 774              		.loc 1 342 0
 775 0038 2268     		ldr	r2, [r4]
 776 003a 5369     		ldr	r3, [r2, #20]
 777 003c 43F00803 		orr	r3, r3, #8
 778 0040 5361     		str	r3, [r2, #20]
 345:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 779              		.loc 1 345 0
 780 0042 2268     		ldr	r2, [r4]
 781 0044 D368     		ldr	r3, [r2, #12]
 782 0046 43F40053 		orr	r3, r3, #8192
 783 004a D360     		str	r3, [r2, #12]
 348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 784              		.loc 1 348 0
 785 004c 0020     		movs	r0, #0
 786 004e E063     		str	r0, [r4, #60]
 349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 787              		.loc 1 349 0
 788 0050 2023     		movs	r3, #32
 789 0052 84F83930 		strb	r3, [r4, #57]
 350:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 790              		.loc 1 350 0
 791 0056 84F83A30 		strb	r3, [r4, #58]
 353:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 792              		.loc 1 353 0
 793 005a 10BD     		pop	{r4, pc}
 794              	.LVL63:
 795              	.L48:
 322:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Init the low level hardware */
 796              		.loc 1 322 0
 797 005c 80F83830 		strb	r3, [r0, #56]
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 798              		.loc 1 324 0
 799 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 800              	.LVL64:
 801 0064 D3E7     		b	.L42
 802              	.LVL65:
 803              	.L43:
 804              	.LCFI5:
 805              		.cfi_def_cfa_offset 0
 806              		.cfi_restore 4
 807              		.cfi_restore 14
 311:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 808              		.loc 1 311 0
ARM GAS  /tmp/ccUha3Mw.s 			page 60


 809 0066 0120     		movs	r0, #1
 810              	.LVL66:
 353:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 811              		.loc 1 353 0
 812 0068 7047     		bx	lr
 813              		.cfi_endproc
 814              	.LFE67:
 816              		.section	.text.HAL_LIN_Init,"ax",%progbits
 817              		.align	1
 818              		.global	HAL_LIN_Init
 819              		.syntax unified
 820              		.thumb
 821              		.thumb_func
 822              		.fpu softvfp
 824              	HAL_LIN_Init:
 825              	.LFB68:
 367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 826              		.loc 1 367 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              	.LVL67:
 369:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 831              		.loc 1 369 0
 832 0000 0028     		cmp	r0, #0
 833 0002 3BD0     		beq	.L52
 367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 834              		.loc 1 367 0
 835 0004 38B5     		push	{r3, r4, r5, lr}
 836              	.LCFI6:
 837              		.cfi_def_cfa_offset 16
 838              		.cfi_offset 3, -16
 839              		.cfi_offset 4, -12
 840              		.cfi_offset 5, -8
 841              		.cfi_offset 14, -4
 842 0006 0446     		mov	r4, r0
 843 0008 0D46     		mov	r5, r1
 380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 844              		.loc 1 380 0
 845 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 846 000e 002B     		cmp	r3, #0
 847 0010 2FD0     		beq	.L57
 848              	.LVL68:
 849              	.L51:
 388:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 850              		.loc 1 388 0
 851 0012 2423     		movs	r3, #36
 852 0014 84F83930 		strb	r3, [r4, #57]
 391:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 853              		.loc 1 391 0
 854 0018 2268     		ldr	r2, [r4]
 855 001a D368     		ldr	r3, [r2, #12]
 856 001c 23F40053 		bic	r3, r3, #8192
 857 0020 D360     		str	r3, [r2, #12]
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 858              		.loc 1 394 0
 859 0022 2046     		mov	r0, r4
ARM GAS  /tmp/ccUha3Mw.s 			page 61


 860 0024 FFF7FEFF 		bl	UART_SetConfig
 861              	.LVL69:
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 862              		.loc 1 399 0
 863 0028 2268     		ldr	r2, [r4]
 864 002a 1369     		ldr	r3, [r2, #16]
 865 002c 23F40063 		bic	r3, r3, #2048
 866 0030 1361     		str	r3, [r2, #16]
 400:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 867              		.loc 1 400 0
 868 0032 2268     		ldr	r2, [r4]
 869 0034 5369     		ldr	r3, [r2, #20]
 870 0036 23F02A03 		bic	r3, r3, #42
 871 003a 5361     		str	r3, [r2, #20]
 403:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 872              		.loc 1 403 0
 873 003c 2268     		ldr	r2, [r4]
 874 003e 1369     		ldr	r3, [r2, #16]
 875 0040 43F48043 		orr	r3, r3, #16384
 876 0044 1361     		str	r3, [r2, #16]
 406:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 877              		.loc 1 406 0
 878 0046 2268     		ldr	r2, [r4]
 879 0048 1369     		ldr	r3, [r2, #16]
 880 004a 23F02003 		bic	r3, r3, #32
 881 004e 1361     		str	r3, [r2, #16]
 407:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 882              		.loc 1 407 0
 883 0050 2368     		ldr	r3, [r4]
 884 0052 1969     		ldr	r1, [r3, #16]
 885 0054 0D43     		orrs	r5, r5, r1
 886              	.LVL70:
 887 0056 1D61     		str	r5, [r3, #16]
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 888              		.loc 1 410 0
 889 0058 2268     		ldr	r2, [r4]
 890 005a D368     		ldr	r3, [r2, #12]
 891 005c 43F40053 		orr	r3, r3, #8192
 892 0060 D360     		str	r3, [r2, #12]
 413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 893              		.loc 1 413 0
 894 0062 0020     		movs	r0, #0
 895 0064 E063     		str	r0, [r4, #60]
 414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 896              		.loc 1 414 0
 897 0066 2023     		movs	r3, #32
 898 0068 84F83930 		strb	r3, [r4, #57]
 415:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 899              		.loc 1 415 0
 900 006c 84F83A30 		strb	r3, [r4, #58]
 418:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 901              		.loc 1 418 0
 902 0070 38BD     		pop	{r3, r4, r5, pc}
 903              	.LVL71:
 904              	.L57:
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Init the low level hardware */
 905              		.loc 1 383 0
ARM GAS  /tmp/ccUha3Mw.s 			page 62


 906 0072 80F83830 		strb	r3, [r0, #56]
 385:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 907              		.loc 1 385 0
 908 0076 FFF7FEFF 		bl	HAL_UART_MspInit
 909              	.LVL72:
 910 007a CAE7     		b	.L51
 911              	.LVL73:
 912              	.L52:
 913              	.LCFI7:
 914              		.cfi_def_cfa_offset 0
 915              		.cfi_restore 3
 916              		.cfi_restore 4
 917              		.cfi_restore 5
 918              		.cfi_restore 14
 371:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 919              		.loc 1 371 0
 920 007c 0120     		movs	r0, #1
 921              	.LVL74:
 418:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 922              		.loc 1 418 0
 923 007e 7047     		bx	lr
 924              		.cfi_endproc
 925              	.LFE68:
 927              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 928              		.align	1
 929              		.global	HAL_MultiProcessor_Init
 930              		.syntax unified
 931              		.thumb
 932              		.thumb_func
 933              		.fpu softvfp
 935              	HAL_MultiProcessor_Init:
 936              	.LFB69:
 433:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 937              		.loc 1 433 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              	.LVL75:
 435:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 942              		.loc 1 435 0
 943 0000 0028     		cmp	r0, #0
 944 0002 40D0     		beq	.L61
 433:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 945              		.loc 1 433 0
 946 0004 70B5     		push	{r4, r5, r6, lr}
 947              	.LCFI8:
 948              		.cfi_def_cfa_offset 16
 949              		.cfi_offset 4, -16
 950              		.cfi_offset 5, -12
 951              		.cfi_offset 6, -8
 952              		.cfi_offset 14, -4
 953 0006 0446     		mov	r4, r0
 954 0008 1646     		mov	r6, r2
 955 000a 0D46     		mov	r5, r1
 447:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 956              		.loc 1 447 0
 957 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
ARM GAS  /tmp/ccUha3Mw.s 			page 63


 958 0010 002B     		cmp	r3, #0
 959 0012 33D0     		beq	.L66
 960              	.LVL76:
 961              	.L60:
 455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 962              		.loc 1 455 0
 963 0014 2423     		movs	r3, #36
 964 0016 84F83930 		strb	r3, [r4, #57]
 458:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 965              		.loc 1 458 0
 966 001a 2268     		ldr	r2, [r4]
 967 001c D368     		ldr	r3, [r2, #12]
 968 001e 23F40053 		bic	r3, r3, #8192
 969 0022 D360     		str	r3, [r2, #12]
 461:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 970              		.loc 1 461 0
 971 0024 2046     		mov	r0, r4
 972 0026 FFF7FEFF 		bl	UART_SetConfig
 973              	.LVL77:
 466:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 974              		.loc 1 466 0
 975 002a 2268     		ldr	r2, [r4]
 976 002c 1369     		ldr	r3, [r2, #16]
 977 002e 23F49043 		bic	r3, r3, #18432
 978 0032 1361     		str	r3, [r2, #16]
 467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 979              		.loc 1 467 0
 980 0034 2268     		ldr	r2, [r4]
 981 0036 5369     		ldr	r3, [r2, #20]
 982 0038 23F02A03 		bic	r3, r3, #42
 983 003c 5361     		str	r3, [r2, #20]
 470:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Set the USART address node */
 984              		.loc 1 470 0
 985 003e 2268     		ldr	r2, [r4]
 986 0040 1369     		ldr	r3, [r2, #16]
 987 0042 23F00F03 		bic	r3, r3, #15
 988 0046 1361     		str	r3, [r2, #16]
 472:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 989              		.loc 1 472 0
 990 0048 2368     		ldr	r3, [r4]
 991 004a 1969     		ldr	r1, [r3, #16]
 992 004c 0D43     		orrs	r5, r5, r1
 993 004e 1D61     		str	r5, [r3, #16]
 475:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 994              		.loc 1 475 0
 995 0050 2268     		ldr	r2, [r4]
 996 0052 D368     		ldr	r3, [r2, #12]
 997 0054 23F40063 		bic	r3, r3, #2048
 998 0058 D360     		str	r3, [r2, #12]
 476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 999              		.loc 1 476 0
 1000 005a 2168     		ldr	r1, [r4]
 1001 005c CB68     		ldr	r3, [r1, #12]
 1002 005e 3343     		orrs	r3, r3, r6
 1003 0060 CB60     		str	r3, [r1, #12]
 479:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 1004              		.loc 1 479 0
ARM GAS  /tmp/ccUha3Mw.s 			page 64


 1005 0062 2268     		ldr	r2, [r4]
 1006 0064 D368     		ldr	r3, [r2, #12]
 1007 0066 43F40053 		orr	r3, r3, #8192
 1008 006a D360     		str	r3, [r2, #12]
 482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 1009              		.loc 1 482 0
 1010 006c 0020     		movs	r0, #0
 1011 006e E063     		str	r0, [r4, #60]
 483:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 1012              		.loc 1 483 0
 1013 0070 2023     		movs	r3, #32
 1014 0072 84F83930 		strb	r3, [r4, #57]
 484:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 1015              		.loc 1 484 0
 1016 0076 84F83A30 		strb	r3, [r4, #58]
 487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1017              		.loc 1 487 0
 1018 007a 70BD     		pop	{r4, r5, r6, pc}
 1019              	.LVL78:
 1020              	.L66:
 450:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     /* Init the low level hardware */
 1021              		.loc 1 450 0
 1022 007c 80F83830 		strb	r3, [r0, #56]
 452:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1023              		.loc 1 452 0
 1024 0080 FFF7FEFF 		bl	HAL_UART_MspInit
 1025              	.LVL79:
 1026 0084 C6E7     		b	.L60
 1027              	.LVL80:
 1028              	.L61:
 1029              	.LCFI9:
 1030              		.cfi_def_cfa_offset 0
 1031              		.cfi_restore 4
 1032              		.cfi_restore 5
 1033              		.cfi_restore 6
 1034              		.cfi_restore 14
 437:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1035              		.loc 1 437 0
 1036 0086 0120     		movs	r0, #1
 1037              	.LVL81:
 487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1038              		.loc 1 487 0
 1039 0088 7047     		bx	lr
 1040              		.cfi_endproc
 1041              	.LFE69:
 1043              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 1044              		.align	1
 1045              		.weak	HAL_UART_MspDeInit
 1046              		.syntax unified
 1047              		.thumb
 1048              		.thumb_func
 1049              		.fpu softvfp
 1051              	HAL_UART_MspDeInit:
 1052              	.LFB72:
 543:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1053              		.loc 1 543 0
 1054              		.cfi_startproc
ARM GAS  /tmp/ccUha3Mw.s 			page 65


 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              		@ link register save eliminated.
 1058              	.LVL82:
 549:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1059              		.loc 1 549 0
 1060 0000 7047     		bx	lr
 1061              		.cfi_endproc
 1062              	.LFE72:
 1064              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 1065              		.align	1
 1066              		.global	HAL_UART_DeInit
 1067              		.syntax unified
 1068              		.thumb
 1069              		.thumb_func
 1070              		.fpu softvfp
 1072              	HAL_UART_DeInit:
 1073              	.LFB70:
 496:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 1074              		.loc 1 496 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 0
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
 1078              	.LVL83:
 498:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 1079              		.loc 1 498 0
 1080 0000 78B1     		cbz	r0, .L70
 496:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the UART handle allocation */
 1081              		.loc 1 496 0
 1082 0002 10B5     		push	{r4, lr}
 1083              	.LCFI10:
 1084              		.cfi_def_cfa_offset 8
 1085              		.cfi_offset 4, -8
 1086              		.cfi_offset 14, -4
 1087 0004 0446     		mov	r4, r0
 506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 1088              		.loc 1 506 0
 1089 0006 2423     		movs	r3, #36
 1090 0008 80F83930 		strb	r3, [r0, #57]
 509:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 1091              		.loc 1 509 0
 1092 000c FFF7FEFF 		bl	HAL_UART_MspDeInit
 1093              	.LVL84:
 511:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 1094              		.loc 1 511 0
 1095 0010 0020     		movs	r0, #0
 1096 0012 E063     		str	r0, [r4, #60]
 512:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 1097              		.loc 1 512 0
 1098 0014 84F83900 		strb	r0, [r4, #57]
 513:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1099              		.loc 1 513 0
 1100 0018 84F83A00 		strb	r0, [r4, #58]
 516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1101              		.loc 1 516 0
 1102 001c 84F83800 		strb	r0, [r4, #56]
 519:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
ARM GAS  /tmp/ccUha3Mw.s 			page 66


 1103              		.loc 1 519 0
 1104 0020 10BD     		pop	{r4, pc}
 1105              	.LVL85:
 1106              	.L70:
 1107              	.LCFI11:
 1108              		.cfi_def_cfa_offset 0
 1109              		.cfi_restore 4
 1110              		.cfi_restore 14
 500:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1111              		.loc 1 500 0
 1112 0022 0120     		movs	r0, #1
 1113              	.LVL86:
 519:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1114              		.loc 1 519 0
 1115 0024 7047     		bx	lr
 1116              		.cfi_endproc
 1117              	.LFE70:
 1119              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 1120              		.align	1
 1121              		.global	HAL_UART_Transmit
 1122              		.syntax unified
 1123              		.thumb
 1124              		.thumb_func
 1125              		.fpu softvfp
 1127              	HAL_UART_Transmit:
 1128              	.LFB73:
 617:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint16_t* tmp;
 1129              		.loc 1 617 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 0
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 1133              	.LVL87:
 1134 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1135              	.LCFI12:
 1136              		.cfi_def_cfa_offset 24
 1137              		.cfi_offset 4, -24
 1138              		.cfi_offset 5, -20
 1139              		.cfi_offset 6, -16
 1140              		.cfi_offset 7, -12
 1141              		.cfi_offset 8, -8
 1142              		.cfi_offset 14, -4
 1143 0004 82B0     		sub	sp, sp, #8
 1144              	.LCFI13:
 1145              		.cfi_def_cfa_offset 32
 1146 0006 1E46     		mov	r6, r3
 1147              	.LVL88:
 622:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 1148              		.loc 1 622 0
 1149 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1150              	.LVL89:
 1151 000c DBB2     		uxtb	r3, r3
 1152 000e 202B     		cmp	r3, #32
 1153 0010 55D1     		bne	.L82
 1154 0012 0446     		mov	r4, r0
 1155 0014 0D46     		mov	r5, r1
 1156 0016 9046     		mov	r8, r2
 624:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
ARM GAS  /tmp/ccUha3Mw.s 			page 67


 1157              		.loc 1 624 0
 1158 0018 0029     		cmp	r1, #0
 1159 001a 55D0     		beq	.L83
 624:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1160              		.loc 1 624 0 is_stmt 0 discriminator 1
 1161 001c 002A     		cmp	r2, #0
 1162 001e 55D0     		beq	.L84
 630:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1163              		.loc 1 630 0 is_stmt 1
 1164 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1165 0024 012B     		cmp	r3, #1
 1166 0026 53D0     		beq	.L85
 630:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1167              		.loc 1 630 0 is_stmt 0 discriminator 2
 1168 0028 0123     		movs	r3, #1
 1169 002a 80F83830 		strb	r3, [r0, #56]
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1170              		.loc 1 632 0 is_stmt 1 discriminator 2
 1171 002e 0023     		movs	r3, #0
 1172 0030 C363     		str	r3, [r0, #60]
 633:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1173              		.loc 1 633 0 discriminator 2
 1174 0032 2123     		movs	r3, #33
 1175 0034 80F83930 		strb	r3, [r0, #57]
 636:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1176              		.loc 1 636 0 discriminator 2
 1177 0038 FFF7FEFF 		bl	HAL_GetTick
 1178              	.LVL90:
 1179 003c 0746     		mov	r7, r0
 1180              	.LVL91:
 638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferCount = Size;
 1181              		.loc 1 638 0 discriminator 2
 1182 003e A4F82480 		strh	r8, [r4, #36]	@ movhi
 639:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 1183              		.loc 1 639 0 discriminator 2
 1184 0042 A4F82680 		strh	r8, [r4, #38]	@ movhi
 640:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1185              		.loc 1 640 0 discriminator 2
 1186 0046 10E0     		b	.L77
 1187              	.LVL92:
 1188              	.L91:
 645:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         { 
 1189              		.loc 1 645 0
 1190 0048 0096     		str	r6, [sp]
 1191 004a 3B46     		mov	r3, r7
 1192 004c 0022     		movs	r2, #0
 1193 004e 8021     		movs	r1, #128
 1194 0050 2046     		mov	r0, r4
 1195 0052 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1196              	.LVL93:
 1197 0056 0028     		cmp	r0, #0
 1198 0058 3CD1     		bne	.L86
 1199              	.LVL94:
 650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1200              		.loc 1 650 0
 1201 005a 2B88     		ldrh	r3, [r5]
 1202 005c 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccUha3Mw.s 			page 68


 1203 005e C3F30803 		ubfx	r3, r3, #0, #9
 1204 0062 5360     		str	r3, [r2, #4]
 651:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         {
 1205              		.loc 1 651 0
 1206 0064 2369     		ldr	r3, [r4, #16]
 1207 0066 C3B9     		cbnz	r3, .L79
 653:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 1208              		.loc 1 653 0
 1209 0068 0235     		adds	r5, r5, #2
 1210              	.LVL95:
 1211              	.L77:
 640:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1212              		.loc 1 640 0
 1213 006a E38C     		ldrh	r3, [r4, #38]
 1214 006c 9BB2     		uxth	r3, r3
 1215 006e B3B1     		cbz	r3, .L90
 642:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1216              		.loc 1 642 0
 1217 0070 E38C     		ldrh	r3, [r4, #38]
 1218 0072 013B     		subs	r3, r3, #1
 1219 0074 9BB2     		uxth	r3, r3
 1220 0076 E384     		strh	r3, [r4, #38]	@ movhi
 643:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 1221              		.loc 1 643 0
 1222 0078 A368     		ldr	r3, [r4, #8]
 1223 007a B3F5805F 		cmp	r3, #4096
 1224 007e E3D0     		beq	.L91
 662:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         {
 1225              		.loc 1 662 0
 1226 0080 0096     		str	r6, [sp]
 1227 0082 3B46     		mov	r3, r7
 1228 0084 0022     		movs	r2, #0
 1229 0086 8021     		movs	r1, #128
 1230 0088 2046     		mov	r0, r4
 1231 008a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1232              	.LVL96:
 1233 008e 18BB     		cbnz	r0, .L87
 1234              	.LVL97:
 666:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       } 
 1235              		.loc 1 666 0
 1236 0090 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1237 0092 2368     		ldr	r3, [r4]
 1238 0094 5A60     		str	r2, [r3, #4]
 1239 0096 0135     		adds	r5, r5, #1
 1240              	.LVL98:
 1241 0098 E7E7     		b	.L77
 1242              	.LVL99:
 1243              	.L79:
 657:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 1244              		.loc 1 657 0
 1245 009a 0135     		adds	r5, r5, #1
 1246              	.LVL100:
 1247 009c E5E7     		b	.L77
 1248              	.LVL101:
 1249              	.L90:
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     { 
 1250              		.loc 1 670 0
ARM GAS  /tmp/ccUha3Mw.s 			page 69


 1251 009e 0096     		str	r6, [sp]
 1252 00a0 3B46     		mov	r3, r7
 1253 00a2 0022     		movs	r2, #0
 1254 00a4 4021     		movs	r1, #64
 1255 00a6 2046     		mov	r0, r4
 1256 00a8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1257              	.LVL102:
 1258 00ac 0346     		mov	r3, r0
 1259 00ae A8B9     		cbnz	r0, .L88
 676:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1260              		.loc 1 676 0
 1261 00b0 2022     		movs	r2, #32
 1262 00b2 84F83920 		strb	r2, [r4, #57]
 679:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1263              		.loc 1 679 0
 1264 00b6 0022     		movs	r2, #0
 1265 00b8 84F83820 		strb	r2, [r4, #56]
 681:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1266              		.loc 1 681 0
 1267 00bc 00E0     		b	.L76
 1268              	.LVL103:
 1269              	.L82:
 685:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1270              		.loc 1 685 0
 1271 00be 0223     		movs	r3, #2
 1272              	.LVL104:
 1273              	.L76:
 687:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1274              		.loc 1 687 0
 1275 00c0 1846     		mov	r0, r3
 1276 00c2 02B0     		add	sp, sp, #8
 1277              	.LCFI14:
 1278              		.cfi_remember_state
 1279              		.cfi_def_cfa_offset 24
 1280              		@ sp needed
 1281 00c4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1282              	.LVL105:
 1283              	.L83:
 1284              	.LCFI15:
 1285              		.cfi_restore_state
 626:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 1286              		.loc 1 626 0
 1287 00c8 0123     		movs	r3, #1
 1288 00ca F9E7     		b	.L76
 1289              	.L84:
 1290 00cc 0123     		movs	r3, #1
 1291 00ce F7E7     		b	.L76
 1292              	.L85:
 630:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1293              		.loc 1 630 0
 1294 00d0 0223     		movs	r3, #2
 1295 00d2 F5E7     		b	.L76
 1296              	.LVL106:
 1297              	.L86:
 647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 1298              		.loc 1 647 0
 1299 00d4 0323     		movs	r3, #3
ARM GAS  /tmp/ccUha3Mw.s 			page 70


 1300 00d6 F3E7     		b	.L76
 1301              	.L87:
 664:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 1302              		.loc 1 664 0
 1303 00d8 0323     		movs	r3, #3
 1304 00da F1E7     		b	.L76
 1305              	.L88:
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 1306              		.loc 1 672 0
 1307 00dc 0323     		movs	r3, #3
 1308 00de EFE7     		b	.L76
 1309              		.cfi_endproc
 1310              	.LFE73:
 1312              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1313              		.align	1
 1314              		.global	HAL_UART_Receive
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1318              		.fpu softvfp
 1320              	HAL_UART_Receive:
 1321              	.LFB74:
 699:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint16_t* tmp;
 1322              		.loc 1 699 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 0
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326              	.LVL107:
 1327 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1328              	.LCFI16:
 1329              		.cfi_def_cfa_offset 24
 1330              		.cfi_offset 4, -24
 1331              		.cfi_offset 5, -20
 1332              		.cfi_offset 6, -16
 1333              		.cfi_offset 7, -12
 1334              		.cfi_offset 8, -8
 1335              		.cfi_offset 14, -4
 1336 0004 82B0     		sub	sp, sp, #8
 1337              	.LCFI17:
 1338              		.cfi_def_cfa_offset 32
 1339 0006 1E46     		mov	r6, r3
 1340              	.LVL108:
 704:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 1341              		.loc 1 704 0
 1342 0008 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1343              	.LVL109:
 1344 000c DBB2     		uxtb	r3, r3
 1345 000e 202B     		cmp	r3, #32
 1346 0010 5AD1     		bne	.L100
 1347 0012 0446     		mov	r4, r0
 1348 0014 0D46     		mov	r5, r1
 1349 0016 9046     		mov	r8, r2
 706:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1350              		.loc 1 706 0
 1351 0018 0029     		cmp	r1, #0
 1352 001a 59D0     		beq	.L101
 706:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
ARM GAS  /tmp/ccUha3Mw.s 			page 71


 1353              		.loc 1 706 0 is_stmt 0 discriminator 1
 1354 001c 002A     		cmp	r2, #0
 1355 001e 59D0     		beq	.L102
 712:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1356              		.loc 1 712 0 is_stmt 1
 1357 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1358 0024 012B     		cmp	r3, #1
 1359 0026 57D0     		beq	.L103
 712:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1360              		.loc 1 712 0 is_stmt 0 discriminator 2
 1361 0028 0123     		movs	r3, #1
 1362 002a 80F83830 		strb	r3, [r0, #56]
 714:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1363              		.loc 1 714 0 is_stmt 1 discriminator 2
 1364 002e 0023     		movs	r3, #0
 1365 0030 C363     		str	r3, [r0, #60]
 715:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1366              		.loc 1 715 0 discriminator 2
 1367 0032 2223     		movs	r3, #34
 1368 0034 80F83A30 		strb	r3, [r0, #58]
 718:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1369              		.loc 1 718 0 discriminator 2
 1370 0038 FFF7FEFF 		bl	HAL_GetTick
 1371              	.LVL110:
 1372 003c 0746     		mov	r7, r0
 1373              	.LVL111:
 720:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferCount = Size;
 1374              		.loc 1 720 0 discriminator 2
 1375 003e A4F82C80 		strh	r8, [r4, #44]	@ movhi
 721:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1376              		.loc 1 721 0 discriminator 2
 1377 0042 A4F82E80 		strh	r8, [r4, #46]	@ movhi
 724:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1378              		.loc 1 724 0 discriminator 2
 1379 0046 1DE0     		b	.L94
 1380              	.LVL112:
 1381              	.L108:
 729:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         { 
 1382              		.loc 1 729 0
 1383 0048 0096     		str	r6, [sp]
 1384 004a 3B46     		mov	r3, r7
 1385 004c 0022     		movs	r2, #0
 1386 004e 2021     		movs	r1, #32
 1387 0050 2046     		mov	r0, r4
 1388 0052 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1389              	.LVL113:
 1390 0056 0028     		cmp	r0, #0
 1391 0058 40D1     		bne	.L104
 1392              	.LVL114:
 734:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         {
 1393              		.loc 1 734 0
 1394 005a 2369     		ldr	r3, [r4, #16]
 1395 005c 33B9     		cbnz	r3, .L96
 736:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           pData +=2;
 1396              		.loc 1 736 0
 1397 005e 2368     		ldr	r3, [r4]
 1398 0060 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccUha3Mw.s 			page 72


 1399 0062 C3F30803 		ubfx	r3, r3, #0, #9
 1400 0066 25F8023B 		strh	r3, [r5], #2	@ movhi
 1401              	.LVL115:
 1402 006a 0BE0     		b	.L94
 1403              	.LVL116:
 1404              	.L96:
 741:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           pData +=1;
 1405              		.loc 1 741 0
 1406 006c 2368     		ldr	r3, [r4]
 1407 006e 5B68     		ldr	r3, [r3, #4]
 1408 0070 DBB2     		uxtb	r3, r3
 1409 0072 25F8013B 		strh	r3, [r5], #1	@ movhi
 1410              	.LVL117:
 1411 0076 05E0     		b	.L94
 1412              	.LVL118:
 1413              	.L98:
 758:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 1414              		.loc 1 758 0
 1415 0078 2368     		ldr	r3, [r4]
 1416 007a 5B68     		ldr	r3, [r3, #4]
 1417              	.LVL119:
 1418 007c 03F07F03 		and	r3, r3, #127
 1419 0080 2B70     		strb	r3, [r5]
 1420 0082 0135     		adds	r5, r5, #1
 1421              	.LVL120:
 1422              	.L94:
 724:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1423              		.loc 1 724 0
 1424 0084 E38D     		ldrh	r3, [r4, #46]
 1425 0086 9BB2     		uxth	r3, r3
 1426 0088 BBB1     		cbz	r3, .L107
 726:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1427              		.loc 1 726 0
 1428 008a E38D     		ldrh	r3, [r4, #46]
 1429 008c 013B     		subs	r3, r3, #1
 1430 008e 9BB2     		uxth	r3, r3
 1431 0090 E385     		strh	r3, [r4, #46]	@ movhi
 727:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 1432              		.loc 1 727 0
 1433 0092 A368     		ldr	r3, [r4, #8]
 1434 0094 B3F5805F 		cmp	r3, #4096
 1435 0098 D6D0     		beq	.L108
 748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         { 
 1436              		.loc 1 748 0
 1437 009a 0096     		str	r6, [sp]
 1438 009c 3B46     		mov	r3, r7
 1439 009e 0022     		movs	r2, #0
 1440 00a0 2021     		movs	r1, #32
 1441 00a2 2046     		mov	r0, r4
 1442 00a4 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1443              	.LVL121:
 1444 00a8 D0B9     		cbnz	r0, .L105
 752:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         {
 1445              		.loc 1 752 0
 1446 00aa 2369     		ldr	r3, [r4, #16]
 1447 00ac 002B     		cmp	r3, #0
 1448 00ae E3D1     		bne	.L98
ARM GAS  /tmp/ccUha3Mw.s 			page 73


 754:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 1449              		.loc 1 754 0
 1450 00b0 2368     		ldr	r3, [r4]
 1451 00b2 5B68     		ldr	r3, [r3, #4]
 1452              	.LVL122:
 1453 00b4 2B70     		strb	r3, [r5]
 1454 00b6 0135     		adds	r5, r5, #1
 1455              	.LVL123:
 1456 00b8 E4E7     		b	.L94
 1457              	.L107:
 765:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1458              		.loc 1 765 0
 1459 00ba 2023     		movs	r3, #32
 1460 00bc 84F83A30 		strb	r3, [r4, #58]
 768:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1461              		.loc 1 768 0
 1462 00c0 0020     		movs	r0, #0
 1463 00c2 84F83800 		strb	r0, [r4, #56]
 770:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1464              		.loc 1 770 0
 1465 00c6 00E0     		b	.L93
 1466              	.LVL124:
 1467              	.L100:
 774:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1468              		.loc 1 774 0
 1469 00c8 0220     		movs	r0, #2
 1470              	.LVL125:
 1471              	.L93:
 776:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1472              		.loc 1 776 0
 1473 00ca 02B0     		add	sp, sp, #8
 1474              	.LCFI18:
 1475              		.cfi_remember_state
 1476              		.cfi_def_cfa_offset 24
 1477              		@ sp needed
 1478 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1479              	.LVL126:
 1480              	.L101:
 1481              	.LCFI19:
 1482              		.cfi_restore_state
 708:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 1483              		.loc 1 708 0
 1484 00d0 0120     		movs	r0, #1
 1485              	.LVL127:
 1486 00d2 FAE7     		b	.L93
 1487              	.LVL128:
 1488              	.L102:
 1489 00d4 0120     		movs	r0, #1
 1490              	.LVL129:
 1491 00d6 F8E7     		b	.L93
 1492              	.LVL130:
 1493              	.L103:
 712:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1494              		.loc 1 712 0
 1495 00d8 0220     		movs	r0, #2
 1496              	.LVL131:
 1497 00da F6E7     		b	.L93
ARM GAS  /tmp/ccUha3Mw.s 			page 74


 1498              	.LVL132:
 1499              	.L104:
 731:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 1500              		.loc 1 731 0
 1501 00dc 0320     		movs	r0, #3
 1502 00de F4E7     		b	.L93
 1503              	.L105:
 750:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 1504              		.loc 1 750 0
 1505 00e0 0320     		movs	r0, #3
 1506 00e2 F2E7     		b	.L93
 1507              		.cfi_endproc
 1508              	.LFE74:
 1510              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1511              		.align	1
 1512              		.global	HAL_UART_Transmit_IT
 1513              		.syntax unified
 1514              		.thumb
 1515              		.thumb_func
 1516              		.fpu softvfp
 1518              	HAL_UART_Transmit_IT:
 1519              	.LFB75:
 787:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1520              		.loc 1 787 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              		@ link register save eliminated.
 1525              	.LVL133:
 789:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 1526              		.loc 1 789 0
 1527 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1528 0004 DBB2     		uxtb	r3, r3
 1529 0006 202B     		cmp	r3, #32
 1530 0008 16D1     		bne	.L111
 791:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1531              		.loc 1 791 0
 1532 000a B9B1     		cbz	r1, .L112
 791:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1533              		.loc 1 791 0 is_stmt 0 discriminator 1
 1534 000c C2B1     		cbz	r2, .L113
 797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1535              		.loc 1 797 0 is_stmt 1
 1536 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1537 0012 012B     		cmp	r3, #1
 1538 0014 16D0     		beq	.L114
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferSize = Size;
 1539              		.loc 1 799 0 discriminator 2
 1540 0016 0162     		str	r1, [r0, #32]
 800:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferCount = Size;
 1541              		.loc 1 800 0 discriminator 2
 1542 0018 8284     		strh	r2, [r0, #36]	@ movhi
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1543              		.loc 1 801 0 discriminator 2
 1544 001a C284     		strh	r2, [r0, #38]	@ movhi
 803:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1545              		.loc 1 803 0 discriminator 2
ARM GAS  /tmp/ccUha3Mw.s 			page 75


 1546 001c 0023     		movs	r3, #0
 1547 001e C363     		str	r3, [r0, #60]
 804:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1548              		.loc 1 804 0 discriminator 2
 1549 0020 2122     		movs	r2, #33
 1550              	.LVL134:
 1551 0022 80F83920 		strb	r2, [r0, #57]
 807:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1552              		.loc 1 807 0 discriminator 2
 1553 0026 80F83830 		strb	r3, [r0, #56]
 810:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1554              		.loc 1 810 0 discriminator 2
 1555 002a 0168     		ldr	r1, [r0]
 1556              	.LVL135:
 1557 002c CA68     		ldr	r2, [r1, #12]
 1558 002e 42F08002 		orr	r2, r2, #128
 1559 0032 CA60     		str	r2, [r1, #12]
 1560              	.LVL136:
 812:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1561              		.loc 1 812 0 discriminator 2
 1562 0034 1846     		mov	r0, r3
 1563              	.LVL137:
 1564 0036 7047     		bx	lr
 1565              	.LVL138:
 1566              	.L111:
 816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1567              		.loc 1 816 0
 1568 0038 0220     		movs	r0, #2
 1569              	.LVL139:
 1570 003a 7047     		bx	lr
 1571              	.LVL140:
 1572              	.L112:
 793:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 1573              		.loc 1 793 0
 1574 003c 0120     		movs	r0, #1
 1575              	.LVL141:
 1576 003e 7047     		bx	lr
 1577              	.LVL142:
 1578              	.L113:
 1579 0040 0120     		movs	r0, #1
 1580              	.LVL143:
 1581 0042 7047     		bx	lr
 1582              	.LVL144:
 1583              	.L114:
 797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1584              		.loc 1 797 0
 1585 0044 0220     		movs	r0, #2
 1586              	.LVL145:
 818:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1587              		.loc 1 818 0
 1588 0046 7047     		bx	lr
 1589              		.cfi_endproc
 1590              	.LFE75:
 1592              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1593              		.align	1
 1594              		.global	HAL_UART_Receive_IT
 1595              		.syntax unified
ARM GAS  /tmp/ccUha3Mw.s 			page 76


 1596              		.thumb
 1597              		.thumb_func
 1598              		.fpu softvfp
 1600              	HAL_UART_Receive_IT:
 1601              	.LFB76:
 829:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 1602              		.loc 1 829 0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 0
 1605              		@ frame_needed = 0, uses_anonymous_args = 0
 1606              		@ link register save eliminated.
 1607              	.LVL146:
 831:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 1608              		.loc 1 831 0
 1609 0000 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1610 0004 DBB2     		uxtb	r3, r3
 1611 0006 202B     		cmp	r3, #32
 1612 0008 1BD1     		bne	.L117
 833:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1613              		.loc 1 833 0
 1614 000a E1B1     		cbz	r1, .L118
 833:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1615              		.loc 1 833 0 is_stmt 0 discriminator 1
 1616 000c EAB1     		cbz	r2, .L119
 839:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1617              		.loc 1 839 0 is_stmt 1
 1618 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1619 0012 012B     		cmp	r3, #1
 1620 0014 1BD0     		beq	.L120
 841:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferSize = Size;
 1621              		.loc 1 841 0 discriminator 2
 1622 0016 8162     		str	r1, [r0, #40]
 842:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferCount = Size;
 1623              		.loc 1 842 0 discriminator 2
 1624 0018 8285     		strh	r2, [r0, #44]	@ movhi
 843:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1625              		.loc 1 843 0 discriminator 2
 1626 001a C285     		strh	r2, [r0, #46]	@ movhi
 845:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1627              		.loc 1 845 0 discriminator 2
 1628 001c 0023     		movs	r3, #0
 1629 001e C363     		str	r3, [r0, #60]
 846:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1630              		.loc 1 846 0 discriminator 2
 1631 0020 2222     		movs	r2, #34
 1632              	.LVL147:
 1633 0022 80F83A20 		strb	r2, [r0, #58]
 849:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1634              		.loc 1 849 0 discriminator 2
 1635 0026 80F83830 		strb	r3, [r0, #56]
 852:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1636              		.loc 1 852 0 discriminator 2
 1637 002a 0168     		ldr	r1, [r0]
 1638              	.LVL148:
 1639 002c 4A69     		ldr	r2, [r1, #20]
 1640 002e 42F00102 		orr	r2, r2, #1
 1641 0032 4A61     		str	r2, [r1, #20]
ARM GAS  /tmp/ccUha3Mw.s 			page 77


 1642              	.LVL149:
 855:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1643              		.loc 1 855 0 discriminator 2
 1644 0034 0168     		ldr	r1, [r0]
 1645 0036 CA68     		ldr	r2, [r1, #12]
 1646 0038 42F49072 		orr	r2, r2, #288
 1647 003c CA60     		str	r2, [r1, #12]
 857:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1648              		.loc 1 857 0 discriminator 2
 1649 003e 1846     		mov	r0, r3
 1650              	.LVL150:
 1651 0040 7047     		bx	lr
 1652              	.LVL151:
 1653              	.L117:
 861:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1654              		.loc 1 861 0
 1655 0042 0220     		movs	r0, #2
 1656              	.LVL152:
 1657 0044 7047     		bx	lr
 1658              	.LVL153:
 1659              	.L118:
 835:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 1660              		.loc 1 835 0
 1661 0046 0120     		movs	r0, #1
 1662              	.LVL154:
 1663 0048 7047     		bx	lr
 1664              	.LVL155:
 1665              	.L119:
 1666 004a 0120     		movs	r0, #1
 1667              	.LVL156:
 1668 004c 7047     		bx	lr
 1669              	.LVL157:
 1670              	.L120:
 839:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1671              		.loc 1 839 0
 1672 004e 0220     		movs	r0, #2
 1673              	.LVL158:
 863:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1674              		.loc 1 863 0
 1675 0050 7047     		bx	lr
 1676              		.cfi_endproc
 1677              	.LFE76:
 1679              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1680              		.align	1
 1681              		.global	HAL_UART_Transmit_DMA
 1682              		.syntax unified
 1683              		.thumb
 1684              		.thumb_func
 1685              		.fpu softvfp
 1687              	HAL_UART_Transmit_DMA:
 1688              	.LFB77:
 874:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t *tmp;
 1689              		.loc 1 874 0
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 0
 1692              		@ frame_needed = 0, uses_anonymous_args = 0
 1693              	.LVL159:
ARM GAS  /tmp/ccUha3Mw.s 			page 78


 1694 0000 38B5     		push	{r3, r4, r5, lr}
 1695              	.LCFI20:
 1696              		.cfi_def_cfa_offset 16
 1697              		.cfi_offset 3, -16
 1698              		.cfi_offset 4, -12
 1699              		.cfi_offset 5, -8
 1700              		.cfi_offset 14, -4
 878:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 1701              		.loc 1 878 0
 1702 0002 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
 1703 0006 E4B2     		uxtb	r4, r4
 1704 0008 202C     		cmp	r4, #32
 1705 000a 31D1     		bne	.L123
 880:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1706              		.loc 1 880 0
 1707 000c 0029     		cmp	r1, #0
 1708 000e 31D0     		beq	.L124
 880:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1709              		.loc 1 880 0 is_stmt 0 discriminator 1
 1710 0010 002A     		cmp	r2, #0
 1711 0012 31D0     		beq	.L125
 886:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1712              		.loc 1 886 0 is_stmt 1
 1713 0014 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1714 0018 012B     		cmp	r3, #1
 1715 001a 2FD0     		beq	.L126
 1716 001c 1346     		mov	r3, r2
 1717 001e 0446     		mov	r4, r0
 886:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1718              		.loc 1 886 0 is_stmt 0 discriminator 2
 1719 0020 0122     		movs	r2, #1
 1720              	.LVL160:
 1721 0022 80F83820 		strb	r2, [r0, #56]
 888:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferSize = Size;
 1722              		.loc 1 888 0 is_stmt 1 discriminator 2
 1723 0026 0162     		str	r1, [r0, #32]
 889:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->TxXferCount = Size;
 1724              		.loc 1 889 0 discriminator 2
 1725 0028 8384     		strh	r3, [r0, #36]	@ movhi
 890:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1726              		.loc 1 890 0 discriminator 2
 1727 002a C384     		strh	r3, [r0, #38]	@ movhi
 892:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1728              		.loc 1 892 0 discriminator 2
 1729 002c 0025     		movs	r5, #0
 1730 002e C563     		str	r5, [r0, #60]
 893:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1731              		.loc 1 893 0 discriminator 2
 1732 0030 2122     		movs	r2, #33
 1733 0032 80F83920 		strb	r2, [r0, #57]
 896:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1734              		.loc 1 896 0 discriminator 2
 1735 0036 026B     		ldr	r2, [r0, #48]
 1736 0038 1148     		ldr	r0, .L128
 1737              	.LVL161:
 1738 003a D063     		str	r0, [r2, #60]
 899:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
ARM GAS  /tmp/ccUha3Mw.s 			page 79


 1739              		.loc 1 899 0 discriminator 2
 1740 003c 226B     		ldr	r2, [r4, #48]
 1741 003e 1148     		ldr	r0, .L128+4
 1742 0040 1064     		str	r0, [r2, #64]
 902:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1743              		.loc 1 902 0 discriminator 2
 1744 0042 226B     		ldr	r2, [r4, #48]
 1745 0044 1048     		ldr	r0, .L128+8
 1746 0046 D064     		str	r0, [r2, #76]
 905:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1747              		.loc 1 905 0 discriminator 2
 1748 0048 226B     		ldr	r2, [r4, #48]
 1749 004a 1565     		str	r5, [r2, #80]
 1750              	.LVL162:
 909:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1751              		.loc 1 909 0 discriminator 2
 1752 004c 2268     		ldr	r2, [r4]
 1753 004e 0432     		adds	r2, r2, #4
 1754 0050 206B     		ldr	r0, [r4, #48]
 1755 0052 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1756              	.LVL163:
 912:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1757              		.loc 1 912 0 discriminator 2
 1758 0056 2368     		ldr	r3, [r4]
 1759 0058 6FF04002 		mvn	r2, #64
 1760 005c 1A60     		str	r2, [r3]
 915:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1761              		.loc 1 915 0 discriminator 2
 1762 005e 84F83850 		strb	r5, [r4, #56]
 919:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1763              		.loc 1 919 0 discriminator 2
 1764 0062 2268     		ldr	r2, [r4]
 1765 0064 5369     		ldr	r3, [r2, #20]
 1766 0066 43F08003 		orr	r3, r3, #128
 1767 006a 5361     		str	r3, [r2, #20]
 921:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1768              		.loc 1 921 0 discriminator 2
 1769 006c 2846     		mov	r0, r5
 1770 006e 00E0     		b	.L122
 1771              	.LVL164:
 1772              	.L123:
 925:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1773              		.loc 1 925 0
 1774 0070 0220     		movs	r0, #2
 1775              	.LVL165:
 1776              	.L122:
 927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1777              		.loc 1 927 0
 1778 0072 38BD     		pop	{r3, r4, r5, pc}
 1779              	.LVL166:
 1780              	.L124:
 882:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 1781              		.loc 1 882 0
 1782 0074 0120     		movs	r0, #1
 1783              	.LVL167:
 1784 0076 FCE7     		b	.L122
 1785              	.LVL168:
ARM GAS  /tmp/ccUha3Mw.s 			page 80


 1786              	.L125:
 1787 0078 0120     		movs	r0, #1
 1788              	.LVL169:
 1789 007a FAE7     		b	.L122
 1790              	.LVL170:
 1791              	.L126:
 886:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1792              		.loc 1 886 0
 1793 007c 0220     		movs	r0, #2
 1794              	.LVL171:
 1795 007e F8E7     		b	.L122
 1796              	.L129:
 1797              		.align	2
 1798              	.L128:
 1799 0080 00000000 		.word	UART_DMATransmitCplt
 1800 0084 00000000 		.word	UART_DMATxHalfCplt
 1801 0088 00000000 		.word	UART_DMAError
 1802              		.cfi_endproc
 1803              	.LFE77:
 1805              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1806              		.align	1
 1807              		.global	HAL_UART_Receive_DMA
 1808              		.syntax unified
 1809              		.thumb
 1810              		.thumb_func
 1811              		.fpu softvfp
 1813              	HAL_UART_Receive_DMA:
 1814              	.LFB78:
 939:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t *tmp;
 1815              		.loc 1 939 0
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 8
 1818              		@ frame_needed = 0, uses_anonymous_args = 0
 1819              	.LVL172:
 1820 0000 30B5     		push	{r4, r5, lr}
 1821              	.LCFI21:
 1822              		.cfi_def_cfa_offset 12
 1823              		.cfi_offset 4, -12
 1824              		.cfi_offset 5, -8
 1825              		.cfi_offset 14, -4
 1826 0002 83B0     		sub	sp, sp, #12
 1827              	.LCFI22:
 1828              		.cfi_def_cfa_offset 24
 943:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 1829              		.loc 1 943 0
 1830 0004 90F83A40 		ldrb	r4, [r0, #58]	@ zero_extendqisi2
 1831 0008 E4B2     		uxtb	r4, r4
 1832 000a 202C     		cmp	r4, #32
 1833 000c 3DD1     		bne	.L132
 945:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1834              		.loc 1 945 0
 1835 000e 0029     		cmp	r1, #0
 1836 0010 3ED0     		beq	.L133
 945:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 1837              		.loc 1 945 0 is_stmt 0 discriminator 1
 1838 0012 002A     		cmp	r2, #0
 1839 0014 3ED0     		beq	.L134
ARM GAS  /tmp/ccUha3Mw.s 			page 81


 951:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1840              		.loc 1 951 0 is_stmt 1
 1841 0016 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1842 001a 012B     		cmp	r3, #1
 1843 001c 3CD0     		beq	.L135
 1844 001e 1346     		mov	r3, r2
 1845 0020 0A46     		mov	r2, r1
 1846              	.LVL173:
 1847 0022 0446     		mov	r4, r0
 951:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1848              		.loc 1 951 0 is_stmt 0 discriminator 2
 1849 0024 0121     		movs	r1, #1
 1850              	.LVL174:
 1851 0026 80F83810 		strb	r1, [r0, #56]
 953:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferSize = Size;
 1852              		.loc 1 953 0 is_stmt 1 discriminator 2
 1853 002a 8262     		str	r2, [r0, #40]
 954:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1854              		.loc 1 954 0 discriminator 2
 1855 002c 8385     		strh	r3, [r0, #44]	@ movhi
 956:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1856              		.loc 1 956 0 discriminator 2
 1857 002e 0025     		movs	r5, #0
 1858 0030 C563     		str	r5, [r0, #60]
 957:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1859              		.loc 1 957 0 discriminator 2
 1860 0032 2221     		movs	r1, #34
 1861 0034 80F83A10 		strb	r1, [r0, #58]
 960:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1862              		.loc 1 960 0 discriminator 2
 1863 0038 416B     		ldr	r1, [r0, #52]
 1864 003a 1848     		ldr	r0, .L137
 1865              	.LVL175:
 1866 003c C863     		str	r0, [r1, #60]
 963:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1867              		.loc 1 963 0 discriminator 2
 1868 003e 616B     		ldr	r1, [r4, #52]
 1869 0040 1748     		ldr	r0, .L137+4
 1870 0042 0864     		str	r0, [r1, #64]
 966:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1871              		.loc 1 966 0 discriminator 2
 1872 0044 616B     		ldr	r1, [r4, #52]
 1873 0046 1748     		ldr	r0, .L137+8
 1874 0048 C864     		str	r0, [r1, #76]
 969:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1875              		.loc 1 969 0 discriminator 2
 1876 004a 616B     		ldr	r1, [r4, #52]
 1877 004c 0D65     		str	r5, [r1, #80]
 1878              	.LVL176:
 973:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1879              		.loc 1 973 0 discriminator 2
 1880 004e 2168     		ldr	r1, [r4]
 1881 0050 0431     		adds	r1, r1, #4
 1882 0052 606B     		ldr	r0, [r4, #52]
 1883 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1884              	.LVL177:
 1885              	.LBB2:
ARM GAS  /tmp/ccUha3Mw.s 			page 82


 976:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1886              		.loc 1 976 0 discriminator 2
 1887 0058 0195     		str	r5, [sp, #4]
 1888 005a 2368     		ldr	r3, [r4]
 1889 005c 1A68     		ldr	r2, [r3]
 1890 005e 0192     		str	r2, [sp, #4]
 1891 0060 5A68     		ldr	r2, [r3, #4]
 1892 0062 0192     		str	r2, [sp, #4]
 1893 0064 019A     		ldr	r2, [sp, #4]
 1894              	.LBE2:
 979:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1895              		.loc 1 979 0 discriminator 2
 1896 0066 84F83850 		strb	r5, [r4, #56]
 982:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1897              		.loc 1 982 0 discriminator 2
 1898 006a DA68     		ldr	r2, [r3, #12]
 1899 006c 42F48072 		orr	r2, r2, #256
 1900 0070 DA60     		str	r2, [r3, #12]
 985:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1901              		.loc 1 985 0 discriminator 2
 1902 0072 2268     		ldr	r2, [r4]
 1903 0074 5369     		ldr	r3, [r2, #20]
 1904 0076 43F00103 		orr	r3, r3, #1
 1905 007a 5361     		str	r3, [r2, #20]
 989:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 1906              		.loc 1 989 0 discriminator 2
 1907 007c 2268     		ldr	r2, [r4]
 1908 007e 5369     		ldr	r3, [r2, #20]
 1909 0080 43F04003 		orr	r3, r3, #64
 1910 0084 5361     		str	r3, [r2, #20]
 991:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1911              		.loc 1 991 0 discriminator 2
 1912 0086 2846     		mov	r0, r5
 1913 0088 00E0     		b	.L131
 1914              	.LVL178:
 1915              	.L132:
 995:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 1916              		.loc 1 995 0
 1917 008a 0220     		movs	r0, #2
 1918              	.LVL179:
 1919              	.L131:
 997:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1920              		.loc 1 997 0
 1921 008c 03B0     		add	sp, sp, #12
 1922              	.LCFI23:
 1923              		.cfi_remember_state
 1924              		.cfi_def_cfa_offset 12
 1925              		@ sp needed
 1926 008e 30BD     		pop	{r4, r5, pc}
 1927              	.LVL180:
 1928              	.L133:
 1929              	.LCFI24:
 1930              		.cfi_restore_state
 947:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 1931              		.loc 1 947 0
 1932 0090 0120     		movs	r0, #1
 1933              	.LVL181:
ARM GAS  /tmp/ccUha3Mw.s 			page 83


 1934 0092 FBE7     		b	.L131
 1935              	.LVL182:
 1936              	.L134:
 1937 0094 0120     		movs	r0, #1
 1938              	.LVL183:
 1939 0096 F9E7     		b	.L131
 1940              	.LVL184:
 1941              	.L135:
 951:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 1942              		.loc 1 951 0
 1943 0098 0220     		movs	r0, #2
 1944              	.LVL185:
 1945 009a F7E7     		b	.L131
 1946              	.L138:
 1947              		.align	2
 1948              	.L137:
 1949 009c 00000000 		.word	UART_DMAReceiveCplt
 1950 00a0 00000000 		.word	UART_DMARxHalfCplt
 1951 00a4 00000000 		.word	UART_DMAError
 1952              		.cfi_endproc
 1953              	.LFE78:
 1955              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1956              		.align	1
 1957              		.global	HAL_UART_DMAPause
 1958              		.syntax unified
 1959              		.thumb
 1960              		.thumb_func
 1961              		.fpu softvfp
 1963              	HAL_UART_DMAPause:
 1964              	.LFB79:
1006:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
 1965              		.loc 1 1006 0
 1966              		.cfi_startproc
 1967              		@ args = 0, pretend = 0, frame = 0
 1968              		@ frame_needed = 0, uses_anonymous_args = 0
 1969              		@ link register save eliminated.
 1970              	.LVL186:
1010:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1971              		.loc 1 1010 0
 1972 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1973 0004 012B     		cmp	r3, #1
 1974 0006 31D0     		beq	.L143
1010:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1975              		.loc 1 1010 0 is_stmt 0 discriminator 2
 1976 0008 0123     		movs	r3, #1
 1977 000a 80F83830 		strb	r3, [r0, #56]
1011:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1978              		.loc 1 1011 0 is_stmt 1 discriminator 2
 1979 000e 0168     		ldr	r1, [r0]
 1980 0010 4A69     		ldr	r2, [r1, #20]
 1981 0012 02F08002 		and	r2, r2, #128
 1982              	.LVL187:
1012:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 1983              		.loc 1 1012 0 discriminator 2
 1984 0016 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1985 001a DBB2     		uxtb	r3, r3
 1986 001c 212B     		cmp	r3, #33
ARM GAS  /tmp/ccUha3Mw.s 			page 84


 1987 001e 0DD0     		beq	.L144
 1988              	.L141:
1017:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1989              		.loc 1 1017 0
 1990 0020 0168     		ldr	r1, [r0]
 1991 0022 4A69     		ldr	r2, [r1, #20]
 1992              	.LVL188:
 1993 0024 02F04002 		and	r2, r2, #64
 1994              	.LVL189:
1018:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 1995              		.loc 1 1018 0
 1996 0028 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1997 002c DBB2     		uxtb	r3, r3
 1998 002e 222B     		cmp	r3, #34
 1999 0030 0BD0     		beq	.L145
 2000              	.LVL190:
 2001              	.L142:
1029:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2002              		.loc 1 1029 0
 2003 0032 0023     		movs	r3, #0
 2004 0034 80F83830 		strb	r3, [r0, #56]
1031:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 2005              		.loc 1 1031 0
 2006 0038 1846     		mov	r0, r3
 2007              	.LVL191:
 2008 003a 7047     		bx	lr
 2009              	.LVL192:
 2010              	.L144:
1012:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2011              		.loc 1 1012 0 discriminator 1
 2012 003c 002A     		cmp	r2, #0
 2013 003e EFD0     		beq	.L141
1015:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 2014              		.loc 1 1015 0
 2015 0040 4B69     		ldr	r3, [r1, #20]
 2016 0042 23F08003 		bic	r3, r3, #128
 2017 0046 4B61     		str	r3, [r1, #20]
 2018 0048 EAE7     		b	.L141
 2019              	.L145:
1018:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2020              		.loc 1 1018 0 discriminator 1
 2021 004a 002A     		cmp	r2, #0
 2022 004c F1D0     		beq	.L142
1021:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2023              		.loc 1 1021 0
 2024 004e CB68     		ldr	r3, [r1, #12]
 2025 0050 23F48073 		bic	r3, r3, #256
 2026 0054 CB60     		str	r3, [r1, #12]
1022:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 2027              		.loc 1 1022 0
 2028 0056 0268     		ldr	r2, [r0]
 2029              	.LVL193:
 2030 0058 5369     		ldr	r3, [r2, #20]
 2031 005a 23F00103 		bic	r3, r3, #1
 2032 005e 5361     		str	r3, [r2, #20]
1025:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 2033              		.loc 1 1025 0
ARM GAS  /tmp/ccUha3Mw.s 			page 85


 2034 0060 0268     		ldr	r2, [r0]
 2035 0062 5369     		ldr	r3, [r2, #20]
 2036 0064 23F04003 		bic	r3, r3, #64
 2037 0068 5361     		str	r3, [r2, #20]
 2038 006a E2E7     		b	.L142
 2039              	.LVL194:
 2040              	.L143:
1010:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2041              		.loc 1 1010 0
 2042 006c 0220     		movs	r0, #2
 2043              	.LVL195:
1032:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2044              		.loc 1 1032 0
 2045 006e 7047     		bx	lr
 2046              		.cfi_endproc
 2047              	.LFE79:
 2049              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2050              		.align	1
 2051              		.global	HAL_UART_DMAResume
 2052              		.syntax unified
 2053              		.thumb
 2054              		.thumb_func
 2055              		.fpu softvfp
 2057              	HAL_UART_DMAResume:
 2058              	.LFB80:
1041:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Locked */
 2059              		.loc 1 1041 0
 2060              		.cfi_startproc
 2061              		@ args = 0, pretend = 0, frame = 8
 2062              		@ frame_needed = 0, uses_anonymous_args = 0
 2063              		@ link register save eliminated.
 2064              	.LVL196:
1043:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2065              		.loc 1 1043 0
 2066 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2067 0004 012B     		cmp	r3, #1
 2068 0006 34D0     		beq	.L150
1043:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2069              		.loc 1 1043 0 is_stmt 0 discriminator 2
 2070 0008 0123     		movs	r3, #1
 2071 000a 80F83830 		strb	r3, [r0, #56]
1045:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2072              		.loc 1 1045 0 is_stmt 1 discriminator 2
 2073 000e 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2074 0012 DBB2     		uxtb	r3, r3
 2075 0014 212B     		cmp	r3, #33
 2076 0016 09D0     		beq	.L156
 2077              	.L148:
1050:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2078              		.loc 1 1050 0
 2079 0018 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2080 001c DBB2     		uxtb	r3, r3
 2081 001e 222B     		cmp	r3, #34
 2082 0020 0AD0     		beq	.L157
1064:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 2083              		.loc 1 1064 0
 2084 0022 0023     		movs	r3, #0
ARM GAS  /tmp/ccUha3Mw.s 			page 86


 2085 0024 80F83830 		strb	r3, [r0, #56]
1066:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 2086              		.loc 1 1066 0
 2087 0028 1846     		mov	r0, r3
 2088              	.LVL197:
1067:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2089              		.loc 1 1067 0
 2090 002a 7047     		bx	lr
 2091              	.LVL198:
 2092              	.L156:
1048:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 2093              		.loc 1 1048 0
 2094 002c 0268     		ldr	r2, [r0]
 2095 002e 5369     		ldr	r3, [r2, #20]
 2096 0030 43F08003 		orr	r3, r3, #128
 2097 0034 5361     		str	r3, [r2, #20]
 2098 0036 EFE7     		b	.L148
 2099              	.L157:
1041:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Process Locked */
 2100              		.loc 1 1041 0
 2101 0038 82B0     		sub	sp, sp, #8
 2102              	.LCFI25:
 2103              		.cfi_def_cfa_offset 8
 2104              	.LBB3:
1053:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 2105              		.loc 1 1053 0
 2106 003a 0023     		movs	r3, #0
 2107 003c 0193     		str	r3, [sp, #4]
 2108 003e 0368     		ldr	r3, [r0]
 2109 0040 1A68     		ldr	r2, [r3]
 2110 0042 0192     		str	r2, [sp, #4]
 2111 0044 5A68     		ldr	r2, [r3, #4]
 2112 0046 0192     		str	r2, [sp, #4]
 2113 0048 019A     		ldr	r2, [sp, #4]
 2114              	.LBE3:
1056:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2115              		.loc 1 1056 0
 2116 004a DA68     		ldr	r2, [r3, #12]
 2117 004c 42F48072 		orr	r2, r2, #256
 2118 0050 DA60     		str	r2, [r3, #12]
1057:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     
 2119              		.loc 1 1057 0
 2120 0052 0268     		ldr	r2, [r0]
 2121 0054 5369     		ldr	r3, [r2, #20]
 2122 0056 43F00103 		orr	r3, r3, #1
 2123 005a 5361     		str	r3, [r2, #20]
1060:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 2124              		.loc 1 1060 0
 2125 005c 0268     		ldr	r2, [r0]
 2126 005e 5369     		ldr	r3, [r2, #20]
 2127 0060 43F04003 		orr	r3, r3, #64
 2128 0064 5361     		str	r3, [r2, #20]
1064:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 2129              		.loc 1 1064 0
 2130 0066 0023     		movs	r3, #0
 2131 0068 80F83830 		strb	r3, [r0, #56]
1066:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
ARM GAS  /tmp/ccUha3Mw.s 			page 87


 2132              		.loc 1 1066 0
 2133 006c 1846     		mov	r0, r3
 2134              	.LVL199:
1067:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2135              		.loc 1 1067 0
 2136 006e 02B0     		add	sp, sp, #8
 2137              	.LCFI26:
 2138              		.cfi_def_cfa_offset 0
 2139              		@ sp needed
 2140 0070 7047     		bx	lr
 2141              	.LVL200:
 2142              	.L150:
1043:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2143              		.loc 1 1043 0
 2144 0072 0220     		movs	r0, #2
 2145              	.LVL201:
 2146 0074 7047     		bx	lr
 2147              		.cfi_endproc
 2148              	.LFE80:
 2150              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2151              		.align	1
 2152              		.global	HAL_UART_DMAStop
 2153              		.syntax unified
 2154              		.thumb
 2155              		.thumb_func
 2156              		.fpu softvfp
 2158              	HAL_UART_DMAStop:
 2159              	.LFB81:
1076:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2160              		.loc 1 1076 0
 2161              		.cfi_startproc
 2162              		@ args = 0, pretend = 0, frame = 0
 2163              		@ frame_needed = 0, uses_anonymous_args = 0
 2164              	.LVL202:
 2165 0000 10B5     		push	{r4, lr}
 2166              	.LCFI27:
 2167              		.cfi_def_cfa_offset 8
 2168              		.cfi_offset 4, -8
 2169              		.cfi_offset 14, -4
 2170 0002 0446     		mov	r4, r0
 2171              	.LVL203:
1085:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2172              		.loc 1 1085 0
 2173 0004 0168     		ldr	r1, [r0]
 2174 0006 4A69     		ldr	r2, [r1, #20]
 2175              	.LVL204:
1086:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2176              		.loc 1 1086 0
 2177 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2178 000c DBB2     		uxtb	r3, r3
 2179 000e 212B     		cmp	r3, #33
 2180 0010 0AD0     		beq	.L164
 2181              	.LVL205:
 2182              	.L159:
1099:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2183              		.loc 1 1099 0
 2184 0012 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccUha3Mw.s 			page 88


 2185 0014 4A69     		ldr	r2, [r1, #20]
 2186 0016 02F04002 		and	r2, r2, #64
 2187              	.LVL206:
1100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2188              		.loc 1 1100 0
 2189 001a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2190 001e DBB2     		uxtb	r3, r3
 2191 0020 222B     		cmp	r3, #34
 2192 0022 11D0     		beq	.L165
 2193              	.LVL207:
 2194              	.L161:
1113:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2195              		.loc 1 1113 0
 2196 0024 0020     		movs	r0, #0
 2197 0026 10BD     		pop	{r4, pc}
 2198              	.LVL208:
 2199              	.L164:
 2200 0028 02F08002 		and	r2, r2, #128
 2201              	.LVL209:
1086:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2202              		.loc 1 1086 0 discriminator 1
 2203 002c 002A     		cmp	r2, #0
 2204 002e F0D0     		beq	.L159
1088:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2205              		.loc 1 1088 0
 2206 0030 4B69     		ldr	r3, [r1, #20]
 2207 0032 23F08003 		bic	r3, r3, #128
 2208 0036 4B61     		str	r3, [r1, #20]
1091:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 2209              		.loc 1 1091 0
 2210 0038 006B     		ldr	r0, [r0, #48]
 2211              	.LVL210:
 2212 003a 08B1     		cbz	r0, .L160
1093:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 2213              		.loc 1 1093 0
 2214 003c FFF7FEFF 		bl	HAL_DMA_Abort
 2215              	.LVL211:
 2216              	.L160:
1095:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 2217              		.loc 1 1095 0
 2218 0040 2046     		mov	r0, r4
 2219 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 2220              	.LVL212:
 2221 0046 E4E7     		b	.L159
 2222              	.LVL213:
 2223              	.L165:
1100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2224              		.loc 1 1100 0 discriminator 1
 2225 0048 002A     		cmp	r2, #0
 2226 004a EBD0     		beq	.L161
1102:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2227              		.loc 1 1102 0
 2228 004c 4B69     		ldr	r3, [r1, #20]
 2229 004e 23F04003 		bic	r3, r3, #64
 2230 0052 4B61     		str	r3, [r1, #20]
1105:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 2231              		.loc 1 1105 0
ARM GAS  /tmp/ccUha3Mw.s 			page 89


 2232 0054 606B     		ldr	r0, [r4, #52]
 2233 0056 08B1     		cbz	r0, .L162
1107:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 2234              		.loc 1 1107 0
 2235 0058 FFF7FEFF 		bl	HAL_DMA_Abort
 2236              	.LVL214:
 2237              	.L162:
1109:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 2238              		.loc 1 1109 0
 2239 005c 2046     		mov	r0, r4
 2240 005e FFF7FEFF 		bl	UART_EndRxTransfer
 2241              	.LVL215:
 2242 0062 DFE7     		b	.L161
 2243              		.cfi_endproc
 2244              	.LFE81:
 2246              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2247              		.align	1
 2248              		.global	HAL_UART_Abort
 2249              		.syntax unified
 2250              		.thumb
 2251              		.thumb_func
 2252              		.fpu softvfp
 2254              	HAL_UART_Abort:
 2255              	.LFB82:
1128:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2256              		.loc 1 1128 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 0
 2259              		@ frame_needed = 0, uses_anonymous_args = 0
 2260              	.LVL216:
 2261 0000 10B5     		push	{r4, lr}
 2262              	.LCFI28:
 2263              		.cfi_def_cfa_offset 8
 2264              		.cfi_offset 4, -8
 2265              		.cfi_offset 14, -4
 2266 0002 0446     		mov	r4, r0
1130:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2267              		.loc 1 1130 0
 2268 0004 0268     		ldr	r2, [r0]
 2269 0006 D368     		ldr	r3, [r2, #12]
 2270 0008 23F4F073 		bic	r3, r3, #480
 2271 000c D360     		str	r3, [r2, #12]
1131:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 2272              		.loc 1 1131 0
 2273 000e 0268     		ldr	r2, [r0]
 2274 0010 5369     		ldr	r3, [r2, #20]
 2275 0012 23F00103 		bic	r3, r3, #1
 2276 0016 5361     		str	r3, [r2, #20]
1134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2277              		.loc 1 1134 0
 2278 0018 0368     		ldr	r3, [r0]
 2279 001a 5A69     		ldr	r2, [r3, #20]
 2280 001c 12F0800F 		tst	r2, #128
 2281 0020 0AD0     		beq	.L167
1136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2282              		.loc 1 1136 0
 2283 0022 5A69     		ldr	r2, [r3, #20]
ARM GAS  /tmp/ccUha3Mw.s 			page 90


 2284 0024 22F08002 		bic	r2, r2, #128
 2285 0028 5A61     		str	r2, [r3, #20]
1139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 2286              		.loc 1 1139 0
 2287 002a 036B     		ldr	r3, [r0, #48]
 2288 002c 23B1     		cbz	r3, .L167
1143:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2289              		.loc 1 1143 0
 2290 002e 0022     		movs	r2, #0
 2291 0030 1A65     		str	r2, [r3, #80]
1145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 2292              		.loc 1 1145 0
 2293 0032 006B     		ldr	r0, [r0, #48]
 2294              	.LVL217:
 2295 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2296              	.LVL218:
 2297              	.L167:
1150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2298              		.loc 1 1150 0
 2299 0038 2368     		ldr	r3, [r4]
 2300 003a 5A69     		ldr	r2, [r3, #20]
 2301 003c 12F0400F 		tst	r2, #64
 2302 0040 0AD0     		beq	.L168
1152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2303              		.loc 1 1152 0
 2304 0042 5A69     		ldr	r2, [r3, #20]
 2305 0044 22F04002 		bic	r2, r2, #64
 2306 0048 5A61     		str	r2, [r3, #20]
1155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 2307              		.loc 1 1155 0
 2308 004a 636B     		ldr	r3, [r4, #52]
 2309 004c 23B1     		cbz	r3, .L168
1159:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2310              		.loc 1 1159 0
 2311 004e 0022     		movs	r2, #0
 2312 0050 1A65     		str	r2, [r3, #80]
1161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 2313              		.loc 1 1161 0
 2314 0052 606B     		ldr	r0, [r4, #52]
 2315 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2316              	.LVL219:
 2317              	.L168:
1166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2318              		.loc 1 1166 0
 2319 0058 0020     		movs	r0, #0
 2320 005a E084     		strh	r0, [r4, #38]	@ movhi
1167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2321              		.loc 1 1167 0
 2322 005c E085     		strh	r0, [r4, #46]	@ movhi
1170:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2323              		.loc 1 1170 0
 2324 005e E063     		str	r0, [r4, #60]
1173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2325              		.loc 1 1173 0
 2326 0060 2023     		movs	r3, #32
 2327 0062 84F83A30 		strb	r3, [r4, #58]
1174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
ARM GAS  /tmp/ccUha3Mw.s 			page 91


 2328              		.loc 1 1174 0
 2329 0066 84F83930 		strb	r3, [r4, #57]
1177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2330              		.loc 1 1177 0
 2331 006a 10BD     		pop	{r4, pc}
 2332              		.cfi_endproc
 2333              	.LFE82:
 2335              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2336              		.align	1
 2337              		.global	HAL_UART_AbortTransmit
 2338              		.syntax unified
 2339              		.thumb
 2340              		.thumb_func
 2341              		.fpu softvfp
 2343              	HAL_UART_AbortTransmit:
 2344              	.LFB83:
1192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2345              		.loc 1 1192 0
 2346              		.cfi_startproc
 2347              		@ args = 0, pretend = 0, frame = 0
 2348              		@ frame_needed = 0, uses_anonymous_args = 0
 2349              	.LVL220:
 2350 0000 10B5     		push	{r4, lr}
 2351              	.LCFI29:
 2352              		.cfi_def_cfa_offset 8
 2353              		.cfi_offset 4, -8
 2354              		.cfi_offset 14, -4
 2355 0002 0446     		mov	r4, r0
1194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2356              		.loc 1 1194 0
 2357 0004 0268     		ldr	r2, [r0]
 2358 0006 D368     		ldr	r3, [r2, #12]
 2359 0008 23F0C003 		bic	r3, r3, #192
 2360 000c D360     		str	r3, [r2, #12]
1197:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2361              		.loc 1 1197 0
 2362 000e 0368     		ldr	r3, [r0]
 2363 0010 5A69     		ldr	r2, [r3, #20]
 2364 0012 12F0800F 		tst	r2, #128
 2365 0016 0AD0     		beq	.L171
1199:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2366              		.loc 1 1199 0
 2367 0018 5A69     		ldr	r2, [r3, #20]
 2368 001a 22F08002 		bic	r2, r2, #128
 2369 001e 5A61     		str	r2, [r3, #20]
1202:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 2370              		.loc 1 1202 0
 2371 0020 036B     		ldr	r3, [r0, #48]
 2372 0022 23B1     		cbz	r3, .L171
1206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2373              		.loc 1 1206 0
 2374 0024 0022     		movs	r2, #0
 2375 0026 1A65     		str	r2, [r3, #80]
1208:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 2376              		.loc 1 1208 0
 2377 0028 006B     		ldr	r0, [r0, #48]
 2378              	.LVL221:
ARM GAS  /tmp/ccUha3Mw.s 			page 92


 2379 002a FFF7FEFF 		bl	HAL_DMA_Abort
 2380              	.LVL222:
 2381              	.L171:
1213:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2382              		.loc 1 1213 0
 2383 002e 0020     		movs	r0, #0
 2384 0030 E084     		strh	r0, [r4, #38]	@ movhi
1216:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2385              		.loc 1 1216 0
 2386 0032 2023     		movs	r3, #32
 2387 0034 84F83930 		strb	r3, [r4, #57]
1219:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2388              		.loc 1 1219 0
 2389 0038 10BD     		pop	{r4, pc}
 2390              		.cfi_endproc
 2391              	.LFE83:
 2393              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2394              		.align	1
 2395              		.global	HAL_UART_AbortReceive
 2396              		.syntax unified
 2397              		.thumb
 2398              		.thumb_func
 2399              		.fpu softvfp
 2401              	HAL_UART_AbortReceive:
 2402              	.LFB84:
1234:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2403              		.loc 1 1234 0
 2404              		.cfi_startproc
 2405              		@ args = 0, pretend = 0, frame = 0
 2406              		@ frame_needed = 0, uses_anonymous_args = 0
 2407              	.LVL223:
 2408 0000 10B5     		push	{r4, lr}
 2409              	.LCFI30:
 2410              		.cfi_def_cfa_offset 8
 2411              		.cfi_offset 4, -8
 2412              		.cfi_offset 14, -4
 2413 0002 0446     		mov	r4, r0
1236:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2414              		.loc 1 1236 0
 2415 0004 0268     		ldr	r2, [r0]
 2416 0006 D368     		ldr	r3, [r2, #12]
 2417 0008 23F49073 		bic	r3, r3, #288
 2418 000c D360     		str	r3, [r2, #12]
1237:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2419              		.loc 1 1237 0
 2420 000e 0268     		ldr	r2, [r0]
 2421 0010 5369     		ldr	r3, [r2, #20]
 2422 0012 23F00103 		bic	r3, r3, #1
 2423 0016 5361     		str	r3, [r2, #20]
1240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2424              		.loc 1 1240 0
 2425 0018 0368     		ldr	r3, [r0]
 2426 001a 5A69     		ldr	r2, [r3, #20]
 2427 001c 12F0400F 		tst	r2, #64
 2428 0020 0AD0     		beq	.L174
1242:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2429              		.loc 1 1242 0
ARM GAS  /tmp/ccUha3Mw.s 			page 93


 2430 0022 5A69     		ldr	r2, [r3, #20]
 2431 0024 22F04002 		bic	r2, r2, #64
 2432 0028 5A61     		str	r2, [r3, #20]
1245:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 2433              		.loc 1 1245 0
 2434 002a 436B     		ldr	r3, [r0, #52]
 2435 002c 23B1     		cbz	r3, .L174
1249:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2436              		.loc 1 1249 0
 2437 002e 0022     		movs	r2, #0
 2438 0030 1A65     		str	r2, [r3, #80]
1251:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 2439              		.loc 1 1251 0
 2440 0032 406B     		ldr	r0, [r0, #52]
 2441              	.LVL224:
 2442 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2443              	.LVL225:
 2444              	.L174:
1256:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2445              		.loc 1 1256 0
 2446 0038 0020     		movs	r0, #0
 2447 003a E085     		strh	r0, [r4, #46]	@ movhi
1259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2448              		.loc 1 1259 0
 2449 003c 2023     		movs	r3, #32
 2450 003e 84F83A30 		strb	r3, [r4, #58]
1262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2451              		.loc 1 1262 0
 2452 0042 10BD     		pop	{r4, pc}
 2453              		.cfi_endproc
 2454              	.LFE84:
 2456              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2457              		.align	1
 2458              		.weak	HAL_UART_TxCpltCallback
 2459              		.syntax unified
 2460              		.thumb
 2461              		.thumb_func
 2462              		.fpu softvfp
 2464              	HAL_UART_TxCpltCallback:
 2465              	.LFB89:
1651:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2466              		.loc 1 1651 0
 2467              		.cfi_startproc
 2468              		@ args = 0, pretend = 0, frame = 0
 2469              		@ frame_needed = 0, uses_anonymous_args = 0
 2470              		@ link register save eliminated.
 2471              	.LVL226:
1657:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2472              		.loc 1 1657 0
 2473 0000 7047     		bx	lr
 2474              		.cfi_endproc
 2475              	.LFE89:
 2477              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2478              		.align	1
 2479              		.syntax unified
 2480              		.thumb
 2481              		.thumb_func
ARM GAS  /tmp/ccUha3Mw.s 			page 94


 2482              		.fpu softvfp
 2484              	UART_DMATransmitCplt:
 2485              	.LFB104:
1993:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2486              		.loc 1 1993 0
 2487              		.cfi_startproc
 2488              		@ args = 0, pretend = 0, frame = 0
 2489              		@ frame_needed = 0, uses_anonymous_args = 0
 2490              	.LVL227:
 2491 0000 08B5     		push	{r3, lr}
 2492              	.LCFI31:
 2493              		.cfi_def_cfa_offset 8
 2494              		.cfi_offset 3, -8
 2495              		.cfi_offset 14, -4
1994:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* DMA Normal mode*/
 2496              		.loc 1 1994 0
 2497 0002 836B     		ldr	r3, [r0, #56]
 2498              	.LVL228:
1996:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2499              		.loc 1 1996 0
 2500 0004 0268     		ldr	r2, [r0]
 2501 0006 1268     		ldr	r2, [r2]
 2502 0008 12F4807F 		tst	r2, #256
 2503 000c 0CD1     		bne	.L178
1998:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2504              		.loc 1 1998 0
 2505 000e 0022     		movs	r2, #0
 2506 0010 DA84     		strh	r2, [r3, #38]	@ movhi
2002:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2507              		.loc 1 2002 0
 2508 0012 1968     		ldr	r1, [r3]
 2509 0014 4A69     		ldr	r2, [r1, #20]
 2510 0016 22F08002 		bic	r2, r2, #128
 2511 001a 4A61     		str	r2, [r1, #20]
2005:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2512              		.loc 1 2005 0
 2513 001c 1A68     		ldr	r2, [r3]
 2514 001e D368     		ldr	r3, [r2, #12]
 2515              	.LVL229:
 2516 0020 43F04003 		orr	r3, r3, #64
 2517 0024 D360     		str	r3, [r2, #12]
 2518              	.LVL230:
 2519              	.L177:
2013:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2520              		.loc 1 2013 0
 2521 0026 08BD     		pop	{r3, pc}
 2522              	.LVL231:
 2523              	.L178:
2011:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 2524              		.loc 1 2011 0
 2525 0028 1846     		mov	r0, r3
 2526              	.LVL232:
 2527 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2528              	.LVL233:
2013:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2529              		.loc 1 2013 0
 2530 002e FAE7     		b	.L177
ARM GAS  /tmp/ccUha3Mw.s 			page 95


 2531              		.cfi_endproc
 2532              	.LFE104:
 2534              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 2535              		.align	1
 2536              		.syntax unified
 2537              		.thumb
 2538              		.thumb_func
 2539              		.fpu softvfp
 2541              	UART_EndTransmit_IT:
 2542              	.LFB118:
2352:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
 2543              		.loc 1 2352 0
 2544              		.cfi_startproc
 2545              		@ args = 0, pretend = 0, frame = 0
 2546              		@ frame_needed = 0, uses_anonymous_args = 0
 2547              	.LVL234:
 2548 0000 08B5     		push	{r3, lr}
 2549              	.LCFI32:
 2550              		.cfi_def_cfa_offset 8
 2551              		.cfi_offset 3, -8
 2552              		.cfi_offset 14, -4
2354:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 2553              		.loc 1 2354 0
 2554 0002 0168     		ldr	r1, [r0]
 2555 0004 CB68     		ldr	r3, [r1, #12]
 2556 0006 23F04003 		bic	r3, r3, #64
 2557 000a CB60     		str	r3, [r1, #12]
2357:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 2558              		.loc 1 2357 0
 2559 000c 2023     		movs	r3, #32
 2560 000e 80F83930 		strb	r3, [r0, #57]
2359:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 2561              		.loc 1 2359 0
 2562 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2563              	.LVL235:
2362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2564              		.loc 1 2362 0
 2565 0016 0020     		movs	r0, #0
 2566 0018 08BD     		pop	{r3, pc}
 2567              		.cfi_endproc
 2568              	.LFE118:
 2570              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2571              		.align	1
 2572              		.weak	HAL_UART_TxHalfCpltCallback
 2573              		.syntax unified
 2574              		.thumb
 2575              		.thumb_func
 2576              		.fpu softvfp
 2578              	HAL_UART_TxHalfCpltCallback:
 2579              	.LFB90:
1666:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2580              		.loc 1 1666 0
 2581              		.cfi_startproc
 2582              		@ args = 0, pretend = 0, frame = 0
 2583              		@ frame_needed = 0, uses_anonymous_args = 0
 2584              		@ link register save eliminated.
 2585              	.LVL236:
ARM GAS  /tmp/ccUha3Mw.s 			page 96


1672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2586              		.loc 1 1672 0
 2587 0000 7047     		bx	lr
 2588              		.cfi_endproc
 2589              	.LFE90:
 2591              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2592              		.align	1
 2593              		.syntax unified
 2594              		.thumb
 2595              		.thumb_func
 2596              		.fpu softvfp
 2598              	UART_DMATxHalfCplt:
 2599              	.LFB105:
2022:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2600              		.loc 1 2022 0
 2601              		.cfi_startproc
 2602              		@ args = 0, pretend = 0, frame = 0
 2603              		@ frame_needed = 0, uses_anonymous_args = 0
 2604              	.LVL237:
 2605 0000 08B5     		push	{r3, lr}
 2606              	.LCFI33:
 2607              		.cfi_def_cfa_offset 8
 2608              		.cfi_offset 3, -8
 2609              		.cfi_offset 14, -4
 2610              	.LVL238:
2025:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 2611              		.loc 1 2025 0
 2612 0002 806B     		ldr	r0, [r0, #56]
 2613              	.LVL239:
 2614 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2615              	.LVL240:
2026:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2616              		.loc 1 2026 0
 2617 0008 08BD     		pop	{r3, pc}
 2618              		.cfi_endproc
 2619              	.LFE105:
 2621              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2622              		.align	1
 2623              		.weak	HAL_UART_RxCpltCallback
 2624              		.syntax unified
 2625              		.thumb
 2626              		.thumb_func
 2627              		.fpu softvfp
 2629              	HAL_UART_RxCpltCallback:
 2630              	.LFB91:
1681:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2631              		.loc 1 1681 0
 2632              		.cfi_startproc
 2633              		@ args = 0, pretend = 0, frame = 0
 2634              		@ frame_needed = 0, uses_anonymous_args = 0
 2635              		@ link register save eliminated.
 2636              	.LVL241:
1687:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2637              		.loc 1 1687 0
 2638 0000 7047     		bx	lr
 2639              		.cfi_endproc
 2640              	.LFE91:
ARM GAS  /tmp/ccUha3Mw.s 			page 97


 2642              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2643              		.align	1
 2644              		.syntax unified
 2645              		.thumb
 2646              		.thumb_func
 2647              		.fpu softvfp
 2649              	UART_DMAReceiveCplt:
 2650              	.LFB106:
2034:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2651              		.loc 1 2034 0
 2652              		.cfi_startproc
 2653              		@ args = 0, pretend = 0, frame = 0
 2654              		@ frame_needed = 0, uses_anonymous_args = 0
 2655              	.LVL242:
 2656 0000 08B5     		push	{r3, lr}
 2657              	.LCFI34:
 2658              		.cfi_def_cfa_offset 8
 2659              		.cfi_offset 3, -8
 2660              		.cfi_offset 14, -4
2035:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* DMA Normal mode*/
 2661              		.loc 1 2035 0
 2662 0002 836B     		ldr	r3, [r0, #56]
 2663              	.LVL243:
2037:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2664              		.loc 1 2037 0
 2665 0004 0268     		ldr	r2, [r0]
 2666 0006 1268     		ldr	r2, [r2]
 2667 0008 12F4807F 		tst	r2, #256
 2668 000c 13D1     		bne	.L188
2039:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2669              		.loc 1 2039 0
 2670 000e 0022     		movs	r2, #0
 2671 0010 DA85     		strh	r2, [r3, #46]	@ movhi
2042:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2672              		.loc 1 2042 0
 2673 0012 1968     		ldr	r1, [r3]
 2674 0014 CA68     		ldr	r2, [r1, #12]
 2675 0016 22F48072 		bic	r2, r2, #256
 2676 001a CA60     		str	r2, [r1, #12]
2043:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 2677              		.loc 1 2043 0
 2678 001c 1968     		ldr	r1, [r3]
 2679 001e 4A69     		ldr	r2, [r1, #20]
 2680 0020 22F00102 		bic	r2, r2, #1
 2681 0024 4A61     		str	r2, [r1, #20]
2047:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2682              		.loc 1 2047 0
 2683 0026 1968     		ldr	r1, [r3]
 2684 0028 4A69     		ldr	r2, [r1, #20]
 2685 002a 22F04002 		bic	r2, r2, #64
 2686 002e 4A61     		str	r2, [r1, #20]
2050:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 2687              		.loc 1 2050 0
 2688 0030 2022     		movs	r2, #32
 2689 0032 83F83A20 		strb	r2, [r3, #58]
 2690              	.L188:
2052:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
ARM GAS  /tmp/ccUha3Mw.s 			page 98


 2691              		.loc 1 2052 0
 2692 0036 1846     		mov	r0, r3
 2693              	.LVL244:
 2694 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2695              	.LVL245:
2053:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2696              		.loc 1 2053 0
 2697 003c 08BD     		pop	{r3, pc}
 2698              		.cfi_endproc
 2699              	.LFE106:
 2701              		.section	.text.UART_Receive_IT,"ax",%progbits
 2702              		.align	1
 2703              		.syntax unified
 2704              		.thumb
 2705              		.thumb_func
 2706              		.fpu softvfp
 2708              	UART_Receive_IT:
 2709              	.LFB119:
2371:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint16_t* tmp;
 2710              		.loc 1 2371 0
 2711              		.cfi_startproc
 2712              		@ args = 0, pretend = 0, frame = 0
 2713              		@ frame_needed = 0, uses_anonymous_args = 0
 2714              	.LVL246:
 2715 0000 08B5     		push	{r3, lr}
 2716              	.LCFI35:
 2717              		.cfi_def_cfa_offset 8
 2718              		.cfi_offset 3, -8
 2719              		.cfi_offset 14, -4
2375:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2720              		.loc 1 2375 0
 2721 0002 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2722 0006 DBB2     		uxtb	r3, r3
 2723 0008 222B     		cmp	r3, #34
 2724 000a 40D1     		bne	.L196
2377:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 2725              		.loc 1 2377 0
 2726 000c 8368     		ldr	r3, [r0, #8]
 2727 000e B3F5805F 		cmp	r3, #4096
 2728 0012 0ED0     		beq	.L199
2393:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 2729              		.loc 1 2393 0
 2730 0014 0369     		ldr	r3, [r0, #16]
 2731 0016 03BB     		cbnz	r3, .L195
2395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 2732              		.loc 1 2395 0
 2733 0018 0368     		ldr	r3, [r0]
 2734 001a 5A68     		ldr	r2, [r3, #4]
 2735 001c 836A     		ldr	r3, [r0, #40]
 2736 001e 591C     		adds	r1, r3, #1
 2737 0020 8162     		str	r1, [r0, #40]
 2738 0022 1A70     		strb	r2, [r3]
 2739              	.L194:
2403:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 2740              		.loc 1 2403 0
 2741 0024 C38D     		ldrh	r3, [r0, #46]
 2742 0026 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccUha3Mw.s 			page 99


 2743 0028 9BB2     		uxth	r3, r3
 2744 002a C385     		strh	r3, [r0, #46]	@ movhi
 2745 002c F3B1     		cbz	r3, .L200
2418:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 2746              		.loc 1 2418 0
 2747 002e 0020     		movs	r0, #0
 2748              	.LVL247:
 2749 0030 2EE0     		b	.L191
 2750              	.LVL248:
 2751              	.L199:
2379:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 2752              		.loc 1 2379 0
 2753 0032 826A     		ldr	r2, [r0, #40]
 2754              	.LVL249:
2380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 2755              		.loc 1 2380 0
 2756 0034 0369     		ldr	r3, [r0, #16]
 2757 0036 43B9     		cbnz	r3, .L193
2382:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->pRxBuffPtr += 2;
 2758              		.loc 1 2382 0
 2759 0038 0368     		ldr	r3, [r0]
 2760 003a 5B68     		ldr	r3, [r3, #4]
 2761 003c C3F30803 		ubfx	r3, r3, #0, #9
 2762 0040 1380     		strh	r3, [r2]	@ movhi
2383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 2763              		.loc 1 2383 0
 2764 0042 836A     		ldr	r3, [r0, #40]
 2765 0044 0233     		adds	r3, r3, #2
 2766 0046 8362     		str	r3, [r0, #40]
 2767 0048 ECE7     		b	.L194
 2768              	.L193:
2387:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->pRxBuffPtr += 1;
 2769              		.loc 1 2387 0
 2770 004a 0368     		ldr	r3, [r0]
 2771 004c 5B68     		ldr	r3, [r3, #4]
 2772 004e DBB2     		uxtb	r3, r3
 2773 0050 1380     		strh	r3, [r2]	@ movhi
2388:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 2774              		.loc 1 2388 0
 2775 0052 836A     		ldr	r3, [r0, #40]
 2776 0054 0133     		adds	r3, r3, #1
 2777 0056 8362     		str	r3, [r0, #40]
 2778 0058 E4E7     		b	.L194
 2779              	.LVL250:
 2780              	.L195:
2399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 2781              		.loc 1 2399 0
 2782 005a 0368     		ldr	r3, [r0]
 2783 005c 5B68     		ldr	r3, [r3, #4]
 2784 005e 826A     		ldr	r2, [r0, #40]
 2785 0060 511C     		adds	r1, r2, #1
 2786 0062 8162     		str	r1, [r0, #40]
 2787 0064 03F07F03 		and	r3, r3, #127
 2788 0068 1370     		strb	r3, [r2]
 2789 006a DBE7     		b	.L194
 2790              	.L200:
2406:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
ARM GAS  /tmp/ccUha3Mw.s 			page 100


 2791              		.loc 1 2406 0
 2792 006c 0268     		ldr	r2, [r0]
 2793 006e D368     		ldr	r3, [r2, #12]
 2794 0070 23F49073 		bic	r3, r3, #288
 2795 0074 D360     		str	r3, [r2, #12]
2409:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2796              		.loc 1 2409 0
 2797 0076 0268     		ldr	r2, [r0]
 2798 0078 5369     		ldr	r3, [r2, #20]
 2799 007a 23F00103 		bic	r3, r3, #1
 2800 007e 5361     		str	r3, [r2, #20]
2412:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****      
 2801              		.loc 1 2412 0
 2802 0080 2023     		movs	r3, #32
 2803 0082 80F83A30 		strb	r3, [r0, #58]
2414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2804              		.loc 1 2414 0
 2805 0086 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2806              	.LVL251:
2416:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 2807              		.loc 1 2416 0
 2808 008a 0020     		movs	r0, #0
 2809 008c 00E0     		b	.L191
 2810              	.LVL252:
 2811              	.L196:
2422:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 2812              		.loc 1 2422 0
 2813 008e 0220     		movs	r0, #2
 2814              	.LVL253:
 2815              	.L191:
2424:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2816              		.loc 1 2424 0
 2817 0090 08BD     		pop	{r3, pc}
 2818              		.cfi_endproc
 2819              	.LFE119:
 2821              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2822              		.align	1
 2823              		.weak	HAL_UART_RxHalfCpltCallback
 2824              		.syntax unified
 2825              		.thumb
 2826              		.thumb_func
 2827              		.fpu softvfp
 2829              	HAL_UART_RxHalfCpltCallback:
 2830              	.LFB92:
1696:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2831              		.loc 1 1696 0
 2832              		.cfi_startproc
 2833              		@ args = 0, pretend = 0, frame = 0
 2834              		@ frame_needed = 0, uses_anonymous_args = 0
 2835              		@ link register save eliminated.
 2836              	.LVL254:
1702:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2837              		.loc 1 1702 0
 2838 0000 7047     		bx	lr
 2839              		.cfi_endproc
 2840              	.LFE92:
 2842              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
ARM GAS  /tmp/ccUha3Mw.s 			page 101


 2843              		.align	1
 2844              		.syntax unified
 2845              		.thumb
 2846              		.thumb_func
 2847              		.fpu softvfp
 2849              	UART_DMARxHalfCplt:
 2850              	.LFB107:
2062:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2851              		.loc 1 2062 0
 2852              		.cfi_startproc
 2853              		@ args = 0, pretend = 0, frame = 0
 2854              		@ frame_needed = 0, uses_anonymous_args = 0
 2855              	.LVL255:
 2856 0000 08B5     		push	{r3, lr}
 2857              	.LCFI36:
 2858              		.cfi_def_cfa_offset 8
 2859              		.cfi_offset 3, -8
 2860              		.cfi_offset 14, -4
 2861              	.LVL256:
2065:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 2862              		.loc 1 2065 0
 2863 0002 806B     		ldr	r0, [r0, #56]
 2864              	.LVL257:
 2865 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2866              	.LVL258:
2066:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2867              		.loc 1 2066 0
 2868 0008 08BD     		pop	{r3, pc}
 2869              		.cfi_endproc
 2870              	.LFE107:
 2872              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2873              		.align	1
 2874              		.weak	HAL_UART_ErrorCallback
 2875              		.syntax unified
 2876              		.thumb
 2877              		.thumb_func
 2878              		.fpu softvfp
 2880              	HAL_UART_ErrorCallback:
 2881              	.LFB93:
1711:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2882              		.loc 1 1711 0
 2883              		.cfi_startproc
 2884              		@ args = 0, pretend = 0, frame = 0
 2885              		@ frame_needed = 0, uses_anonymous_args = 0
 2886              		@ link register save eliminated.
 2887              	.LVL259:
1717:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2888              		.loc 1 1717 0
 2889 0000 7047     		bx	lr
 2890              		.cfi_endproc
 2891              	.LFE93:
 2893              		.section	.text.UART_DMAError,"ax",%progbits
 2894              		.align	1
 2895              		.syntax unified
 2896              		.thumb
 2897              		.thumb_func
 2898              		.fpu softvfp
ARM GAS  /tmp/ccUha3Mw.s 			page 102


 2900              	UART_DMAError:
 2901              	.LFB108:
2074:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2902              		.loc 1 2074 0
 2903              		.cfi_startproc
 2904              		@ args = 0, pretend = 0, frame = 0
 2905              		@ frame_needed = 0, uses_anonymous_args = 0
 2906              	.LVL260:
 2907 0000 10B5     		push	{r4, lr}
 2908              	.LCFI37:
 2909              		.cfi_def_cfa_offset 8
 2910              		.cfi_offset 4, -8
 2911              		.cfi_offset 14, -4
 2912              	.LVL261:
2076:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2913              		.loc 1 2076 0
 2914 0002 846B     		ldr	r4, [r0, #56]
 2915              	.LVL262:
2079:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2916              		.loc 1 2079 0
 2917 0004 2368     		ldr	r3, [r4]
 2918 0006 5A69     		ldr	r2, [r3, #20]
 2919              	.LVL263:
2080:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2920              		.loc 1 2080 0
 2921 0008 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 2922 000c DBB2     		uxtb	r3, r3
 2923 000e 212B     		cmp	r3, #33
 2924 0010 10D0     		beq	.L209
 2925              	.LVL264:
 2926              	.L206:
2087:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2927              		.loc 1 2087 0
 2928 0012 2368     		ldr	r3, [r4]
 2929 0014 5A69     		ldr	r2, [r3, #20]
 2930 0016 02F04002 		and	r2, r2, #64
 2931              	.LVL265:
2088:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2932              		.loc 1 2088 0
 2933 001a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2934 001e DBB2     		uxtb	r3, r3
 2935 0020 222B     		cmp	r3, #34
 2936 0022 11D0     		beq	.L210
 2937              	.LVL266:
 2938              	.L207:
2094:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 2939              		.loc 1 2094 0
 2940 0024 E36B     		ldr	r3, [r4, #60]
 2941 0026 43F01003 		orr	r3, r3, #16
 2942 002a E363     		str	r3, [r4, #60]
2095:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 2943              		.loc 1 2095 0
 2944 002c 2046     		mov	r0, r4
 2945 002e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2946              	.LVL267:
2096:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 2947              		.loc 1 2096 0
ARM GAS  /tmp/ccUha3Mw.s 			page 103


 2948 0032 10BD     		pop	{r4, pc}
 2949              	.LVL268:
 2950              	.L209:
 2951 0034 02F08002 		and	r2, r2, #128
 2952              	.LVL269:
2080:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2953              		.loc 1 2080 0 discriminator 1
 2954 0038 002A     		cmp	r2, #0
 2955 003a EAD0     		beq	.L206
2082:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2956              		.loc 1 2082 0
 2957 003c 0023     		movs	r3, #0
 2958 003e E384     		strh	r3, [r4, #38]	@ movhi
2083:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 2959              		.loc 1 2083 0
 2960 0040 2046     		mov	r0, r4
 2961              	.LVL270:
 2962 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 2963              	.LVL271:
 2964 0046 E4E7     		b	.L206
 2965              	.LVL272:
 2966              	.L210:
2088:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 2967              		.loc 1 2088 0 discriminator 1
 2968 0048 002A     		cmp	r2, #0
 2969 004a EBD0     		beq	.L207
2090:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2970              		.loc 1 2090 0
 2971 004c 0023     		movs	r3, #0
 2972 004e E385     		strh	r3, [r4, #46]	@ movhi
2091:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 2973              		.loc 1 2091 0
 2974 0050 2046     		mov	r0, r4
 2975 0052 FFF7FEFF 		bl	UART_EndRxTransfer
 2976              	.LVL273:
 2977 0056 E5E7     		b	.L207
 2978              		.cfi_endproc
 2979              	.LFE108:
 2981              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2982              		.align	1
 2983              		.global	HAL_UART_IRQHandler
 2984              		.syntax unified
 2985              		.thumb
 2986              		.thumb_func
 2987              		.fpu softvfp
 2989              	HAL_UART_IRQHandler:
 2990              	.LFB88:
1524:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2991              		.loc 1 1524 0
 2992              		.cfi_startproc
 2993              		@ args = 0, pretend = 0, frame = 0
 2994              		@ frame_needed = 0, uses_anonymous_args = 0
 2995              	.LVL274:
 2996 0000 10B5     		push	{r4, lr}
 2997              	.LCFI38:
 2998              		.cfi_def_cfa_offset 8
 2999              		.cfi_offset 4, -8
ARM GAS  /tmp/ccUha3Mw.s 			page 104


 3000              		.cfi_offset 14, -4
 3001 0002 0446     		mov	r4, r0
1525:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3002              		.loc 1 1525 0
 3003 0004 0268     		ldr	r2, [r0]
 3004 0006 1368     		ldr	r3, [r2]
 3005              	.LVL275:
1526:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3006              		.loc 1 1526 0
 3007 0008 D168     		ldr	r1, [r2, #12]
 3008              	.LVL276:
1527:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
 3009              		.loc 1 1527 0
 3010 000a 5269     		ldr	r2, [r2, #20]
 3011              	.LVL277:
1533:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3012              		.loc 1 1533 0
 3013 000c 13F00F00 		ands	r0, r3, #15
 3014              	.LVL278:
 3015 0010 05D1     		bne	.L212
1536:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3016              		.loc 1 1536 0
 3017 0012 13F0200F 		tst	r3, #32
 3018 0016 02D0     		beq	.L212
1536:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3019              		.loc 1 1536 0 is_stmt 0 discriminator 1
 3020 0018 11F0200F 		tst	r1, #32
 3021 001c 53D1     		bne	.L227
 3022              	.L212:
1544:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3023              		.loc 1 1544 0 is_stmt 1
 3024 001e 0028     		cmp	r0, #0
 3025 0020 67D0     		beq	.L214
1544:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3026              		.loc 1 1544 0 is_stmt 0 discriminator 1
 3027 0022 12F00102 		ands	r2, r2, #1
 3028              	.LVL279:
 3029 0026 02D1     		bne	.L215
1544:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3030              		.loc 1 1544 0 discriminator 2
 3031 0028 11F4907F 		tst	r1, #288
 3032 002c 61D0     		beq	.L214
 3033              	.L215:
1547:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3034              		.loc 1 1547 0 is_stmt 1
 3035 002e 13F0010F 		tst	r3, #1
 3036 0032 06D0     		beq	.L216
1547:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3037              		.loc 1 1547 0 is_stmt 0 discriminator 1
 3038 0034 11F4807F 		tst	r1, #256
 3039 0038 03D0     		beq	.L216
1549:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 3040              		.loc 1 1549 0 is_stmt 1
 3041 003a E06B     		ldr	r0, [r4, #60]
 3042              	.LVL280:
 3043 003c 40F00100 		orr	r0, r0, #1
 3044 0040 E063     		str	r0, [r4, #60]
ARM GAS  /tmp/ccUha3Mw.s 			page 105


 3045              	.L216:
1553:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3046              		.loc 1 1553 0
 3047 0042 13F0040F 		tst	r3, #4
 3048 0046 04D0     		beq	.L217
1553:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3049              		.loc 1 1553 0 is_stmt 0 discriminator 1
 3050 0048 1AB1     		cbz	r2, .L217
1555:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 3051              		.loc 1 1555 0 is_stmt 1
 3052 004a E06B     		ldr	r0, [r4, #60]
 3053 004c 40F00200 		orr	r0, r0, #2
 3054 0050 E063     		str	r0, [r4, #60]
 3055              	.L217:
1559:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3056              		.loc 1 1559 0
 3057 0052 13F0020F 		tst	r3, #2
 3058 0056 04D0     		beq	.L218
1559:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3059              		.loc 1 1559 0 is_stmt 0 discriminator 1
 3060 0058 1AB1     		cbz	r2, .L218
1561:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 3061              		.loc 1 1561 0 is_stmt 1
 3062 005a E06B     		ldr	r0, [r4, #60]
 3063 005c 40F00400 		orr	r0, r0, #4
 3064 0060 E063     		str	r0, [r4, #60]
 3065              	.L218:
1565:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     { 
 3066              		.loc 1 1565 0
 3067 0062 13F0080F 		tst	r3, #8
 3068 0066 04D0     		beq	.L219
1565:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     { 
 3069              		.loc 1 1565 0 is_stmt 0 discriminator 1
 3070 0068 1AB1     		cbz	r2, .L219
1567:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 3071              		.loc 1 1567 0 is_stmt 1
 3072 006a E26B     		ldr	r2, [r4, #60]
 3073 006c 42F00802 		orr	r2, r2, #8
 3074 0070 E263     		str	r2, [r4, #60]
 3075              	.L219:
1571:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3076              		.loc 1 1571 0
 3077 0072 E26B     		ldr	r2, [r4, #60]
 3078 0074 002A     		cmp	r2, #0
 3079 0076 48D0     		beq	.L211
1574:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 3080              		.loc 1 1574 0
 3081 0078 13F0200F 		tst	r3, #32
 3082 007c 02D0     		beq	.L220
1574:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 3083              		.loc 1 1574 0 is_stmt 0 discriminator 1
 3084 007e 11F0200F 		tst	r1, #32
 3085 0082 24D1     		bne	.L228
 3086              	.LVL281:
 3087              	.L220:
1581:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 3088              		.loc 1 1581 0 is_stmt 1
ARM GAS  /tmp/ccUha3Mw.s 			page 106


 3089 0084 2368     		ldr	r3, [r4]
 3090 0086 5B69     		ldr	r3, [r3, #20]
 3091 0088 03F04003 		and	r3, r3, #64
 3092              	.LVL282:
1582:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 3093              		.loc 1 1582 0
 3094 008c E26B     		ldr	r2, [r4, #60]
 3095 008e 12F0080F 		tst	r2, #8
 3096 0092 00D1     		bne	.L221
1582:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 3097              		.loc 1 1582 0 is_stmt 0 discriminator 1
 3098 0094 3BB3     		cbz	r3, .L222
 3099              	.L221:
1587:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         
 3100              		.loc 1 1587 0 is_stmt 1
 3101 0096 2046     		mov	r0, r4
 3102 0098 FFF7FEFF 		bl	UART_EndRxTransfer
 3103              	.LVL283:
1590:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         {
 3104              		.loc 1 1590 0
 3105 009c 2368     		ldr	r3, [r4]
 3106 009e 5A69     		ldr	r2, [r3, #20]
 3107 00a0 12F0400F 		tst	r2, #64
 3108 00a4 1BD0     		beq	.L223
1592:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           
 3109              		.loc 1 1592 0
 3110 00a6 5A69     		ldr	r2, [r3, #20]
 3111 00a8 22F04002 		bic	r2, r2, #64
 3112 00ac 5A61     		str	r2, [r3, #20]
1595:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           {
 3113              		.loc 1 1595 0
 3114 00ae 636B     		ldr	r3, [r4, #52]
 3115 00b0 8BB1     		cbz	r3, .L224
1599:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3116              		.loc 1 1599 0
 3117 00b2 1A4A     		ldr	r2, .L231
 3118 00b4 1A65     		str	r2, [r3, #80]
1600:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             {
 3119              		.loc 1 1600 0
 3120 00b6 606B     		ldr	r0, [r4, #52]
 3121 00b8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3122              	.LVL284:
 3123 00bc 28B3     		cbz	r0, .L211
1603:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****             }
 3124              		.loc 1 1603 0
 3125 00be 606B     		ldr	r0, [r4, #52]
 3126 00c0 036D     		ldr	r3, [r0, #80]
 3127 00c2 9847     		blx	r3
 3128              	.LVL285:
 3129 00c4 21E0     		b	.L211
 3130              	.LVL286:
 3131              	.L227:
1538:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       return;
 3132              		.loc 1 1538 0
 3133 00c6 2046     		mov	r0, r4
 3134              	.LVL287:
 3135 00c8 FFF7FEFF 		bl	UART_Receive_IT
ARM GAS  /tmp/ccUha3Mw.s 			page 107


 3136              	.LVL288:
1539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 3137              		.loc 1 1539 0
 3138 00cc 1DE0     		b	.L211
 3139              	.LVL289:
 3140              	.L228:
1576:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 3141              		.loc 1 1576 0
 3142 00ce 2046     		mov	r0, r4
 3143 00d0 FFF7FEFF 		bl	UART_Receive_IT
 3144              	.LVL290:
 3145 00d4 D6E7     		b	.L220
 3146              	.LVL291:
 3147              	.L224:
1609:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****           }
 3148              		.loc 1 1609 0
 3149 00d6 2046     		mov	r0, r4
 3150 00d8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3151              	.LVL292:
 3152 00dc 15E0     		b	.L211
 3153              	.L223:
1615:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         }
 3154              		.loc 1 1615 0
 3155 00de 2046     		mov	r0, r4
 3156 00e0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3157              	.LVL293:
 3158 00e4 11E0     		b	.L211
 3159              	.LVL294:
 3160              	.L222:
1622:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3161              		.loc 1 1622 0
 3162 00e6 2046     		mov	r0, r4
 3163 00e8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3164              	.LVL295:
1623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 3165              		.loc 1 1623 0
 3166 00ec 0023     		movs	r3, #0
 3167 00ee E363     		str	r3, [r4, #60]
 3168 00f0 0BE0     		b	.L211
 3169              	.LVL296:
 3170              	.L214:
1630:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3171              		.loc 1 1630 0
 3172 00f2 13F0800F 		tst	r3, #128
 3173 00f6 02D0     		beq	.L225
1630:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3174              		.loc 1 1630 0 is_stmt 0 discriminator 1
 3175 00f8 11F0800F 		tst	r1, #128
 3176 00fc 06D1     		bne	.L229
 3177              	.L225:
1637:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3178              		.loc 1 1637 0 is_stmt 1
 3179 00fe 13F0400F 		tst	r3, #64
 3180 0102 02D0     		beq	.L211
1637:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3181              		.loc 1 1637 0 is_stmt 0 discriminator 1
 3182 0104 11F0400F 		tst	r1, #64
ARM GAS  /tmp/ccUha3Mw.s 			page 108


 3183 0108 04D1     		bne	.L230
 3184              	.LVL297:
 3185              	.L211:
1642:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3186              		.loc 1 1642 0 is_stmt 1
 3187 010a 10BD     		pop	{r4, pc}
 3188              	.LVL298:
 3189              	.L229:
1632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return;
 3190              		.loc 1 1632 0
 3191 010c 2046     		mov	r0, r4
 3192              	.LVL299:
 3193 010e FFF7FEFF 		bl	UART_Transmit_IT
 3194              	.LVL300:
1633:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 3195              		.loc 1 1633 0
 3196 0112 FAE7     		b	.L211
 3197              	.LVL301:
 3198              	.L230:
1639:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     return;
 3199              		.loc 1 1639 0
 3200 0114 2046     		mov	r0, r4
 3201              	.LVL302:
 3202 0116 FFF7FEFF 		bl	UART_EndTransmit_IT
 3203              	.LVL303:
1640:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 3204              		.loc 1 1640 0
 3205 011a F6E7     		b	.L211
 3206              	.L232:
 3207              		.align	2
 3208              	.L231:
 3209 011c 00000000 		.word	UART_DMAAbortOnError
 3210              		.cfi_endproc
 3211              	.LFE88:
 3213              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3214              		.align	1
 3215              		.syntax unified
 3216              		.thumb
 3217              		.thumb_func
 3218              		.fpu softvfp
 3220              	UART_DMAAbortOnError:
 3221              	.LFB112:
2172:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3222              		.loc 1 2172 0
 3223              		.cfi_startproc
 3224              		@ args = 0, pretend = 0, frame = 0
 3225              		@ frame_needed = 0, uses_anonymous_args = 0
 3226              	.LVL304:
 3227 0000 08B5     		push	{r3, lr}
 3228              	.LCFI39:
 3229              		.cfi_def_cfa_offset 8
 3230              		.cfi_offset 3, -8
 3231              		.cfi_offset 14, -4
2173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxXferCount = 0;
 3232              		.loc 1 2173 0
 3233 0002 806B     		ldr	r0, [r0, #56]
 3234              	.LVL305:
ARM GAS  /tmp/ccUha3Mw.s 			page 109


2174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->TxXferCount = 0;
 3235              		.loc 1 2174 0
 3236 0004 0023     		movs	r3, #0
 3237 0006 C385     		strh	r3, [r0, #46]	@ movhi
2175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3238              		.loc 1 2175 0
 3239 0008 C384     		strh	r3, [r0, #38]	@ movhi
2177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 3240              		.loc 1 2177 0
 3241 000a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3242              	.LVL306:
2178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3243              		.loc 1 2178 0
 3244 000e 08BD     		pop	{r3, pc}
 3245              		.cfi_endproc
 3246              	.LFE112:
 3248              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3249              		.align	1
 3250              		.weak	HAL_UART_AbortCpltCallback
 3251              		.syntax unified
 3252              		.thumb
 3253              		.thumb_func
 3254              		.fpu softvfp
 3256              	HAL_UART_AbortCpltCallback:
 3257              	.LFB94:
1725:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3258              		.loc 1 1725 0
 3259              		.cfi_startproc
 3260              		@ args = 0, pretend = 0, frame = 0
 3261              		@ frame_needed = 0, uses_anonymous_args = 0
 3262              		@ link register save eliminated.
 3263              	.LVL307:
1732:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** /**
 3264              		.loc 1 1732 0
 3265 0000 7047     		bx	lr
 3266              		.cfi_endproc
 3267              	.LFE94:
 3269              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3270              		.align	1
 3271              		.global	HAL_UART_Abort_IT
 3272              		.syntax unified
 3273              		.thumb
 3274              		.thumb_func
 3275              		.fpu softvfp
 3277              	HAL_UART_Abort_IT:
 3278              	.LFB85:
1279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3279              		.loc 1 1279 0
 3280              		.cfi_startproc
 3281              		@ args = 0, pretend = 0, frame = 0
 3282              		@ frame_needed = 0, uses_anonymous_args = 0
 3283              	.LVL308:
 3284 0000 10B5     		push	{r4, lr}
 3285              	.LCFI40:
 3286              		.cfi_def_cfa_offset 8
 3287              		.cfi_offset 4, -8
 3288              		.cfi_offset 14, -4
ARM GAS  /tmp/ccUha3Mw.s 			page 110


 3289 0002 0446     		mov	r4, r0
 3290              	.LVL309:
1283:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3291              		.loc 1 1283 0
 3292 0004 0268     		ldr	r2, [r0]
 3293 0006 D368     		ldr	r3, [r2, #12]
 3294 0008 23F4F073 		bic	r3, r3, #480
 3295 000c D360     		str	r3, [r2, #12]
1284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3296              		.loc 1 1284 0
 3297 000e 0268     		ldr	r2, [r0]
 3298 0010 5369     		ldr	r3, [r2, #20]
 3299 0012 23F00103 		bic	r3, r3, #1
 3300 0016 5361     		str	r3, [r2, #20]
1289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3301              		.loc 1 1289 0
 3302 0018 036B     		ldr	r3, [r0, #48]
 3303 001a 33B1     		cbz	r3, .L237
1293:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3304              		.loc 1 1293 0
 3305 001c 0268     		ldr	r2, [r0]
 3306 001e 5269     		ldr	r2, [r2, #20]
 3307 0020 12F0800F 		tst	r2, #128
 3308 0024 1DD0     		beq	.L238
1295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 3309              		.loc 1 1295 0
 3310 0026 254A     		ldr	r2, .L249
 3311 0028 1A65     		str	r2, [r3, #80]
 3312              	.L237:
1303:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3313              		.loc 1 1303 0
 3314 002a 636B     		ldr	r3, [r4, #52]
 3315 002c 33B1     		cbz	r3, .L239
1307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3316              		.loc 1 1307 0
 3317 002e 2268     		ldr	r2, [r4]
 3318 0030 5269     		ldr	r2, [r2, #20]
 3319 0032 12F0400F 		tst	r2, #64
 3320 0036 17D0     		beq	.L240
1309:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 3321              		.loc 1 1309 0
 3322 0038 214A     		ldr	r2, .L249+4
 3323 003a 1A65     		str	r2, [r3, #80]
 3324              	.L239:
1318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3325              		.loc 1 1318 0
 3326 003c 2368     		ldr	r3, [r4]
 3327 003e 5A69     		ldr	r2, [r3, #20]
 3328 0040 12F0800F 		tst	r2, #128
 3329 0044 13D0     		beq	.L245
1321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3330              		.loc 1 1321 0
 3331 0046 5A69     		ldr	r2, [r3, #20]
 3332 0048 22F08002 		bic	r2, r2, #128
 3333 004c 5A61     		str	r2, [r3, #20]
1324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3334              		.loc 1 1324 0
ARM GAS  /tmp/ccUha3Mw.s 			page 111


 3335 004e 206B     		ldr	r0, [r4, #48]
 3336              	.LVL310:
 3337 0050 60B3     		cbz	r0, .L246
1330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 3338              		.loc 1 1330 0
 3339 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3340              	.LVL311:
 3341 0056 58B3     		cbz	r0, .L247
1332:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 3342              		.loc 1 1332 0
 3343 0058 236B     		ldr	r3, [r4, #48]
 3344 005a 0022     		movs	r2, #0
 3345 005c 1A65     		str	r2, [r3, #80]
1280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3346              		.loc 1 1280 0
 3347 005e 0121     		movs	r1, #1
 3348 0060 06E0     		b	.L241
 3349              	.LVL312:
 3350              	.L238:
1299:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 3351              		.loc 1 1299 0
 3352 0062 0022     		movs	r2, #0
 3353 0064 1A65     		str	r2, [r3, #80]
 3354 0066 E0E7     		b	.L237
 3355              	.L240:
1313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 3356              		.loc 1 1313 0
 3357 0068 0022     		movs	r2, #0
 3358 006a 1A65     		str	r2, [r3, #80]
 3359 006c E6E7     		b	.L239
 3360              	.L245:
1280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3361              		.loc 1 1280 0
 3362 006e 0121     		movs	r1, #1
 3363              	.LVL313:
 3364              	.L241:
1342:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3365              		.loc 1 1342 0
 3366 0070 2368     		ldr	r3, [r4]
 3367 0072 5A69     		ldr	r2, [r3, #20]
 3368 0074 12F0400F 		tst	r2, #64
 3369 0078 1CD0     		beq	.L242
1344:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3370              		.loc 1 1344 0
 3371 007a 5A69     		ldr	r2, [r3, #20]
 3372 007c 22F04002 		bic	r2, r2, #64
 3373 0080 5A61     		str	r2, [r3, #20]
1347:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3374              		.loc 1 1347 0
 3375 0082 606B     		ldr	r0, [r4, #52]
 3376 0084 B0B1     		cbz	r0, .L242
1353:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 3377              		.loc 1 1353 0
 3378 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3379              	.LVL314:
 3380 008a A8B1     		cbz	r0, .L243
1355:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****         AbortCplt = 0x01U;
ARM GAS  /tmp/ccUha3Mw.s 			page 112


 3381              		.loc 1 1355 0
 3382 008c 636B     		ldr	r3, [r4, #52]
 3383 008e 0022     		movs	r2, #0
 3384 0090 1A65     		str	r2, [r3, #80]
 3385              	.LVL315:
 3386              	.L244:
1369:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3387              		.loc 1 1369 0
 3388 0092 0023     		movs	r3, #0
 3389 0094 E384     		strh	r3, [r4, #38]	@ movhi
1370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3390              		.loc 1 1370 0
 3391 0096 E385     		strh	r3, [r4, #46]	@ movhi
1373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3392              		.loc 1 1373 0
 3393 0098 E363     		str	r3, [r4, #60]
1376:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3394              		.loc 1 1376 0
 3395 009a 2023     		movs	r3, #32
 3396 009c 84F83930 		strb	r3, [r4, #57]
1377:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3397              		.loc 1 1377 0
 3398 00a0 84F83A30 		strb	r3, [r4, #58]
1380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 3399              		.loc 1 1380 0
 3400 00a4 2046     		mov	r0, r4
 3401 00a6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3402              	.LVL316:
 3403 00aa 05E0     		b	.L243
 3404              	.LVL317:
 3405              	.L246:
1280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3406              		.loc 1 1280 0
 3407 00ac 0121     		movs	r1, #1
 3408 00ae DFE7     		b	.L241
 3409              	.L247:
1336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 3410              		.loc 1 1336 0
 3411 00b0 0021     		movs	r1, #0
 3412 00b2 DDE7     		b	.L241
 3413              	.LVL318:
 3414              	.L242:
1366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3415              		.loc 1 1366 0
 3416 00b4 0029     		cmp	r1, #0
 3417 00b6 ECD1     		bne	.L244
 3418              	.LVL319:
 3419              	.L243:
1384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3420              		.loc 1 1384 0
 3421 00b8 0020     		movs	r0, #0
 3422 00ba 10BD     		pop	{r4, pc}
 3423              	.LVL320:
 3424              	.L250:
 3425              		.align	2
 3426              	.L249:
 3427 00bc 00000000 		.word	UART_DMATxAbortCallback
ARM GAS  /tmp/ccUha3Mw.s 			page 113


 3428 00c0 00000000 		.word	UART_DMARxAbortCallback
 3429              		.cfi_endproc
 3430              	.LFE85:
 3432              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3433              		.align	1
 3434              		.syntax unified
 3435              		.thumb
 3436              		.thumb_func
 3437              		.fpu softvfp
 3439              	UART_DMARxAbortCallback:
 3440              	.LFB114:
2227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3441              		.loc 1 2227 0
 3442              		.cfi_startproc
 3443              		@ args = 0, pretend = 0, frame = 0
 3444              		@ frame_needed = 0, uses_anonymous_args = 0
 3445              	.LVL321:
 3446 0000 08B5     		push	{r3, lr}
 3447              	.LCFI41:
 3448              		.cfi_def_cfa_offset 8
 3449              		.cfi_offset 3, -8
 3450              		.cfi_offset 14, -4
2228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3451              		.loc 1 2228 0
 3452 0002 806B     		ldr	r0, [r0, #56]
 3453              	.LVL322:
2230:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3454              		.loc 1 2230 0
 3455 0004 436B     		ldr	r3, [r0, #52]
 3456 0006 0022     		movs	r2, #0
 3457 0008 1A65     		str	r2, [r3, #80]
2233:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3458              		.loc 1 2233 0
 3459 000a 036B     		ldr	r3, [r0, #48]
 3460 000c 13B1     		cbz	r3, .L252
2235:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3461              		.loc 1 2235 0
 3462 000e 1B6D     		ldr	r3, [r3, #80]
 3463 0010 03B1     		cbz	r3, .L252
 3464              	.LVL323:
 3465              	.L251:
2254:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3466              		.loc 1 2254 0
 3467 0012 08BD     		pop	{r3, pc}
 3468              	.LVL324:
 3469              	.L252:
2242:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3470              		.loc 1 2242 0
 3471 0014 0023     		movs	r3, #0
 3472 0016 C384     		strh	r3, [r0, #38]	@ movhi
2243:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3473              		.loc 1 2243 0
 3474 0018 C385     		strh	r3, [r0, #46]	@ movhi
2246:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3475              		.loc 1 2246 0
 3476 001a C363     		str	r3, [r0, #60]
2249:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccUha3Mw.s 			page 114


 3477              		.loc 1 2249 0
 3478 001c 2023     		movs	r3, #32
 3479 001e 80F83930 		strb	r3, [r0, #57]
2250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3480              		.loc 1 2250 0
 3481 0022 80F83A30 		strb	r3, [r0, #58]
2253:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 3482              		.loc 1 2253 0
 3483 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3484              	.LVL325:
 3485 002a F2E7     		b	.L251
 3486              		.cfi_endproc
 3487              	.LFE114:
 3489              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3490              		.align	1
 3491              		.syntax unified
 3492              		.thumb
 3493              		.thumb_func
 3494              		.fpu softvfp
 3496              	UART_DMATxAbortCallback:
 3497              	.LFB113:
2189:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3498              		.loc 1 2189 0
 3499              		.cfi_startproc
 3500              		@ args = 0, pretend = 0, frame = 0
 3501              		@ frame_needed = 0, uses_anonymous_args = 0
 3502              	.LVL326:
 3503 0000 08B5     		push	{r3, lr}
 3504              	.LCFI42:
 3505              		.cfi_def_cfa_offset 8
 3506              		.cfi_offset 3, -8
 3507              		.cfi_offset 14, -4
2190:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3508              		.loc 1 2190 0
 3509 0002 806B     		ldr	r0, [r0, #56]
 3510              	.LVL327:
2192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3511              		.loc 1 2192 0
 3512 0004 036B     		ldr	r3, [r0, #48]
 3513 0006 0022     		movs	r2, #0
 3514 0008 1A65     		str	r2, [r3, #80]
2195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3515              		.loc 1 2195 0
 3516 000a 436B     		ldr	r3, [r0, #52]
 3517 000c 13B1     		cbz	r3, .L256
2197:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3518              		.loc 1 2197 0
 3519 000e 1B6D     		ldr	r3, [r3, #80]
 3520 0010 03B1     		cbz	r3, .L256
 3521              	.LVL328:
 3522              	.L255:
2216:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3523              		.loc 1 2216 0
 3524 0012 08BD     		pop	{r3, pc}
 3525              	.LVL329:
 3526              	.L256:
2204:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
ARM GAS  /tmp/ccUha3Mw.s 			page 115


 3527              		.loc 1 2204 0
 3528 0014 0023     		movs	r3, #0
 3529 0016 C384     		strh	r3, [r0, #38]	@ movhi
2205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3530              		.loc 1 2205 0
 3531 0018 C385     		strh	r3, [r0, #46]	@ movhi
2208:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3532              		.loc 1 2208 0
 3533 001a C363     		str	r3, [r0, #60]
2211:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3534              		.loc 1 2211 0
 3535 001c 2023     		movs	r3, #32
 3536 001e 80F83930 		strb	r3, [r0, #57]
2212:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3537              		.loc 1 2212 0
 3538 0022 80F83A30 		strb	r3, [r0, #58]
2215:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 3539              		.loc 1 2215 0
 3540 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3541              	.LVL330:
 3542 002a F2E7     		b	.L255
 3543              		.cfi_endproc
 3544              	.LFE113:
 3546              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3547              		.align	1
 3548              		.weak	HAL_UART_AbortTransmitCpltCallback
 3549              		.syntax unified
 3550              		.thumb
 3551              		.thumb_func
 3552              		.fpu softvfp
 3554              	HAL_UART_AbortTransmitCpltCallback:
 3555              	.LFB95:
1739:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3556              		.loc 1 1739 0
 3557              		.cfi_startproc
 3558              		@ args = 0, pretend = 0, frame = 0
 3559              		@ frame_needed = 0, uses_anonymous_args = 0
 3560              		@ link register save eliminated.
 3561              	.LVL331:
1746:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3562              		.loc 1 1746 0
 3563 0000 7047     		bx	lr
 3564              		.cfi_endproc
 3565              	.LFE95:
 3567              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3568              		.align	1
 3569              		.global	HAL_UART_AbortTransmit_IT
 3570              		.syntax unified
 3571              		.thumb
 3572              		.thumb_func
 3573              		.fpu softvfp
 3575              	HAL_UART_AbortTransmit_IT:
 3576              	.LFB86:
1401:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3577              		.loc 1 1401 0
 3578              		.cfi_startproc
 3579              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccUha3Mw.s 			page 116


 3580              		@ frame_needed = 0, uses_anonymous_args = 0
 3581              	.LVL332:
 3582 0000 10B5     		push	{r4, lr}
 3583              	.LCFI43:
 3584              		.cfi_def_cfa_offset 8
 3585              		.cfi_offset 4, -8
 3586              		.cfi_offset 14, -4
 3587 0002 0446     		mov	r4, r0
1403:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3588              		.loc 1 1403 0
 3589 0004 0268     		ldr	r2, [r0]
 3590 0006 D368     		ldr	r3, [r2, #12]
 3591 0008 23F0C003 		bic	r3, r3, #192
 3592 000c D360     		str	r3, [r2, #12]
1406:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3593              		.loc 1 1406 0
 3594 000e 0368     		ldr	r3, [r0]
 3595 0010 5A69     		ldr	r2, [r3, #20]
 3596 0012 12F0800F 		tst	r2, #128
 3597 0016 18D0     		beq	.L261
1408:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3598              		.loc 1 1408 0
 3599 0018 5A69     		ldr	r2, [r3, #20]
 3600 001a 22F08002 		bic	r2, r2, #128
 3601 001e 5A61     		str	r2, [r3, #20]
1411:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3602              		.loc 1 1411 0
 3603 0020 036B     		ldr	r3, [r0, #48]
 3604 0022 53B1     		cbz	r3, .L262
1415:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3605              		.loc 1 1415 0
 3606 0024 0D4A     		ldr	r2, .L265
 3607 0026 1A65     		str	r2, [r3, #80]
1418:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 3608              		.loc 1 1418 0
 3609 0028 006B     		ldr	r0, [r0, #48]
 3610              	.LVL333:
 3611 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3612              	.LVL334:
 3613 002e 10B1     		cbz	r0, .L263
1421:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 3614              		.loc 1 1421 0
 3615 0030 206B     		ldr	r0, [r4, #48]
 3616 0032 036D     		ldr	r3, [r0, #80]
 3617 0034 9847     		blx	r3
 3618              	.LVL335:
 3619              	.L263:
1449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3620              		.loc 1 1449 0
 3621 0036 0020     		movs	r0, #0
 3622 0038 10BD     		pop	{r4, pc}
 3623              	.LVL336:
 3624              	.L262:
1427:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3625              		.loc 1 1427 0
 3626 003a 0023     		movs	r3, #0
 3627 003c C384     		strh	r3, [r0, #38]	@ movhi
ARM GAS  /tmp/ccUha3Mw.s 			page 117


1430:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3628              		.loc 1 1430 0
 3629 003e 2023     		movs	r3, #32
 3630 0040 80F83930 		strb	r3, [r0, #57]
1433:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 3631              		.loc 1 1433 0
 3632 0044 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3633              	.LVL337:
 3634 0048 F5E7     		b	.L263
 3635              	.LVL338:
 3636              	.L261:
1439:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3637              		.loc 1 1439 0
 3638 004a 0023     		movs	r3, #0
 3639 004c C384     		strh	r3, [r0, #38]	@ movhi
1442:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3640              		.loc 1 1442 0
 3641 004e 2023     		movs	r3, #32
 3642 0050 80F83930 		strb	r3, [r0, #57]
1445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 3643              		.loc 1 1445 0
 3644 0054 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3645              	.LVL339:
 3646 0058 EDE7     		b	.L263
 3647              	.L266:
 3648 005a 00BF     		.align	2
 3649              	.L265:
 3650 005c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3651              		.cfi_endproc
 3652              	.LFE86:
 3654              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3655              		.align	1
 3656              		.syntax unified
 3657              		.thumb
 3658              		.thumb_func
 3659              		.fpu softvfp
 3661              	UART_DMATxOnlyAbortCallback:
 3662              	.LFB115:
2265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3663              		.loc 1 2265 0
 3664              		.cfi_startproc
 3665              		@ args = 0, pretend = 0, frame = 0
 3666              		@ frame_needed = 0, uses_anonymous_args = 0
 3667              	.LVL340:
 3668 0000 08B5     		push	{r3, lr}
 3669              	.LCFI44:
 3670              		.cfi_def_cfa_offset 8
 3671              		.cfi_offset 3, -8
 3672              		.cfi_offset 14, -4
2266:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3673              		.loc 1 2266 0
 3674 0002 806B     		ldr	r0, [r0, #56]
 3675              	.LVL341:
2268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3676              		.loc 1 2268 0
 3677 0004 0023     		movs	r3, #0
 3678 0006 C384     		strh	r3, [r0, #38]	@ movhi
ARM GAS  /tmp/ccUha3Mw.s 			page 118


2271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3679              		.loc 1 2271 0
 3680 0008 2023     		movs	r3, #32
 3681 000a 80F83930 		strb	r3, [r0, #57]
2274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 3682              		.loc 1 2274 0
 3683 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3684              	.LVL342:
2275:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3685              		.loc 1 2275 0
 3686 0012 08BD     		pop	{r3, pc}
 3687              		.cfi_endproc
 3688              	.LFE115:
 3690              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3691              		.align	1
 3692              		.weak	HAL_UART_AbortReceiveCpltCallback
 3693              		.syntax unified
 3694              		.thumb
 3695              		.thumb_func
 3696              		.fpu softvfp
 3698              	HAL_UART_AbortReceiveCpltCallback:
 3699              	.LFB96:
1754:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3700              		.loc 1 1754 0
 3701              		.cfi_startproc
 3702              		@ args = 0, pretend = 0, frame = 0
 3703              		@ frame_needed = 0, uses_anonymous_args = 0
 3704              		@ link register save eliminated.
 3705              	.LVL343:
1761:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3706              		.loc 1 1761 0
 3707 0000 7047     		bx	lr
 3708              		.cfi_endproc
 3709              	.LFE96:
 3711              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3712              		.align	1
 3713              		.global	HAL_UART_AbortReceive_IT
 3714              		.syntax unified
 3715              		.thumb
 3716              		.thumb_func
 3717              		.fpu softvfp
 3719              	HAL_UART_AbortReceive_IT:
 3720              	.LFB87:
1466:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3721              		.loc 1 1466 0
 3722              		.cfi_startproc
 3723              		@ args = 0, pretend = 0, frame = 0
 3724              		@ frame_needed = 0, uses_anonymous_args = 0
 3725              	.LVL344:
 3726 0000 10B5     		push	{r4, lr}
 3727              	.LCFI45:
 3728              		.cfi_def_cfa_offset 8
 3729              		.cfi_offset 4, -8
 3730              		.cfi_offset 14, -4
 3731 0002 0446     		mov	r4, r0
1468:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3732              		.loc 1 1468 0
ARM GAS  /tmp/ccUha3Mw.s 			page 119


 3733 0004 0268     		ldr	r2, [r0]
 3734 0006 D368     		ldr	r3, [r2, #12]
 3735 0008 23F49073 		bic	r3, r3, #288
 3736 000c D360     		str	r3, [r2, #12]
1469:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3737              		.loc 1 1469 0
 3738 000e 0268     		ldr	r2, [r0]
 3739 0010 5369     		ldr	r3, [r2, #20]
 3740 0012 23F00103 		bic	r3, r3, #1
 3741 0016 5361     		str	r3, [r2, #20]
1472:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   {
 3742              		.loc 1 1472 0
 3743 0018 0368     		ldr	r3, [r0]
 3744 001a 5A69     		ldr	r2, [r3, #20]
 3745 001c 12F0400F 		tst	r2, #64
 3746 0020 18D0     		beq	.L271
1474:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3747              		.loc 1 1474 0
 3748 0022 5A69     		ldr	r2, [r3, #20]
 3749 0024 22F04002 		bic	r2, r2, #64
 3750 0028 5A61     		str	r2, [r3, #20]
1477:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     {
 3751              		.loc 1 1477 0
 3752 002a 436B     		ldr	r3, [r0, #52]
 3753 002c 53B1     		cbz	r3, .L272
1481:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3754              		.loc 1 1481 0
 3755 002e 0D4A     		ldr	r2, .L275
 3756 0030 1A65     		str	r2, [r3, #80]
1484:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       {
 3757              		.loc 1 1484 0
 3758 0032 406B     		ldr	r0, [r0, #52]
 3759              	.LVL345:
 3760 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3761              	.LVL346:
 3762 0038 10B1     		cbz	r0, .L273
1487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****       }
 3763              		.loc 1 1487 0
 3764 003a 606B     		ldr	r0, [r4, #52]
 3765 003c 036D     		ldr	r3, [r0, #80]
 3766 003e 9847     		blx	r3
 3767              	.LVL347:
 3768              	.L273:
1515:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3769              		.loc 1 1515 0
 3770 0040 0020     		movs	r0, #0
 3771 0042 10BD     		pop	{r4, pc}
 3772              	.LVL348:
 3773              	.L272:
1493:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3774              		.loc 1 1493 0
 3775 0044 0023     		movs	r3, #0
 3776 0046 C385     		strh	r3, [r0, #46]	@ movhi
1496:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3777              		.loc 1 1496 0
 3778 0048 2023     		movs	r3, #32
 3779 004a 80F83A30 		strb	r3, [r0, #58]
ARM GAS  /tmp/ccUha3Mw.s 			page 120


1499:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****     }
 3780              		.loc 1 1499 0
 3781 004e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3782              	.LVL349:
 3783 0052 F5E7     		b	.L273
 3784              	.LVL350:
 3785              	.L271:
1505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3786              		.loc 1 1505 0
 3787 0054 0023     		movs	r3, #0
 3788 0056 C385     		strh	r3, [r0, #46]	@ movhi
1508:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3789              		.loc 1 1508 0
 3790 0058 2023     		movs	r3, #32
 3791 005a 80F83A30 		strb	r3, [r0, #58]
1511:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   }
 3792              		.loc 1 1511 0
 3793 005e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3794              	.LVL351:
 3795 0062 EDE7     		b	.L273
 3796              	.L276:
 3797              		.align	2
 3798              	.L275:
 3799 0064 00000000 		.word	UART_DMARxOnlyAbortCallback
 3800              		.cfi_endproc
 3801              	.LFE87:
 3803              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3804              		.align	1
 3805              		.syntax unified
 3806              		.thumb
 3807              		.thumb_func
 3808              		.fpu softvfp
 3810              	UART_DMARxOnlyAbortCallback:
 3811              	.LFB116:
2286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3812              		.loc 1 2286 0
 3813              		.cfi_startproc
 3814              		@ args = 0, pretend = 0, frame = 0
 3815              		@ frame_needed = 0, uses_anonymous_args = 0
 3816              	.LVL352:
 3817 0000 08B5     		push	{r3, lr}
 3818              	.LCFI46:
 3819              		.cfi_def_cfa_offset 8
 3820              		.cfi_offset 3, -8
 3821              		.cfi_offset 14, -4
2287:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3822              		.loc 1 2287 0
 3823 0002 806B     		ldr	r0, [r0, #56]
 3824              	.LVL353:
2289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3825              		.loc 1 2289 0
 3826 0004 0023     		movs	r3, #0
 3827 0006 C385     		strh	r3, [r0, #46]	@ movhi
2292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3828              		.loc 1 2292 0
 3829 0008 2023     		movs	r3, #32
 3830 000a 80F83A30 		strb	r3, [r0, #58]
ARM GAS  /tmp/ccUha3Mw.s 			page 121


2295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 3831              		.loc 1 2295 0
 3832 000e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3833              	.LVL354:
2296:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3834              		.loc 1 2296 0
 3835 0012 08BD     		pop	{r3, pc}
 3836              		.cfi_endproc
 3837              	.LFE116:
 3839              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3840              		.align	1
 3841              		.global	HAL_LIN_SendBreak
 3842              		.syntax unified
 3843              		.thumb
 3844              		.thumb_func
 3845              		.fpu softvfp
 3847              	HAL_LIN_SendBreak:
 3848              	.LFB97:
1791:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the parameters */
 3849              		.loc 1 1791 0
 3850              		.cfi_startproc
 3851              		@ args = 0, pretend = 0, frame = 0
 3852              		@ frame_needed = 0, uses_anonymous_args = 0
 3853              		@ link register save eliminated.
 3854              	.LVL355:
1796:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3855              		.loc 1 1796 0
 3856 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3857 0004 012B     		cmp	r3, #1
 3858 0006 12D0     		beq	.L281
1796:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3859              		.loc 1 1796 0 is_stmt 0 discriminator 2
 3860 0008 0123     		movs	r3, #1
 3861 000a 80F83830 		strb	r3, [r0, #56]
1798:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3862              		.loc 1 1798 0 is_stmt 1 discriminator 2
 3863 000e 2423     		movs	r3, #36
 3864 0010 80F83930 		strb	r3, [r0, #57]
1801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****  
 3865              		.loc 1 1801 0 discriminator 2
 3866 0014 0268     		ldr	r2, [r0]
 3867 0016 D368     		ldr	r3, [r2, #12]
 3868 0018 43F00103 		orr	r3, r3, #1
 3869 001c D360     		str	r3, [r2, #12]
1803:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3870              		.loc 1 1803 0 discriminator 2
 3871 001e 2023     		movs	r3, #32
 3872 0020 80F83930 		strb	r3, [r0, #57]
1806:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3873              		.loc 1 1806 0 discriminator 2
 3874 0024 0023     		movs	r3, #0
 3875 0026 80F83830 		strb	r3, [r0, #56]
1808:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 3876              		.loc 1 1808 0 discriminator 2
 3877 002a 1846     		mov	r0, r3
 3878              	.LVL356:
 3879 002c 7047     		bx	lr
ARM GAS  /tmp/ccUha3Mw.s 			page 122


 3880              	.LVL357:
 3881              	.L281:
1796:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3882              		.loc 1 1796 0
 3883 002e 0220     		movs	r0, #2
 3884              	.LVL358:
1809:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3885              		.loc 1 1809 0
 3886 0030 7047     		bx	lr
 3887              		.cfi_endproc
 3888              	.LFE97:
 3890              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3891              		.align	1
 3892              		.global	HAL_MultiProcessor_EnterMuteMode
 3893              		.syntax unified
 3894              		.thumb
 3895              		.thumb_func
 3896              		.fpu softvfp
 3898              	HAL_MultiProcessor_EnterMuteMode:
 3899              	.LFB98:
1818:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the parameters */
 3900              		.loc 1 1818 0
 3901              		.cfi_startproc
 3902              		@ args = 0, pretend = 0, frame = 0
 3903              		@ frame_needed = 0, uses_anonymous_args = 0
 3904              		@ link register save eliminated.
 3905              	.LVL359:
1823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3906              		.loc 1 1823 0
 3907 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3908 0004 012B     		cmp	r3, #1
 3909 0006 12D0     		beq	.L284
1823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3910              		.loc 1 1823 0 is_stmt 0 discriminator 2
 3911 0008 0123     		movs	r3, #1
 3912 000a 80F83830 		strb	r3, [r0, #56]
1825:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3913              		.loc 1 1825 0 is_stmt 1 discriminator 2
 3914 000e 2423     		movs	r3, #36
 3915 0010 80F83930 		strb	r3, [r0, #57]
1828:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3916              		.loc 1 1828 0 discriminator 2
 3917 0014 0268     		ldr	r2, [r0]
 3918 0016 D368     		ldr	r3, [r2, #12]
 3919 0018 43F00203 		orr	r3, r3, #2
 3920 001c D360     		str	r3, [r2, #12]
1830:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3921              		.loc 1 1830 0 discriminator 2
 3922 001e 2023     		movs	r3, #32
 3923 0020 80F83930 		strb	r3, [r0, #57]
1833:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3924              		.loc 1 1833 0 discriminator 2
 3925 0024 0023     		movs	r3, #0
 3926 0026 80F83830 		strb	r3, [r0, #56]
1835:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 3927              		.loc 1 1835 0 discriminator 2
 3928 002a 1846     		mov	r0, r3
ARM GAS  /tmp/ccUha3Mw.s 			page 123


 3929              	.LVL360:
 3930 002c 7047     		bx	lr
 3931              	.LVL361:
 3932              	.L284:
1823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3933              		.loc 1 1823 0
 3934 002e 0220     		movs	r0, #2
 3935              	.LVL362:
1836:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3936              		.loc 1 1836 0
 3937 0030 7047     		bx	lr
 3938              		.cfi_endproc
 3939              	.LFE98:
 3941              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 3942              		.align	1
 3943              		.global	HAL_MultiProcessor_ExitMuteMode
 3944              		.syntax unified
 3945              		.thumb
 3946              		.thumb_func
 3947              		.fpu softvfp
 3949              	HAL_MultiProcessor_ExitMuteMode:
 3950              	.LFB99:
1845:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   /* Check the parameters */
 3951              		.loc 1 1845 0
 3952              		.cfi_startproc
 3953              		@ args = 0, pretend = 0, frame = 0
 3954              		@ frame_needed = 0, uses_anonymous_args = 0
 3955              		@ link register save eliminated.
 3956              	.LVL363:
1850:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3957              		.loc 1 1850 0
 3958 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3959 0004 012B     		cmp	r3, #1
 3960 0006 12D0     		beq	.L287
1850:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3961              		.loc 1 1850 0 is_stmt 0 discriminator 2
 3962 0008 0123     		movs	r3, #1
 3963 000a 80F83830 		strb	r3, [r0, #56]
1852:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3964              		.loc 1 1852 0 is_stmt 1 discriminator 2
 3965 000e 2423     		movs	r3, #36
 3966 0010 80F83930 		strb	r3, [r0, #57]
1855:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3967              		.loc 1 1855 0 discriminator 2
 3968 0014 0268     		ldr	r2, [r0]
 3969 0016 D368     		ldr	r3, [r2, #12]
 3970 0018 23F00203 		bic	r3, r3, #2
 3971 001c D360     		str	r3, [r2, #12]
1857:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3972              		.loc 1 1857 0 discriminator 2
 3973 001e 2023     		movs	r3, #32
 3974 0020 80F83930 		strb	r3, [r0, #57]
1860:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3975              		.loc 1 1860 0 discriminator 2
 3976 0024 0023     		movs	r3, #0
 3977 0026 80F83830 		strb	r3, [r0, #56]
1862:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
ARM GAS  /tmp/ccUha3Mw.s 			page 124


 3978              		.loc 1 1862 0 discriminator 2
 3979 002a 1846     		mov	r0, r3
 3980              	.LVL364:
 3981 002c 7047     		bx	lr
 3982              	.LVL365:
 3983              	.L287:
1850:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 3984              		.loc 1 1850 0
 3985 002e 0220     		movs	r0, #2
 3986              	.LVL366:
1863:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 3987              		.loc 1 1863 0
 3988 0030 7047     		bx	lr
 3989              		.cfi_endproc
 3990              	.LFE99:
 3992              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3993              		.align	1
 3994              		.global	HAL_HalfDuplex_EnableTransmitter
 3995              		.syntax unified
 3996              		.thumb
 3997              		.thumb_func
 3998              		.fpu softvfp
 4000              	HAL_HalfDuplex_EnableTransmitter:
 4001              	.LFB100:
1872:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4002              		.loc 1 1872 0
 4003              		.cfi_startproc
 4004              		@ args = 0, pretend = 0, frame = 0
 4005              		@ frame_needed = 0, uses_anonymous_args = 0
 4006              		@ link register save eliminated.
 4007              	.LVL367:
1876:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4008              		.loc 1 1876 0
 4009 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 4010 0004 012B     		cmp	r3, #1
 4011 0006 14D0     		beq	.L290
1876:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4012              		.loc 1 1876 0 is_stmt 0 discriminator 2
 4013 0008 0123     		movs	r3, #1
 4014 000a 80F83830 		strb	r3, [r0, #56]
1878:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 4015              		.loc 1 1878 0 is_stmt 1 discriminator 2
 4016 000e 2423     		movs	r3, #36
 4017 0010 80F83930 		strb	r3, [r0, #57]
1881:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4018              		.loc 1 1881 0 discriminator 2
 4019 0014 0268     		ldr	r2, [r0]
 4020 0016 D368     		ldr	r3, [r2, #12]
 4021              	.LVL368:
1884:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4022              		.loc 1 1884 0 discriminator 2
 4023 0018 23F00C03 		bic	r3, r3, #12
 4024              	.LVL369:
1887:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4025              		.loc 1 1887 0 discriminator 2
 4026 001c 43F00803 		orr	r3, r3, #8
 4027              	.LVL370:
ARM GAS  /tmp/ccUha3Mw.s 			page 125


1890:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****  
 4028              		.loc 1 1890 0 discriminator 2
 4029 0020 D360     		str	r3, [r2, #12]
1892:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4030              		.loc 1 1892 0 discriminator 2
 4031 0022 2023     		movs	r3, #32
 4032              	.LVL371:
 4033 0024 80F83930 		strb	r3, [r0, #57]
 4034              	.LVL372:
1895:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4035              		.loc 1 1895 0 discriminator 2
 4036 0028 0023     		movs	r3, #0
 4037 002a 80F83830 		strb	r3, [r0, #56]
1897:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 4038              		.loc 1 1897 0 discriminator 2
 4039 002e 1846     		mov	r0, r3
 4040              	.LVL373:
 4041 0030 7047     		bx	lr
 4042              	.LVL374:
 4043              	.L290:
1876:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4044              		.loc 1 1876 0
 4045 0032 0220     		movs	r0, #2
 4046              	.LVL375:
1898:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 4047              		.loc 1 1898 0
 4048 0034 7047     		bx	lr
 4049              		.cfi_endproc
 4050              	.LFE100:
 4052              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4053              		.align	1
 4054              		.global	HAL_HalfDuplex_EnableReceiver
 4055              		.syntax unified
 4056              		.thumb
 4057              		.thumb_func
 4058              		.fpu softvfp
 4060              	HAL_HalfDuplex_EnableReceiver:
 4061              	.LFB101:
1907:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4062              		.loc 1 1907 0
 4063              		.cfi_startproc
 4064              		@ args = 0, pretend = 0, frame = 0
 4065              		@ frame_needed = 0, uses_anonymous_args = 0
 4066              		@ link register save eliminated.
 4067              	.LVL376:
1911:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4068              		.loc 1 1911 0
 4069 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 4070 0004 012B     		cmp	r3, #1
 4071 0006 14D0     		beq	.L293
1911:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4072              		.loc 1 1911 0 is_stmt 0 discriminator 2
 4073 0008 0123     		movs	r3, #1
 4074 000a 80F83830 		strb	r3, [r0, #56]
1913:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 4075              		.loc 1 1913 0 is_stmt 1 discriminator 2
 4076 000e 2423     		movs	r3, #36
ARM GAS  /tmp/ccUha3Mw.s 			page 126


 4077 0010 80F83930 		strb	r3, [r0, #57]
1916:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4078              		.loc 1 1916 0 discriminator 2
 4079 0014 0268     		ldr	r2, [r0]
 4080 0016 D368     		ldr	r3, [r2, #12]
 4081              	.LVL377:
1919:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4082              		.loc 1 1919 0 discriminator 2
 4083 0018 23F00C03 		bic	r3, r3, #12
 4084              	.LVL378:
1922:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4085              		.loc 1 1922 0 discriminator 2
 4086 001c 43F00403 		orr	r3, r3, #4
 4087              	.LVL379:
1925:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4088              		.loc 1 1925 0 discriminator 2
 4089 0020 D360     		str	r3, [r2, #12]
1927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4090              		.loc 1 1927 0 discriminator 2
 4091 0022 2023     		movs	r3, #32
 4092              	.LVL380:
 4093 0024 80F83930 		strb	r3, [r0, #57]
 4094              	.LVL381:
1930:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4095              		.loc 1 1930 0 discriminator 2
 4096 0028 0023     		movs	r3, #0
 4097 002a 80F83830 		strb	r3, [r0, #56]
1932:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 4098              		.loc 1 1932 0 discriminator 2
 4099 002e 1846     		mov	r0, r3
 4100              	.LVL382:
 4101 0030 7047     		bx	lr
 4102              	.LVL383:
 4103              	.L293:
1911:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4104              		.loc 1 1911 0
 4105 0032 0220     		movs	r0, #2
 4106              	.LVL384:
1933:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 4107              		.loc 1 1933 0
 4108 0034 7047     		bx	lr
 4109              		.cfi_endproc
 4110              	.LFE101:
 4112              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4113              		.align	1
 4114              		.global	HAL_UART_GetState
 4115              		.syntax unified
 4116              		.thumb
 4117              		.thumb_func
 4118              		.fpu softvfp
 4120              	HAL_UART_GetState:
 4121              	.LFB102:
1964:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 4122              		.loc 1 1964 0
 4123              		.cfi_startproc
 4124              		@ args = 0, pretend = 0, frame = 0
 4125              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccUha3Mw.s 			page 127


 4126              		@ link register save eliminated.
 4127              	.LVL385:
1966:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   temp2 = huart->RxState;
 4128              		.loc 1 1966 0
 4129 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 4130              	.LVL386:
1967:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   
 4131              		.loc 1 1967 0
 4132 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
 4133              	.LVL387:
1970:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 4134              		.loc 1 1970 0
 4135 0008 1843     		orrs	r0, r0, r3
 4136              	.LVL388:
 4137 000a 7047     		bx	lr
 4138              		.cfi_endproc
 4139              	.LFE102:
 4141              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4142              		.align	1
 4143              		.global	HAL_UART_GetError
 4144              		.syntax unified
 4145              		.thumb
 4146              		.thumb_func
 4147              		.fpu softvfp
 4149              	HAL_UART_GetError:
 4150              	.LFB103:
1979:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c ****   return huart->ErrorCode;
 4151              		.loc 1 1979 0
 4152              		.cfi_startproc
 4153              		@ args = 0, pretend = 0, frame = 0
 4154              		@ frame_needed = 0, uses_anonymous_args = 0
 4155              		@ link register save eliminated.
 4156              	.LVL389:
1980:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** }
 4157              		.loc 1 1980 0
 4158 0000 C06B     		ldr	r0, [r0, #60]
 4159              	.LVL390:
1981:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c **** 
 4160              		.loc 1 1981 0
 4161 0002 7047     		bx	lr
 4162              		.cfi_endproc
 4163              	.LFE103:
 4165              		.text
 4166              	.Letext0:
 4167              		.file 2 "/home/nikita/software/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_d
 4168              		.file 3 "/home/nikita/software/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdin
 4169              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 4170              		.file 5 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/system_stm32f2xx.h"
 4171              		.file 6 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f205xx.h"
 4172              		.file 7 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f2xx.h"
 4173              		.file 8 "/home/nikita/software/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h
 4174              		.file 9 "/home/nikita/software/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types
 4175              		.file 10 "/home/nikita/software/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/inc
 4176              		.file 11 "/home/nikita/software/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent
 4177              		.file 12 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_def.h"
 4178              		.file 13 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_dma.h"
 4179              		.file 14 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_uart.h"
ARM GAS  /tmp/ccUha3Mw.s 			page 128


 4180              		.file 15 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_rcc.h"
 4181              		.file 16 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal.h"
ARM GAS  /tmp/ccUha3Mw.s 			page 129


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f2xx_hal_uart.c
     /tmp/ccUha3Mw.s:16     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccUha3Mw.s:22     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccUha3Mw.s:45     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccUha3Mw.s:51     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccUha3Mw.s:78     .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccUha3Mw.s:84     .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccUha3Mw.s:171    .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccUha3Mw.s:177    .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccUha3Mw.s:527    .text.UART_SetConfig:000000000000032c $d
     /tmp/ccUha3Mw.s:533    .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccUha3Mw.s:539    .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccUha3Mw.s:614    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccUha3Mw.s:621    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccUha3Mw.s:635    .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccUha3Mw.s:642    .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccUha3Mw.s:723    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccUha3Mw.s:730    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccUha3Mw.s:817    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccUha3Mw.s:824    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccUha3Mw.s:928    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccUha3Mw.s:935    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccUha3Mw.s:1044   .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccUha3Mw.s:1051   .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccUha3Mw.s:1065   .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccUha3Mw.s:1072   .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccUha3Mw.s:1120   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccUha3Mw.s:1127   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccUha3Mw.s:1313   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccUha3Mw.s:1320   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccUha3Mw.s:1511   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccUha3Mw.s:1518   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccUha3Mw.s:1593   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccUha3Mw.s:1600   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccUha3Mw.s:1680   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccUha3Mw.s:1687   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccUha3Mw.s:1799   .text.HAL_UART_Transmit_DMA:0000000000000080 $d
     /tmp/ccUha3Mw.s:2484   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccUha3Mw.s:2598   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccUha3Mw.s:2900   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccUha3Mw.s:1806   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccUha3Mw.s:1813   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccUha3Mw.s:1949   .text.HAL_UART_Receive_DMA:000000000000009c $d
     /tmp/ccUha3Mw.s:2649   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccUha3Mw.s:2849   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccUha3Mw.s:1956   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccUha3Mw.s:1963   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccUha3Mw.s:2050   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccUha3Mw.s:2057   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccUha3Mw.s:2151   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccUha3Mw.s:2158   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccUha3Mw.s:2247   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccUha3Mw.s:2254   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccUha3Mw.s:2336   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccUha3Mw.s:2343   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccUha3Mw.s:2394   .text.HAL_UART_AbortReceive:0000000000000000 $t
ARM GAS  /tmp/ccUha3Mw.s 			page 130


     /tmp/ccUha3Mw.s:2401   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccUha3Mw.s:2457   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccUha3Mw.s:2464   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccUha3Mw.s:2478   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccUha3Mw.s:2535   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccUha3Mw.s:2541   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccUha3Mw.s:2571   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccUha3Mw.s:2578   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccUha3Mw.s:2592   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccUha3Mw.s:2622   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccUha3Mw.s:2629   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccUha3Mw.s:2643   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccUha3Mw.s:2702   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccUha3Mw.s:2708   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccUha3Mw.s:2822   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccUha3Mw.s:2829   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccUha3Mw.s:2843   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccUha3Mw.s:2873   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccUha3Mw.s:2880   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccUha3Mw.s:2894   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccUha3Mw.s:2982   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccUha3Mw.s:2989   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccUha3Mw.s:3209   .text.HAL_UART_IRQHandler:000000000000011c $d
     /tmp/ccUha3Mw.s:3220   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccUha3Mw.s:3214   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccUha3Mw.s:3249   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccUha3Mw.s:3256   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccUha3Mw.s:3270   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccUha3Mw.s:3277   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccUha3Mw.s:3427   .text.HAL_UART_Abort_IT:00000000000000bc $d
     /tmp/ccUha3Mw.s:3496   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccUha3Mw.s:3439   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccUha3Mw.s:3433   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccUha3Mw.s:3490   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccUha3Mw.s:3547   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccUha3Mw.s:3554   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccUha3Mw.s:3568   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccUha3Mw.s:3575   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccUha3Mw.s:3650   .text.HAL_UART_AbortTransmit_IT:000000000000005c $d
     /tmp/ccUha3Mw.s:3661   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccUha3Mw.s:3655   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccUha3Mw.s:3691   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccUha3Mw.s:3698   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccUha3Mw.s:3712   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccUha3Mw.s:3719   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccUha3Mw.s:3799   .text.HAL_UART_AbortReceive_IT:0000000000000064 $d
     /tmp/ccUha3Mw.s:3810   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccUha3Mw.s:3804   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccUha3Mw.s:3840   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccUha3Mw.s:3847   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccUha3Mw.s:3891   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccUha3Mw.s:3898   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccUha3Mw.s:3942   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/ccUha3Mw.s:3949   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/ccUha3Mw.s:3993   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccUha3Mw.s:4000   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccUha3Mw.s:4053   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
ARM GAS  /tmp/ccUha3Mw.s 			page 131


     /tmp/ccUha3Mw.s:4060   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccUha3Mw.s:4113   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccUha3Mw.s:4120   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccUha3Mw.s:4142   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccUha3Mw.s:4149   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
